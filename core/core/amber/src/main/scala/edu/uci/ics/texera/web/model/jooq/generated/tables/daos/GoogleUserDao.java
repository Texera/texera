/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.web.model.jooq.generated.tables.daos;


import edu.uci.ics.texera.web.model.jooq.generated.tables.GoogleUser;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.GoogleUserRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GoogleUserDao extends DAOImpl<GoogleUserRecord, edu.uci.ics.texera.web.model.jooq.generated.tables.pojos.GoogleUser, String> {

    /**
     * Create a new GoogleUserDao without any configuration
     */
    public GoogleUserDao() {
        super(GoogleUser.GOOGLE_USER, edu.uci.ics.texera.web.model.jooq.generated.tables.pojos.GoogleUser.class);
    }

    /**
     * Create a new GoogleUserDao with an attached configuration
     */
    public GoogleUserDao(Configuration configuration) {
        super(GoogleUser.GOOGLE_USER, edu.uci.ics.texera.web.model.jooq.generated.tables.pojos.GoogleUser.class, configuration);
    }

    @Override
    public String getId(edu.uci.ics.texera.web.model.jooq.generated.tables.pojos.GoogleUser object) {
        return object.getUid();
    }

    /**
     * Fetch records that have <code>uid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<edu.uci.ics.texera.web.model.jooq.generated.tables.pojos.GoogleUser> fetchRangeOfUid(String lowerInclusive, String upperInclusive) {
        return fetchRange(GoogleUser.GOOGLE_USER.UID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uid IN (values)</code>
     */
    public List<edu.uci.ics.texera.web.model.jooq.generated.tables.pojos.GoogleUser> fetchByUid(String... values) {
        return fetch(GoogleUser.GOOGLE_USER.UID, values);
    }

    /**
     * Fetch a unique record that has <code>uid = value</code>
     */
    public edu.uci.ics.texera.web.model.jooq.generated.tables.pojos.GoogleUser fetchOneByUid(String value) {
        return fetchOne(GoogleUser.GOOGLE_USER.UID, value);
    }
}
