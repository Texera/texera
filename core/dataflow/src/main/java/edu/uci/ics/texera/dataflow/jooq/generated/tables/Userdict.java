/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.dataflow.jooq.generated.tables;


import edu.uci.ics.texera.dataflow.jooq.generated.Indexes;
import edu.uci.ics.texera.dataflow.jooq.generated.Keys;
import edu.uci.ics.texera.dataflow.jooq.generated.Texera;
import edu.uci.ics.texera.dataflow.jooq.generated.tables.records.UserdictRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Userdict extends TableImpl<UserdictRecord> {

    private static final long serialVersionUID = 810480076;

    /**
     * The reference instance of <code>texera.UserDict</code>
     */
    public static final Userdict USERDICT = new Userdict();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserdictRecord> getRecordType() {
        return UserdictRecord.class;
    }

    /**
     * The column <code>texera.UserDict.userID</code>.
     */
    public final TableField<UserdictRecord, UInteger> USERID = createField(DSL.name("userID"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>texera.UserDict.dictID</code>.
     */
    public final TableField<UserdictRecord, UInteger> DICTID = createField(DSL.name("dictID"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>texera.UserDict.name</code>.
     */
    public final TableField<UserdictRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>texera.UserDict.content</code>.
     */
    public final TableField<UserdictRecord, byte[]> CONTENT = createField(DSL.name("content"), org.jooq.impl.SQLDataType.BLOB.nullable(false), this, "");

    /**
     * The column <code>texera.UserDict.description</code>.
     */
    public final TableField<UserdictRecord, String> DESCRIPTION = createField(DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(512).nullable(false), this, "");

    /**
     * Create a <code>texera.UserDict</code> table reference
     */
    public Userdict() {
        this(DSL.name("UserDict"), null);
    }

    /**
     * Create an aliased <code>texera.UserDict</code> table reference
     */
    public Userdict(String alias) {
        this(DSL.name(alias), USERDICT);
    }

    /**
     * Create an aliased <code>texera.UserDict</code> table reference
     */
    public Userdict(Name alias) {
        this(alias, USERDICT);
    }

    private Userdict(Name alias, Table<UserdictRecord> aliased) {
        this(alias, aliased, null);
    }

    private Userdict(Name alias, Table<UserdictRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Userdict(Table<O> child, ForeignKey<O, UserdictRecord> key) {
        super(child, key, USERDICT);
    }

    @Override
    public Schema getSchema() {
        return Texera.TEXERA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USERDICT_PRIMARY, Indexes.USERDICT_USERID);
    }

    @Override
    public Identity<UserdictRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_USERDICT;
    }

    @Override
    public UniqueKey<UserdictRecord> getPrimaryKey() {
        return Keys.KEY_USERDICT_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserdictRecord>> getKeys() {
        return Arrays.<UniqueKey<UserdictRecord>>asList(Keys.KEY_USERDICT_USERID, Keys.KEY_USERDICT_PRIMARY);
    }

    @Override
    public List<ForeignKey<UserdictRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserdictRecord, ?>>asList(Keys.USERDICT_IBFK_1);
    }

    public Useraccount useraccount() {
        return new Useraccount(this, Keys.USERDICT_IBFK_1);
    }

    @Override
    public Userdict as(String alias) {
        return new Userdict(DSL.name(alias), this);
    }

    @Override
    public Userdict as(Name alias) {
        return new Userdict(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Userdict rename(String name) {
        return new Userdict(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Userdict rename(Name name) {
        return new Userdict(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<UInteger, UInteger, String, byte[], String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
