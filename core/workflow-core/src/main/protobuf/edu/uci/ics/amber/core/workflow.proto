// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

syntax = "proto3";

package edu.uci.ics.amber.core;

import "edu/uci/ics/amber/core/virtualidentity.proto";
import "scalapb/scalapb.proto";

option (scalapb.options) = {
  scope: FILE,
  preserve_unknown_fields: false,
  no_default_values_in_constructor: false
};

message PortIdentity {
  int32 id = 1;
  bool internal = 2;
}

message GlobalPortIdentity{
  PhysicalOpIdentity opId = 1 [(scalapb.field).no_box = true];
  PortIdentity portId = 2 [(scalapb.field).no_box = true];
  bool input = 3;
}

message InputPort {
  PortIdentity id = 1 [(scalapb.field).no_box = true];
  string displayName = 2;
  bool allowMultiLinks = 3;
  repeated PortIdentity dependencies = 4;
}



message OutputPort {
  enum OutputMode {
    // outputs complete result set snapshot for each update
    SET_SNAPSHOT = 0;
    // outputs incremental result set delta for each update
    SET_DELTA = 1;
    // outputs a single snapshot for the entire execution,
    // used explicitly to support visualization operators that may exceed the memory limit
    // TODO: remove this mode after we have a better solution for output size limit
    SINGLE_SNAPSHOT  = 2;
  }
  PortIdentity id = 1 [(scalapb.field).no_box = true];
  string displayName = 2;
  bool blocking = 3;
  OutputMode mode = 4;
}


message PhysicalLink {
  PhysicalOpIdentity fromOpId = 1 [(scalapb.field).no_box = true];
  PortIdentity fromPortId = 2 [(scalapb.field).no_box = true];
  PhysicalOpIdentity toOpId = 3 [(scalapb.field).no_box = true];
  PortIdentity toPortId = 4 [(scalapb.field).no_box = true];
}
