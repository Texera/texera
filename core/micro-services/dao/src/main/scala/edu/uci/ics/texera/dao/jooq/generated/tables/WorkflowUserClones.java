/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.dao.jooq.generated.tables;


import edu.uci.ics.texera.dao.jooq.generated.Indexes;
import edu.uci.ics.texera.dao.jooq.generated.Keys;
import edu.uci.ics.texera.dao.jooq.generated.TexeraDb;
import edu.uci.ics.texera.dao.jooq.generated.tables.records.WorkflowUserClonesRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkflowUserClones extends TableImpl<WorkflowUserClonesRecord> {

    private static final long serialVersionUID = 2096098879;

    /**
     * The reference instance of <code>texera_db.workflow_user_clones</code>
     */
    public static final WorkflowUserClones WORKFLOW_USER_CLONES = new WorkflowUserClones();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WorkflowUserClonesRecord> getRecordType() {
        return WorkflowUserClonesRecord.class;
    }

    /**
     * The column <code>texera_db.workflow_user_clones.uid</code>.
     */
    public final TableField<WorkflowUserClonesRecord, UInteger> UID = createField(DSL.name("uid"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>texera_db.workflow_user_clones.wid</code>.
     */
    public final TableField<WorkflowUserClonesRecord, UInteger> WID = createField(DSL.name("wid"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * Create a <code>texera_db.workflow_user_clones</code> table reference
     */
    public WorkflowUserClones() {
        this(DSL.name("workflow_user_clones"), null);
    }

    /**
     * Create an aliased <code>texera_db.workflow_user_clones</code> table reference
     */
    public WorkflowUserClones(String alias) {
        this(DSL.name(alias), WORKFLOW_USER_CLONES);
    }

    /**
     * Create an aliased <code>texera_db.workflow_user_clones</code> table reference
     */
    public WorkflowUserClones(Name alias) {
        this(alias, WORKFLOW_USER_CLONES);
    }

    private WorkflowUserClones(Name alias, Table<WorkflowUserClonesRecord> aliased) {
        this(alias, aliased, null);
    }

    private WorkflowUserClones(Name alias, Table<WorkflowUserClonesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> WorkflowUserClones(Table<O> child, ForeignKey<O, WorkflowUserClonesRecord> key) {
        super(child, key, WORKFLOW_USER_CLONES);
    }

    @Override
    public Schema getSchema() {
        return TexeraDb.TEXERA_DB;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WORKFLOW_USER_CLONES_PRIMARY, Indexes.WORKFLOW_USER_CLONES_WID);
    }

    @Override
    public UniqueKey<WorkflowUserClonesRecord> getPrimaryKey() {
        return Keys.KEY_WORKFLOW_USER_CLONES_PRIMARY;
    }

    @Override
    public List<UniqueKey<WorkflowUserClonesRecord>> getKeys() {
        return Arrays.<UniqueKey<WorkflowUserClonesRecord>>asList(Keys.KEY_WORKFLOW_USER_CLONES_PRIMARY);
    }

    @Override
    public List<ForeignKey<WorkflowUserClonesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<WorkflowUserClonesRecord, ?>>asList(Keys.WORKFLOW_USER_CLONES_IBFK_1, Keys.WORKFLOW_USER_CLONES_IBFK_2);
    }

    public User user() {
        return new User(this, Keys.WORKFLOW_USER_CLONES_IBFK_1);
    }

    public Workflow workflow() {
        return new Workflow(this, Keys.WORKFLOW_USER_CLONES_IBFK_2);
    }

    @Override
    public WorkflowUserClones as(String alias) {
        return new WorkflowUserClones(DSL.name(alias), this);
    }

    @Override
    public WorkflowUserClones as(Name alias) {
        return new WorkflowUserClones(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WorkflowUserClones rename(String name) {
        return new WorkflowUserClones(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WorkflowUserClones rename(Name name) {
        return new WorkflowUserClones(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<UInteger, UInteger> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
