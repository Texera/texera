/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.dao.jooq.generated.tables.records;


import edu.uci.ics.texera.dao.jooq.generated.tables.DatasetVersion;
import edu.uci.ics.texera.dao.jooq.generated.tables.interfaces.IDatasetVersion;

import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DatasetVersionRecord extends UpdatableRecordImpl<DatasetVersionRecord> implements Record6<Integer, Integer, Integer, String, String, Timestamp>, IDatasetVersion {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>texera_db.dataset_version.dvid</code>.
     */
    @Override
    public void setDvid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>texera_db.dataset_version.dvid</code>.
     */
    @Override
    public Integer getDvid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>texera_db.dataset_version.did</code>.
     */
    @Override
    public void setDid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>texera_db.dataset_version.did</code>.
     */
    @Override
    public Integer getDid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>texera_db.dataset_version.creator_uid</code>.
     */
    @Override
    public void setCreatorUid(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>texera_db.dataset_version.creator_uid</code>.
     */
    @Override
    public Integer getCreatorUid() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>texera_db.dataset_version.name</code>.
     */
    @Override
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>texera_db.dataset_version.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>texera_db.dataset_version.version_hash</code>.
     */
    @Override
    public void setVersionHash(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>texera_db.dataset_version.version_hash</code>.
     */
    @Override
    public String getVersionHash() {
        return (String) get(4);
    }

    /**
     * Setter for <code>texera_db.dataset_version.creation_time</code>.
     */
    @Override
    public void setCreationTime(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>texera_db.dataset_version.creation_time</code>.
     */
    @Override
    public Timestamp getCreationTime() {
        return (Timestamp) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, Integer, String, String, Timestamp> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, Integer, Integer, String, String, Timestamp> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return DatasetVersion.DATASET_VERSION.DVID;
    }

    @Override
    public Field<Integer> field2() {
        return DatasetVersion.DATASET_VERSION.DID;
    }

    @Override
    public Field<Integer> field3() {
        return DatasetVersion.DATASET_VERSION.CREATOR_UID;
    }

    @Override
    public Field<String> field4() {
        return DatasetVersion.DATASET_VERSION.NAME;
    }

    @Override
    public Field<String> field5() {
        return DatasetVersion.DATASET_VERSION.VERSION_HASH;
    }

    @Override
    public Field<Timestamp> field6() {
        return DatasetVersion.DATASET_VERSION.CREATION_TIME;
    }

    @Override
    public Integer component1() {
        return getDvid();
    }

    @Override
    public Integer component2() {
        return getDid();
    }

    @Override
    public Integer component3() {
        return getCreatorUid();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getVersionHash();
    }

    @Override
    public Timestamp component6() {
        return getCreationTime();
    }

    @Override
    public Integer value1() {
        return getDvid();
    }

    @Override
    public Integer value2() {
        return getDid();
    }

    @Override
    public Integer value3() {
        return getCreatorUid();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getVersionHash();
    }

    @Override
    public Timestamp value6() {
        return getCreationTime();
    }

    @Override
    public DatasetVersionRecord value1(Integer value) {
        setDvid(value);
        return this;
    }

    @Override
    public DatasetVersionRecord value2(Integer value) {
        setDid(value);
        return this;
    }

    @Override
    public DatasetVersionRecord value3(Integer value) {
        setCreatorUid(value);
        return this;
    }

    @Override
    public DatasetVersionRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public DatasetVersionRecord value5(String value) {
        setVersionHash(value);
        return this;
    }

    @Override
    public DatasetVersionRecord value6(Timestamp value) {
        setCreationTime(value);
        return this;
    }

    @Override
    public DatasetVersionRecord values(Integer value1, Integer value2, Integer value3, String value4, String value5, Timestamp value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDatasetVersion from) {
        setDvid(from.getDvid());
        setDid(from.getDid());
        setCreatorUid(from.getCreatorUid());
        setName(from.getName());
        setVersionHash(from.getVersionHash());
        setCreationTime(from.getCreationTime());
    }

    @Override
    public <E extends IDatasetVersion> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DatasetVersionRecord
     */
    public DatasetVersionRecord() {
        super(DatasetVersion.DATASET_VERSION);
    }

    /**
     * Create a detached, initialised DatasetVersionRecord
     */
    public DatasetVersionRecord(Integer dvid, Integer did, Integer creatorUid, String name, String versionHash, Timestamp creationTime) {
        super(DatasetVersion.DATASET_VERSION);

        setDvid(dvid);
        setDid(did);
        setCreatorUid(creatorUid);
        setName(name);
        setVersionHash(versionHash);
        setCreationTime(creationTime);
    }

    /**
     * Create a detached, initialised DatasetVersionRecord
     */
    public DatasetVersionRecord(edu.uci.ics.texera.dao.jooq.generated.tables.pojos.DatasetVersion value) {
        super(DatasetVersion.DATASET_VERSION);

        if (value != null) {
            setDvid(value.getDvid());
            setDid(value.getDid());
            setCreatorUid(value.getCreatorUid());
            setName(value.getName());
            setVersionHash(value.getVersionHash());
            setCreationTime(value.getCreationTime());
        }
    }
}
