/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.dao.jooq.generated.tables.daos;


import edu.uci.ics.texera.dao.jooq.generated.enums.UserRoleEnum;
import edu.uci.ics.texera.dao.jooq.generated.tables.User;
import edu.uci.ics.texera.dao.jooq.generated.tables.records.UserRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDao extends DAOImpl<UserRecord, edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User, Integer> {

    /**
     * Create a new UserDao without any configuration
     */
    public UserDao() {
        super(User.USER, edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User.class);
    }

    /**
     * Create a new UserDao with an attached configuration
     */
    public UserDao(Configuration configuration) {
        super(User.USER, edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User.class, configuration);
    }

    @Override
    public Integer getId(edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User object) {
        return object.getUid();
    }

    /**
     * Fetch records that have <code>uid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User> fetchRangeOfUid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(User.USER.UID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uid IN (values)</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User> fetchByUid(Integer... values) {
        return fetch(User.USER.UID, values);
    }

    /**
     * Fetch a unique record that has <code>uid = value</code>
     */
    public edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User fetchOneByUid(Integer value) {
        return fetchOne(User.USER.UID, value);
    }

    /**
     * Fetch a unique record that has <code>uid = value</code>
     */
    public Optional<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User> fetchOptionalByUid(Integer value) {
        return fetchOptional(User.USER.UID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User> fetchByName(String... values) {
        return fetch(User.USER.NAME, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User> fetchByEmail(String... values) {
        return fetch(User.USER.EMAIL, values);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User fetchOneByEmail(String value) {
        return fetchOne(User.USER.EMAIL, value);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public Optional<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User> fetchOptionalByEmail(String value) {
        return fetchOptional(User.USER.EMAIL, value);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User> fetchRangeOfPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User> fetchByPassword(String... values) {
        return fetch(User.USER.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>google_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User> fetchRangeOfGoogleId(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.GOOGLE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>google_id IN (values)</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User> fetchByGoogleId(String... values) {
        return fetch(User.USER.GOOGLE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>google_id = value</code>
     */
    public edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User fetchOneByGoogleId(String value) {
        return fetchOne(User.USER.GOOGLE_ID, value);
    }

    /**
     * Fetch a unique record that has <code>google_id = value</code>
     */
    public Optional<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User> fetchOptionalByGoogleId(String value) {
        return fetchOptional(User.USER.GOOGLE_ID, value);
    }

    /**
     * Fetch records that have <code>google_avatar BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User> fetchRangeOfGoogleAvatar(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.GOOGLE_AVATAR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>google_avatar IN (values)</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User> fetchByGoogleAvatar(String... values) {
        return fetch(User.USER.GOOGLE_AVATAR, values);
    }

    /**
     * Fetch records that have <code>role BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User> fetchRangeOfRole(UserRoleEnum lowerInclusive, UserRoleEnum upperInclusive) {
        return fetchRange(User.USER.ROLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role IN (values)</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User> fetchByRole(UserRoleEnum... values) {
        return fetch(User.USER.ROLE, values);
    }

    /**
     * Fetch records that have <code>comment BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User> fetchRangeOfComment(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.COMMENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>comment IN (values)</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.User> fetchByComment(String... values) {
        return fetch(User.USER.COMMENT, values);
    }
}
