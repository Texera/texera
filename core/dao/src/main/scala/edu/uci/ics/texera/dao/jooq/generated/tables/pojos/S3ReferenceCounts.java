/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.dao.jooq.generated.tables.pojos;


import edu.uci.ics.texera.dao.jooq.generated.tables.interfaces.IS3ReferenceCounts;

import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class S3ReferenceCounts implements IS3ReferenceCounts {

    private static final long serialVersionUID = 1L;

    private String         s3Uri;
    private Integer        referenceCount;
    private OffsetDateTime createdAt;
    private OffsetDateTime updatedAt;

    public S3ReferenceCounts() {}

    public S3ReferenceCounts(IS3ReferenceCounts value) {
        this.s3Uri = value.getS3Uri();
        this.referenceCount = value.getReferenceCount();
        this.createdAt = value.getCreatedAt();
        this.updatedAt = value.getUpdatedAt();
    }

    public S3ReferenceCounts(
        String         s3Uri,
        Integer        referenceCount,
        OffsetDateTime createdAt,
        OffsetDateTime updatedAt
    ) {
        this.s3Uri = s3Uri;
        this.referenceCount = referenceCount;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>texera_db.s3_reference_counts.s3_uri</code>.
     */
    @Override
    public String getS3Uri() {
        return this.s3Uri;
    }

    /**
     * Setter for <code>texera_db.s3_reference_counts.s3_uri</code>.
     */
    @Override
    public void setS3Uri(String s3Uri) {
        this.s3Uri = s3Uri;
    }

    /**
     * Getter for <code>texera_db.s3_reference_counts.reference_count</code>.
     */
    @Override
    public Integer getReferenceCount() {
        return this.referenceCount;
    }

    /**
     * Setter for <code>texera_db.s3_reference_counts.reference_count</code>.
     */
    @Override
    public void setReferenceCount(Integer referenceCount) {
        this.referenceCount = referenceCount;
    }

    /**
     * Getter for <code>texera_db.s3_reference_counts.created_at</code>.
     */
    @Override
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>texera_db.s3_reference_counts.created_at</code>.
     */
    @Override
    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>texera_db.s3_reference_counts.updated_at</code>.
     */
    @Override
    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>texera_db.s3_reference_counts.updated_at</code>.
     */
    @Override
    public void setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("S3ReferenceCounts (");

        sb.append(s3Uri);
        sb.append(", ").append(referenceCount);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IS3ReferenceCounts from) {
        setS3Uri(from.getS3Uri());
        setReferenceCount(from.getReferenceCount());
        setCreatedAt(from.getCreatedAt());
        setUpdatedAt(from.getUpdatedAt());
    }

    @Override
    public <E extends IS3ReferenceCounts> E into(E into) {
        into.from(this);
        return into;
    }
}
