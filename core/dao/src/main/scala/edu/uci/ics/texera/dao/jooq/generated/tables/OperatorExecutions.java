/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.dao.jooq.generated.tables;


import edu.uci.ics.texera.dao.jooq.generated.Indexes;
import edu.uci.ics.texera.dao.jooq.generated.Keys;
import edu.uci.ics.texera.dao.jooq.generated.TexeraDb;
import edu.uci.ics.texera.dao.jooq.generated.tables.records.OperatorExecutionsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OperatorExecutions extends TableImpl<OperatorExecutionsRecord> {

    private static final long serialVersionUID = 1254946167;

    /**
     * The reference instance of <code>texera_db.operator_executions</code>
     */
    public static final OperatorExecutions OPERATOR_EXECUTIONS = new OperatorExecutions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OperatorExecutionsRecord> getRecordType() {
        return OperatorExecutionsRecord.class;
    }

    /**
     * The column <code>texera_db.operator_executions.operator_execution_id</code>.
     */
    public final TableField<OperatorExecutionsRecord, ULong> OPERATOR_EXECUTION_ID = createField(DSL.name("operator_execution_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>texera_db.operator_executions.workflow_execution_id</code>.
     */
    public final TableField<OperatorExecutionsRecord, UInteger> WORKFLOW_EXECUTION_ID = createField(DSL.name("workflow_execution_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>texera_db.operator_executions.operator_id</code>.
     */
    public final TableField<OperatorExecutionsRecord, String> OPERATOR_ID = createField(DSL.name("operator_id"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * Create a <code>texera_db.operator_executions</code> table reference
     */
    public OperatorExecutions() {
        this(DSL.name("operator_executions"), null);
    }

    /**
     * Create an aliased <code>texera_db.operator_executions</code> table reference
     */
    public OperatorExecutions(String alias) {
        this(DSL.name(alias), OPERATOR_EXECUTIONS);
    }

    /**
     * Create an aliased <code>texera_db.operator_executions</code> table reference
     */
    public OperatorExecutions(Name alias) {
        this(alias, OPERATOR_EXECUTIONS);
    }

    private OperatorExecutions(Name alias, Table<OperatorExecutionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private OperatorExecutions(Name alias, Table<OperatorExecutionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> OperatorExecutions(Table<O> child, ForeignKey<O, OperatorExecutionsRecord> key) {
        super(child, key, OPERATOR_EXECUTIONS);
    }

    @Override
    public Schema getSchema() {
        return TexeraDb.TEXERA_DB;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.OPERATOR_EXECUTIONS_PRIMARY, Indexes.OPERATOR_EXECUTIONS_WORKFLOW_EXECUTION_ID);
    }

    @Override
    public Identity<OperatorExecutionsRecord, ULong> getIdentity() {
        return Keys.IDENTITY_OPERATOR_EXECUTIONS;
    }

    @Override
    public UniqueKey<OperatorExecutionsRecord> getPrimaryKey() {
        return Keys.KEY_OPERATOR_EXECUTIONS_PRIMARY;
    }

    @Override
    public List<UniqueKey<OperatorExecutionsRecord>> getKeys() {
        return Arrays.<UniqueKey<OperatorExecutionsRecord>>asList(Keys.KEY_OPERATOR_EXECUTIONS_PRIMARY, Keys.KEY_OPERATOR_EXECUTIONS_WORKFLOW_EXECUTION_ID);
    }

    @Override
    public List<ForeignKey<OperatorExecutionsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<OperatorExecutionsRecord, ?>>asList(Keys.OPERATOR_EXECUTIONS_IBFK_1);
    }

    public WorkflowExecutions workflowExecutions() {
        return new WorkflowExecutions(this, Keys.OPERATOR_EXECUTIONS_IBFK_1);
    }

    @Override
    public OperatorExecutions as(String alias) {
        return new OperatorExecutions(DSL.name(alias), this);
    }

    @Override
    public OperatorExecutions as(Name alias) {
        return new OperatorExecutions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OperatorExecutions rename(String name) {
        return new OperatorExecutions(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OperatorExecutions rename(Name name) {
        return new OperatorExecutions(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<ULong, UInteger, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
