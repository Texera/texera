/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.dao.jooq.generated.tables;


import edu.uci.ics.texera.dao.jooq.generated.Keys;
import edu.uci.ics.texera.dao.jooq.generated.TexeraDb;
import edu.uci.ics.texera.dao.jooq.generated.tables.records.WorkflowRecord;

import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Workflow extends TableImpl<WorkflowRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>texera_db.workflow</code>
     */
    public static final Workflow WORKFLOW = new Workflow();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WorkflowRecord> getRecordType() {
        return WorkflowRecord.class;
    }

    /**
     * The column <code>texera_db.workflow.wid</code>.
     */
    public final TableField<WorkflowRecord, Integer> WID = createField(DSL.name("wid"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>texera_db.workflow.name</code>.
     */
    public final TableField<WorkflowRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>texera_db.workflow.description</code>.
     */
    public final TableField<WorkflowRecord, String> DESCRIPTION = createField(DSL.name("description"), SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>texera_db.workflow.content</code>.
     */
    public final TableField<WorkflowRecord, String> CONTENT = createField(DSL.name("content"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>texera_db.workflow.creation_time</code>.
     */
    public final TableField<WorkflowRecord, Timestamp> CREATION_TIME = createField(DSL.name("creation_time"), SQLDataType.TIMESTAMP(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>texera_db.workflow.last_modified_time</code>.
     */
    public final TableField<WorkflowRecord, Timestamp> LAST_MODIFIED_TIME = createField(DSL.name("last_modified_time"), SQLDataType.TIMESTAMP(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>texera_db.workflow.is_public</code>.
     */
    public final TableField<WorkflowRecord, Boolean> IS_PUBLIC = createField(DSL.name("is_public"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.field("false", SQLDataType.BOOLEAN)), this, "");

    private Workflow(Name alias, Table<WorkflowRecord> aliased) {
        this(alias, aliased, null);
    }

    private Workflow(Name alias, Table<WorkflowRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>texera_db.workflow</code> table reference
     */
    public Workflow(String alias) {
        this(DSL.name(alias), WORKFLOW);
    }

    /**
     * Create an aliased <code>texera_db.workflow</code> table reference
     */
    public Workflow(Name alias) {
        this(alias, WORKFLOW);
    }

    /**
     * Create a <code>texera_db.workflow</code> table reference
     */
    public Workflow() {
        this(DSL.name("workflow"), null);
    }

    public <O extends Record> Workflow(Table<O> child, ForeignKey<O, WorkflowRecord> key) {
        super(child, key, WORKFLOW);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : TexeraDb.TEXERA_DB;
    }

    @Override
    public Identity<WorkflowRecord, Integer> getIdentity() {
        return (Identity<WorkflowRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<WorkflowRecord> getPrimaryKey() {
        return Keys.WORKFLOW_PKEY;
    }

    @Override
    public Workflow as(String alias) {
        return new Workflow(DSL.name(alias), this);
    }

    @Override
    public Workflow as(Name alias) {
        return new Workflow(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Workflow rename(String name) {
        return new Workflow(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Workflow rename(Name name) {
        return new Workflow(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, String, Timestamp, Timestamp, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
