/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.dao.jooq.generated.tables.daos;


import edu.uci.ics.texera.dao.jooq.generated.tables.WorkflowViewCount;
import edu.uci.ics.texera.dao.jooq.generated.tables.records.WorkflowViewCountRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkflowViewCountDao extends DAOImpl<WorkflowViewCountRecord, edu.uci.ics.texera.dao.jooq.generated.tables.pojos.WorkflowViewCount, Integer> {

    /**
     * Create a new WorkflowViewCountDao without any configuration
     */
    public WorkflowViewCountDao() {
        super(WorkflowViewCount.WORKFLOW_VIEW_COUNT, edu.uci.ics.texera.dao.jooq.generated.tables.pojos.WorkflowViewCount.class);
    }

    /**
     * Create a new WorkflowViewCountDao with an attached configuration
     */
    public WorkflowViewCountDao(Configuration configuration) {
        super(WorkflowViewCount.WORKFLOW_VIEW_COUNT, edu.uci.ics.texera.dao.jooq.generated.tables.pojos.WorkflowViewCount.class, configuration);
    }

    @Override
    public Integer getId(edu.uci.ics.texera.dao.jooq.generated.tables.pojos.WorkflowViewCount object) {
        return object.getWid();
    }

    /**
     * Fetch records that have <code>wid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.WorkflowViewCount> fetchRangeOfWid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(WorkflowViewCount.WORKFLOW_VIEW_COUNT.WID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>wid IN (values)</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.WorkflowViewCount> fetchByWid(Integer... values) {
        return fetch(WorkflowViewCount.WORKFLOW_VIEW_COUNT.WID, values);
    }

    /**
     * Fetch a unique record that has <code>wid = value</code>
     */
    public edu.uci.ics.texera.dao.jooq.generated.tables.pojos.WorkflowViewCount fetchOneByWid(Integer value) {
        return fetchOne(WorkflowViewCount.WORKFLOW_VIEW_COUNT.WID, value);
    }

    /**
     * Fetch a unique record that has <code>wid = value</code>
     */
    public Optional<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.WorkflowViewCount> fetchOptionalByWid(Integer value) {
        return fetchOptional(WorkflowViewCount.WORKFLOW_VIEW_COUNT.WID, value);
    }

    /**
     * Fetch records that have <code>view_count BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.WorkflowViewCount> fetchRangeOfViewCount(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(WorkflowViewCount.WORKFLOW_VIEW_COUNT.VIEW_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>view_count IN (values)</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.WorkflowViewCount> fetchByViewCount(Integer... values) {
        return fetch(WorkflowViewCount.WORKFLOW_VIEW_COUNT.VIEW_COUNT, values);
    }
}
