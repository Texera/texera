/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.dao.jooq.generated.tables.pojos;


import edu.uci.ics.texera.dao.jooq.generated.tables.interfaces.IOperatorPortExecutions;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OperatorPortExecutions implements IOperatorPortExecutions {

    private static final long serialVersionUID = -912694271;

    private UInteger workflowExecutionId;
    private String   operatorId;
    private Integer  portId;
    private String   resultUri;

    public OperatorPortExecutions() {}

    public OperatorPortExecutions(IOperatorPortExecutions value) {
        this.workflowExecutionId = value.getWorkflowExecutionId();
        this.operatorId = value.getOperatorId();
        this.portId = value.getPortId();
        this.resultUri = value.getResultUri();
    }

    public OperatorPortExecutions(
        UInteger workflowExecutionId,
        String   operatorId,
        Integer  portId,
        String   resultUri
    ) {
        this.workflowExecutionId = workflowExecutionId;
        this.operatorId = operatorId;
        this.portId = portId;
        this.resultUri = resultUri;
    }

    @Override
    public UInteger getWorkflowExecutionId() {
        return this.workflowExecutionId;
    }

    @Override
    public void setWorkflowExecutionId(UInteger workflowExecutionId) {
        this.workflowExecutionId = workflowExecutionId;
    }

    @Override
    public String getOperatorId() {
        return this.operatorId;
    }

    @Override
    public void setOperatorId(String operatorId) {
        this.operatorId = operatorId;
    }

    @Override
    public Integer getPortId() {
        return this.portId;
    }

    @Override
    public void setPortId(Integer portId) {
        this.portId = portId;
    }

    @Override
    public String getResultUri() {
        return this.resultUri;
    }

    @Override
    public void setResultUri(String resultUri) {
        this.resultUri = resultUri;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("OperatorPortExecutions (");

        sb.append(workflowExecutionId);
        sb.append(", ").append(operatorId);
        sb.append(", ").append(portId);
        sb.append(", ").append(resultUri);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IOperatorPortExecutions from) {
        setWorkflowExecutionId(from.getWorkflowExecutionId());
        setOperatorId(from.getOperatorId());
        setPortId(from.getPortId());
        setResultUri(from.getResultUri());
    }

    @Override
    public <E extends IOperatorPortExecutions> E into(E into) {
        into.from(this);
        return into;
    }
}
