/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.dao.jooq.generated.tables;


import edu.uci.ics.texera.dao.jooq.generated.Keys;
import edu.uci.ics.texera.dao.jooq.generated.TexeraDb;
import edu.uci.ics.texera.dao.jooq.generated.tables.records.WorkflowOfUserRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkflowOfUser extends TableImpl<WorkflowOfUserRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>texera_db.workflow_of_user</code>
     */
    public static final WorkflowOfUser WORKFLOW_OF_USER = new WorkflowOfUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WorkflowOfUserRecord> getRecordType() {
        return WorkflowOfUserRecord.class;
    }

    /**
     * The column <code>texera_db.workflow_of_user.uid</code>.
     */
    public final TableField<WorkflowOfUserRecord, Integer> UID = createField(DSL.name("uid"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>texera_db.workflow_of_user.wid</code>.
     */
    public final TableField<WorkflowOfUserRecord, Integer> WID = createField(DSL.name("wid"), SQLDataType.INTEGER.nullable(false), this, "");

    private WorkflowOfUser(Name alias, Table<WorkflowOfUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private WorkflowOfUser(Name alias, Table<WorkflowOfUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>texera_db.workflow_of_user</code> table reference
     */
    public WorkflowOfUser(String alias) {
        this(DSL.name(alias), WORKFLOW_OF_USER);
    }

    /**
     * Create an aliased <code>texera_db.workflow_of_user</code> table reference
     */
    public WorkflowOfUser(Name alias) {
        this(alias, WORKFLOW_OF_USER);
    }

    /**
     * Create a <code>texera_db.workflow_of_user</code> table reference
     */
    public WorkflowOfUser() {
        this(DSL.name("workflow_of_user"), null);
    }

    public <O extends Record> WorkflowOfUser(Table<O> child, ForeignKey<O, WorkflowOfUserRecord> key) {
        super(child, key, WORKFLOW_OF_USER);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : TexeraDb.TEXERA_DB;
    }

    @Override
    public UniqueKey<WorkflowOfUserRecord> getPrimaryKey() {
        return Keys.WORKFLOW_OF_USER_PKEY;
    }

    @Override
    public List<ForeignKey<WorkflowOfUserRecord, ?>> getReferences() {
        return Arrays.asList(Keys.WORKFLOW_OF_USER__WORKFLOW_OF_USER_UID_FKEY, Keys.WORKFLOW_OF_USER__WORKFLOW_OF_USER_WID_FKEY);
    }

    private transient User _user;
    private transient Workflow _workflow;

    /**
     * Get the implicit join path to the <code>texera_db.user</code> table.
     */
    public User user() {
        if (_user == null)
            _user = new User(this, Keys.WORKFLOW_OF_USER__WORKFLOW_OF_USER_UID_FKEY);

        return _user;
    }

    /**
     * Get the implicit join path to the <code>texera_db.workflow</code> table.
     */
    public Workflow workflow() {
        if (_workflow == null)
            _workflow = new Workflow(this, Keys.WORKFLOW_OF_USER__WORKFLOW_OF_USER_WID_FKEY);

        return _workflow;
    }

    @Override
    public WorkflowOfUser as(String alias) {
        return new WorkflowOfUser(DSL.name(alias), this);
    }

    @Override
    public WorkflowOfUser as(Name alias) {
        return new WorkflowOfUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WorkflowOfUser rename(String name) {
        return new WorkflowOfUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WorkflowOfUser rename(Name name) {
        return new WorkflowOfUser(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
