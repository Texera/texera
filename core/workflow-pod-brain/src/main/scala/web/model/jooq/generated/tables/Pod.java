/*
 * This file is generated by jOOQ.
 */
package web.model.jooq.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;

import web.model.jooq.generated.Indexes;
import web.model.jooq.generated.Keys;
import web.model.jooq.generated.TexeraDb;
import web.model.jooq.generated.tables.records.PodRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Pod extends TableImpl<PodRecord> {

    private static final long serialVersionUID = -1372917950;

    /**
     * The reference instance of <code>texera_db.pod</code>
     */
    public static final Pod POD = new Pod();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PodRecord> getRecordType() {
        return PodRecord.class;
    }

    /**
     * The column <code>texera_db.pod.uid</code>.
     */
    public final TableField<PodRecord, UInteger> UID = createField(DSL.name("uid"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>texera_db.pod.name</code>.
     */
    public final TableField<PodRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>texera_db.pod.pod_uid</code>.
     */
    public final TableField<PodRecord, String> POD_UID = createField(DSL.name("pod_uid"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>texera_db.pod.pod_id</code>.
     */
    public final TableField<PodRecord, UInteger> POD_ID = createField(DSL.name("pod_id"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>texera_db.pod.creation_time</code>.
     */
    public final TableField<PodRecord, Timestamp> CREATION_TIME = createField(DSL.name("creation_time"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>texera_db.pod.terminate_time</code>.
     */
    public final TableField<PodRecord, Timestamp> TERMINATE_TIME = createField(DSL.name("terminate_time"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>texera_db.pod</code> table reference
     */
    public Pod() {
        this(DSL.name("pod"), null);
    }

    /**
     * Create an aliased <code>texera_db.pod</code> table reference
     */
    public Pod(String alias) {
        this(DSL.name(alias), POD);
    }

    /**
     * Create an aliased <code>texera_db.pod</code> table reference
     */
    public Pod(Name alias) {
        this(alias, POD);
    }

    private Pod(Name alias, Table<PodRecord> aliased) {
        this(alias, aliased, null);
    }

    private Pod(Name alias, Table<PodRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Pod(Table<O> child, ForeignKey<O, PodRecord> key) {
        super(child, key, POD);
    }

    @Override
    public Schema getSchema() {
        return TexeraDb.TEXERA_DB;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.POD_PRIMARY, Indexes.POD_UID);
    }

    @Override
    public Identity<PodRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_POD;
    }

    @Override
    public UniqueKey<PodRecord> getPrimaryKey() {
        return Keys.KEY_POD_PRIMARY;
    }

    @Override
    public List<UniqueKey<PodRecord>> getKeys() {
        return Arrays.<UniqueKey<PodRecord>>asList(Keys.KEY_POD_PRIMARY);
    }

    @Override
    public List<ForeignKey<PodRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PodRecord, ?>>asList(Keys.POD_IBFK_1);
    }

    public User user() {
        return new User(this, Keys.POD_IBFK_1);
    }

    @Override
    public Pod as(String alias) {
        return new Pod(DSL.name(alias), this);
    }

    @Override
    public Pod as(Name alias) {
        return new Pod(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Pod rename(String name) {
        return new Pod(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Pod rename(Name name) {
        return new Pod(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<UInteger, String, String, UInteger, Timestamp, Timestamp> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
