# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: edu/uci/ics/amber/engine/common/actormessage.proto, edu/uci/ics/amber/engine/common/ambermessage.proto, edu/uci/ics/amber/engine/common/virtualidentity.proto, edu/uci/ics/amber/engine/common/workflow.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import List

import betterproto

from ..architecture import worker as _architecture_worker__


@dataclass(eq=False, repr=False)
class WorkflowIdentity(betterproto.Message):
    id: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class ExecutionIdentity(betterproto.Message):
    id: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class ActorVirtualIdentity(betterproto.Message):
    name: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class ChannelIdentity(betterproto.Message):
    from_worker_id: "ActorVirtualIdentity" = betterproto.message_field(1)
    to_worker_id: "ActorVirtualIdentity" = betterproto.message_field(2)
    is_control: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class OperatorIdentity(betterproto.Message):
    id: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class PhysicalOpIdentity(betterproto.Message):
    logical_op_id: "OperatorIdentity" = betterproto.message_field(1)
    layer_name: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class ChannelMarkerIdentity(betterproto.Message):
    id: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class PortIdentity(betterproto.Message):
    id: int = betterproto.int32_field(1)
    internal: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class InputPort(betterproto.Message):
    id: "PortIdentity" = betterproto.message_field(1)
    display_name: str = betterproto.string_field(2)
    allow_multi_links: bool = betterproto.bool_field(3)
    dependencies: List["PortIdentity"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class OutputPort(betterproto.Message):
    id: "PortIdentity" = betterproto.message_field(1)
    display_name: str = betterproto.string_field(2)
    blocking: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class PhysicalLink(betterproto.Message):
    from_op_id: "PhysicalOpIdentity" = betterproto.message_field(1)
    from_port_id: "PortIdentity" = betterproto.message_field(2)
    to_op_id: "PhysicalOpIdentity" = betterproto.message_field(3)
    to_port_id: "PortIdentity" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class Backpressure(betterproto.Message):
    enable_backpressure: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class CreditUpdate(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ActorCommand(betterproto.Message):
    backpressure: "Backpressure" = betterproto.message_field(1, group="sealed_value")
    credit_update: "CreditUpdate" = betterproto.message_field(2, group="sealed_value")


@dataclass(eq=False, repr=False)
class PythonActorMessage(betterproto.Message):
    payload: "ActorCommand" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ControlInvocationV2(betterproto.Message):
    command_id: int = betterproto.int64_field(1)
    command: "_architecture_worker__.ControlCommandV2" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ReturnInvocationV2(betterproto.Message):
    original_command_id: int = betterproto.int64_field(1)
    control_return: "_architecture_worker__.ControlReturnV2" = (
        betterproto.message_field(2)
    )


@dataclass(eq=False, repr=False)
class ControlPayloadV2(betterproto.Message):
    control_invocation: "ControlInvocationV2" = betterproto.message_field(
        1, group="sealed_value"
    )
    return_invocation: "ReturnInvocationV2" = betterproto.message_field(
        2, group="sealed_value"
    )


@dataclass(eq=False, repr=False)
class PythonDataHeader(betterproto.Message):
    tag: "ActorVirtualIdentity" = betterproto.message_field(1)
    payload_type: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class PythonControlMessage(betterproto.Message):
    tag: "ActorVirtualIdentity" = betterproto.message_field(1)
    payload: "ControlPayloadV2" = betterproto.message_field(2)
