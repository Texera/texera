// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package edu.uci.ics.texera.web.workflowruntimestate

object WorkflowruntimestateProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlcommandsProto,
    edu.uci.ics.amber.engine.architecture.worker.controlreturns.ControlreturnsProto,
    edu.uci.ics.amber.engine.architecture.worker.statistics.StatisticsProto,
    edu.uci.ics.amber.engine.common.virtualidentity.VirtualidentityProto,
    com.google.protobuf.timestamp.TimestampProto,
    scalapb.options.ScalapbProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      edu.uci.ics.texera.web.workflowruntimestate.BreakpointFault,
      edu.uci.ics.texera.web.workflowruntimestate.OperatorBreakpoints,
      edu.uci.ics.texera.web.workflowruntimestate.ExecutionBreakpointStore,
      edu.uci.ics.texera.web.workflowruntimestate.EvaluatedValueList,
      edu.uci.ics.texera.web.workflowruntimestate.OperatorConsole,
      edu.uci.ics.texera.web.workflowruntimestate.ExecutionConsoleStore,
      edu.uci.ics.texera.web.workflowruntimestate.OperatorWorkerMapping,
      edu.uci.ics.texera.web.workflowruntimestate.OperatorStatistics,
      edu.uci.ics.texera.web.workflowruntimestate.OperatorMetrics,
      edu.uci.ics.texera.web.workflowruntimestate.ExecutionStatsStore,
      edu.uci.ics.texera.web.workflowruntimestate.WorkflowFatalError,
      edu.uci.ics.texera.web.workflowruntimestate.ExecutionMetadataStore
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """Ci1lZHUvdWNpL2ljcy90ZXhlcmEvd29ya2Zsb3dydW50aW1lc3RhdGUucHJvdG8SFmVkdS51Y2kuaWNzLnRleGVyYS53ZWIaP
  2VkdS91Y2kvaWNzL2FtYmVyL2VuZ2luZS9hcmNoaXRlY3R1cmUvcnBjL2NvbnRyb2xjb21tYW5kcy5wcm90bxpBZWR1L3VjaS9pY
  3MvYW1iZXIvZW5naW5lL2FyY2hpdGVjdHVyZS93b3JrZXIvY29udHJvbHJldHVybnMucHJvdG8aPWVkdS91Y2kvaWNzL2FtYmVyL
  2VuZ2luZS9hcmNoaXRlY3R1cmUvd29ya2VyL3N0YXRpc3RpY3MucHJvdG8aNWVkdS91Y2kvaWNzL2FtYmVyL2VuZ2luZS9jb21tb
  24vdmlydHVhbGlkZW50aXR5LnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvGhVzY2FsYXBiL3NjYWxhcGIuc
  HJvdG8iqwIKD0JyZWFrcG9pbnRGYXVsdBIwCgt3b3JrZXJfbmFtZRgBIAEoCUIP4j8MEgp3b3JrZXJOYW1lUgp3b3JrZXJOYW1lE
  m8KDWZhdWx0ZWRfdHVwbGUYAiABKAsyNy5lZHUudWNpLmljcy50ZXhlcmEud2ViLkJyZWFrcG9pbnRGYXVsdC5CcmVha3BvaW50V
  HVwbGVCEeI/DhIMZmF1bHRlZFR1cGxlUgxmYXVsdGVkVHVwbGUadQoPQnJlYWtwb2ludFR1cGxlEhcKAmlkGAEgASgDQgfiPwQSA
  mlkUgJpZBInCghpc19pbnB1dBgCIAEoCEIM4j8JEgdpc0lucHV0Ugdpc0lucHV0EiAKBXR1cGxlGAMgAygJQgriPwcSBXR1cGxlU
  gV0dXBsZSKRAQoTT3BlcmF0b3JCcmVha3BvaW50cxJ6ChZ1bnJlc29sdmVkX2JyZWFrcG9pbnRzGAEgAygLMicuZWR1LnVjaS5pY
  3MudGV4ZXJhLndlYi5CcmVha3BvaW50RmF1bHRCGuI/FxIVdW5yZXNvbHZlZEJyZWFrcG9pbnRzUhV1bnJlc29sdmVkQnJlYWtwb
  2ludHMimwIKGEV4ZWN1dGlvbkJyZWFrcG9pbnRTdG9yZRJ6Cg1vcGVyYXRvcl9pbmZvGAEgAygLMkIuZWR1LnVjaS5pY3MudGV4Z
  XJhLndlYi5FeGVjdXRpb25CcmVha3BvaW50U3RvcmUuT3BlcmF0b3JJbmZvRW50cnlCEeI/DhIMb3BlcmF0b3JJbmZvUgxvcGVyY
  XRvckluZm8aggEKEU9wZXJhdG9ySW5mb0VudHJ5EhoKA2tleRgBIAEoCUII4j8FEgNrZXlSA2tleRJNCgV2YWx1ZRgCIAEoCzIrL
  mVkdS51Y2kuaWNzLnRleGVyYS53ZWIuT3BlcmF0b3JCcmVha3BvaW50c0IK4j8HEgV2YWx1ZVIFdmFsdWU6AjgBIncKEkV2YWx1Y
  XRlZFZhbHVlTGlzdBJhCgZ2YWx1ZXMYASADKAsyPC5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlc
  i5FdmFsdWF0ZWRWYWx1ZUIL4j8IEgZ2YWx1ZXNSBnZhbHVlcyKpAwoPT3BlcmF0b3JDb25zb2xlEnoKEGNvbnNvbGVfbWVzc2FnZ
  XMYASADKAsyOS5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLnJwYy5Db25zb2xlTWVzc2FnZUIU4j8REg9jb
  25zb2xlTWVzc2FnZXNSD2NvbnNvbGVNZXNzYWdlcxKOAQoVZXZhbHVhdGVfZXhwcl9yZXN1bHRzGAIgAygLMkAuZWR1LnVjaS5pY
  3MudGV4ZXJhLndlYi5PcGVyYXRvckNvbnNvbGUuRXZhbHVhdGVFeHByUmVzdWx0c0VudHJ5QhjiPxUSE2V2YWx1YXRlRXhwclJlc
  3VsdHNSE2V2YWx1YXRlRXhwclJlc3VsdHMaiAEKGEV2YWx1YXRlRXhwclJlc3VsdHNFbnRyeRIaCgNrZXkYASABKAlCCOI/BRIDa
  2V5UgNrZXkSTAoFdmFsdWUYAiABKAsyKi5lZHUudWNpLmljcy50ZXhlcmEud2ViLkV2YWx1YXRlZFZhbHVlTGlzdEIK4j8HEgV2Y
  Wx1ZVIFdmFsdWU6AjgBIqECChVFeGVjdXRpb25Db25zb2xlU3RvcmUSgwEKEG9wZXJhdG9yX2NvbnNvbGUYASADKAsyQi5lZHUud
  WNpLmljcy50ZXhlcmEud2ViLkV4ZWN1dGlvbkNvbnNvbGVTdG9yZS5PcGVyYXRvckNvbnNvbGVFbnRyeUIU4j8REg9vcGVyYXRvc
  kNvbnNvbGVSD29wZXJhdG9yQ29uc29sZRqBAQoUT3BlcmF0b3JDb25zb2xlRW50cnkSGgoDa2V5GAEgASgJQgjiPwUSA2tleVIDa
  2V5EkkKBXZhbHVlGAIgASgLMicuZWR1LnVjaS5pY3MudGV4ZXJhLndlYi5PcGVyYXRvckNvbnNvbGVCCuI/BxIFdmFsdWVSBXZhb
  HVlOgI4ASJ2ChVPcGVyYXRvcldvcmtlck1hcHBpbmcSLwoKb3BlcmF0b3JJZBgBIAEoCUIP4j8MEgpvcGVyYXRvcklkUgpvcGVyY
  XRvcklkEiwKCXdvcmtlcklkcxgCIAMoCUIO4j8LEgl3b3JrZXJJZHNSCXdvcmtlcklkcyKCBAoST3BlcmF0b3JTdGF0aXN0aWNzE
  nUKC2lucHV0X2NvdW50GAEgAygLMkMuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuUG9ydFR1c
  GxlQ291bnRNYXBwaW5nQg/iPwwSCmlucHV0Q291bnRSCmlucHV0Q291bnQSeAoMb3V0cHV0X2NvdW50GAIgAygLMkMuZWR1LnVja
  S5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuUG9ydFR1cGxlQ291bnRNYXBwaW5nQhDiPw0SC291dHB1dENvd
  W50UgtvdXRwdXRDb3VudBIwCgtudW1fd29ya2VycxgDIAEoBUIP4j8MEgpudW1Xb3JrZXJzUgpudW1Xb3JrZXJzEkkKFGRhdGFfc
  HJvY2Vzc2luZ190aW1lGAQgASgDQhfiPxQSEmRhdGFQcm9jZXNzaW5nVGltZVISZGF0YVByb2Nlc3NpbmdUaW1lElIKF2NvbnRyb
  2xfcHJvY2Vzc2luZ190aW1lGAUgASgDQhriPxcSFWNvbnRyb2xQcm9jZXNzaW5nVGltZVIVY29udHJvbFByb2Nlc3NpbmdUaW1lE
  ioKCWlkbGVfdGltZRgGIAEoA0IN4j8KEghpZGxlVGltZVIIaWRsZVRpbWUi+QEKD09wZXJhdG9yTWV0cmljcxJtCg5vcGVyYXRvc
  l9zdGF0ZRgBIAEoDjIvLmVkdS51Y2kuaWNzLnRleGVyYS53ZWIuV29ya2Zsb3dBZ2dyZWdhdGVkU3RhdGVCFeI/EhINb3BlcmF0b
  3JTdGF0ZfABAVINb3BlcmF0b3JTdGF0ZRJ3ChNvcGVyYXRvcl9zdGF0aXN0aWNzGAIgASgLMiouZWR1LnVjaS5pY3MudGV4ZXJhL
  ndlYi5PcGVyYXRvclN0YXRpc3RpY3NCGuI/FxISb3BlcmF0b3JTdGF0aXN0aWNz8AEBUhJvcGVyYXRvclN0YXRpc3RpY3MihAQKE
  0V4ZWN1dGlvblN0YXRzU3RvcmUSOwoOc3RhcnRUaW1lU3RhbXAYASABKANCE+I/EBIOc3RhcnRUaW1lU3RhbXBSDnN0YXJ0VGltZ
  VN0YW1wEjUKDGVuZFRpbWVTdGFtcBgCIAEoA0IR4j8OEgxlbmRUaW1lU3RhbXBSDGVuZFRpbWVTdGFtcBJ1Cg1vcGVyYXRvcl9pb
  mZvGAMgAygLMj0uZWR1LnVjaS5pY3MudGV4ZXJhLndlYi5FeGVjdXRpb25TdGF0c1N0b3JlLk9wZXJhdG9ySW5mb0VudHJ5QhHiP
  w4SDG9wZXJhdG9ySW5mb1IMb3BlcmF0b3JJbmZvEoEBChdvcGVyYXRvcl93b3JrZXJfbWFwcGluZxgEIAMoCzItLmVkdS51Y2kua
  WNzLnRleGVyYS53ZWIuT3BlcmF0b3JXb3JrZXJNYXBwaW5nQhriPxcSFW9wZXJhdG9yV29ya2VyTWFwcGluZ1IVb3BlcmF0b3JXb
  3JrZXJNYXBwaW5nGn4KEU9wZXJhdG9ySW5mb0VudHJ5EhoKA2tleRgBIAEoCUII4j8FEgNrZXlSA2tleRJJCgV2YWx1ZRgCIAEoC
  zInLmVkdS51Y2kuaWNzLnRleGVyYS53ZWIuT3BlcmF0b3JNZXRyaWNzQgriPwcSBXZhbHVlUgV2YWx1ZToCOAEi1AIKEldvcmtmb
  G93RmF0YWxFcnJvchJFCgR0eXBlGAEgASgOMiYuZWR1LnVjaS5pY3MudGV4ZXJhLndlYi5GYXRhbEVycm9yVHlwZUIJ4j8GEgR0e
  XBlUgR0eXBlEksKCXRpbWVzdGFtcBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCEeI/DhIJdGltZXN0YW1w8AEBU
  gl0aW1lc3RhbXASJgoHbWVzc2FnZRgDIAEoCUIM4j8JEgdtZXNzYWdlUgdtZXNzYWdlEiYKB2RldGFpbHMYBCABKAlCDOI/CRIHZ
  GV0YWlsc1IHZGV0YWlscxIvCgpvcGVyYXRvcklkGAUgASgJQg/iPwwSCm9wZXJhdG9ySWRSCm9wZXJhdG9ySWQSKQoId29ya2VyS
  WQYBiABKAlCDeI/ChIId29ya2VySWRSCHdvcmtlcklkIu8CChZFeGVjdXRpb25NZXRhZGF0YVN0b3JlElEKBXN0YXRlGAEgASgOM
  i8uZWR1LnVjaS5pY3MudGV4ZXJhLndlYi5Xb3JrZmxvd0FnZ3JlZ2F0ZWRTdGF0ZUIK4j8HEgVzdGF0ZVIFc3RhdGUSXwoMZmF0Y
  WxfZXJyb3JzGAIgAygLMiouZWR1LnVjaS5pY3MudGV4ZXJhLndlYi5Xb3JrZmxvd0ZhdGFsRXJyb3JCEOI/DRILZmF0YWxFcnJvc
  nNSC2ZhdGFsRXJyb3JzEmkKC2V4ZWN1dGlvbklkGAMgASgLMjIuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmNvbW1vbi5FeGVjd
  XRpb25JZGVudGl0eUIT4j8QEgtleGVjdXRpb25JZPABAVILZXhlY3V0aW9uSWQSNgoNaXNfcmVjb3ZlcmluZxgEIAEoCEIR4j8OE
  gxpc1JlY292ZXJpbmdSDGlzUmVjb3ZlcmluZypuCg5GYXRhbEVycm9yVHlwZRItChFDT01QSUxBVElPTl9FUlJPUhAAGhbiPxMSE
  UNPTVBJTEFUSU9OX0VSUk9SEi0KEUVYRUNVVElPTl9GQUlMVVJFEAEaFuI/ExIRRVhFQ1VUSU9OX0ZBSUxVUkUqrwIKF1dvcmtmb
  G93QWdncmVnYXRlZFN0YXRlEiUKDVVOSU5JVElBTElaRUQQABoS4j8PEg1VTklOSVRJQUxJWkVEEhUKBVJFQURZEAEaCuI/BxIFU
  kVBRFkSGQoHUlVOTklORxACGgziPwkSB1JVTk5JTkcSGQoHUEFVU0lORxADGgziPwkSB1BBVVNJTkcSFwoGUEFVU0VEEAQaC+I/C
  BIGUEFVU0VEEhsKCFJFU1VNSU5HEAUaDeI/ChIIUkVTVU1JTkcSHQoJQ09NUExFVEVEEAYaDuI/CxIJQ09NUExFVEVEEhcKBkZBS
  UxFRBAHGgviPwgSBkZBSUxFRBIZCgdVTktOT1dOEAgaDOI/CRIHVU5LTk9XThIXCgZLSUxMRUQQCRoL4j8IEgZLSUxMRURCCeI/B
  kgAWAB4AGIGcHJvdG8z"""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlcommandsProto.javaDescriptor,
      edu.uci.ics.amber.engine.architecture.worker.controlreturns.ControlreturnsProto.javaDescriptor,
      edu.uci.ics.amber.engine.architecture.worker.statistics.StatisticsProto.javaDescriptor,
      edu.uci.ics.amber.engine.common.virtualidentity.VirtualidentityProto.javaDescriptor,
      com.google.protobuf.timestamp.TimestampProto.javaDescriptor,
      scalapb.options.ScalapbProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}