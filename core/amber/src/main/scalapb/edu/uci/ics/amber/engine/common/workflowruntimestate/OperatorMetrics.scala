// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package edu.uci.ics.amber.engine.common.workflowruntimestate

@SerialVersionUID(0L)
final case class OperatorMetrics(
    operatorState: edu.uci.ics.amber.engine.architecture.rpc.controlreturns.WorkflowAggregatedState = edu.uci.ics.amber.engine.architecture.rpc.controlreturns.WorkflowAggregatedState.UNINITIALIZED,
    operatorStatistics: edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorStatistics = edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorStatistics.defaultInstance
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[OperatorMetrics] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = operatorState.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, __value)
        }
      };
      
      {
        val __value = operatorStatistics
        if (__value.serializedSize != 0) {
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = operatorState.value
        if (__v != 0) {
          _output__.writeEnum(1, __v)
        }
      };
      {
        val __v = operatorStatistics
        if (__v.serializedSize != 0) {
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        }
      };
    }
    def withOperatorState(__v: edu.uci.ics.amber.engine.architecture.rpc.controlreturns.WorkflowAggregatedState): OperatorMetrics = copy(operatorState = __v)
    def withOperatorStatistics(__v: edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorStatistics): OperatorMetrics = copy(operatorStatistics = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = operatorState.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2 => {
          val __t = operatorStatistics
          if (__t != edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorStatistics.defaultInstance) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(operatorState.scalaValueDescriptor)
        case 2 => operatorStatistics.toPMessage
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorMetrics.type = edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorMetrics
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.common.OperatorMetrics])
}

object OperatorMetrics extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorMetrics] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorMetrics] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorMetrics = {
    var __operatorState: edu.uci.ics.amber.engine.architecture.rpc.controlreturns.WorkflowAggregatedState = edu.uci.ics.amber.engine.architecture.rpc.controlreturns.WorkflowAggregatedState.UNINITIALIZED
    var __operatorStatistics: _root_.scala.Option[edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorStatistics] = _root_.scala.None
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __operatorState = edu.uci.ics.amber.engine.architecture.rpc.controlreturns.WorkflowAggregatedState.fromValue(_input__.readEnum())
        case 18 =>
          __operatorStatistics = _root_.scala.Some(__operatorStatistics.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorStatistics](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorMetrics(
        operatorState = __operatorState,
        operatorStatistics = __operatorStatistics.getOrElse(edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorStatistics.defaultInstance)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorMetrics] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorMetrics(
        operatorState = edu.uci.ics.amber.engine.architecture.rpc.controlreturns.WorkflowAggregatedState.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlreturns.WorkflowAggregatedState.UNINITIALIZED.scalaValueDescriptor).number),
        operatorStatistics = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorStatistics]).getOrElse(edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorStatistics.defaultInstance)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = WorkflowruntimestateProto.javaDescriptor.getMessageTypes().get(8)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = WorkflowruntimestateProto.scalaDescriptor.messages(8)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorStatistics
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => edu.uci.ics.amber.engine.architecture.rpc.controlreturns.WorkflowAggregatedState
    }
  }
  lazy val defaultInstance = edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorMetrics(
    operatorState = edu.uci.ics.amber.engine.architecture.rpc.controlreturns.WorkflowAggregatedState.UNINITIALIZED,
    operatorStatistics = edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorStatistics.defaultInstance
  )
  implicit class OperatorMetricsLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorMetrics]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorMetrics](_l) {
    def operatorState: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlreturns.WorkflowAggregatedState] = field(_.operatorState)((c_, f_) => c_.copy(operatorState = f_))
    def operatorStatistics: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorStatistics] = field(_.operatorStatistics)((c_, f_) => c_.copy(operatorStatistics = f_))
  }
  final val OPERATOR_STATE_FIELD_NUMBER = 1
  final val OPERATOR_STATISTICS_FIELD_NUMBER = 2
  def of(
    operatorState: edu.uci.ics.amber.engine.architecture.rpc.controlreturns.WorkflowAggregatedState,
    operatorStatistics: edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorStatistics
  ): _root_.edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorMetrics = _root_.edu.uci.ics.amber.engine.common.workflowruntimestate.OperatorMetrics(
    operatorState,
    operatorStatistics
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.common.OperatorMetrics])
}
