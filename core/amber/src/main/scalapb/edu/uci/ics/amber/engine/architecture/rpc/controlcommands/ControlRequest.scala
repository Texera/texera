// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package edu.uci.ics.amber.engine.architecture.rpc.controlcommands

sealed trait ControlRequest extends scalapb.GeneratedSealedOneof {
  type MessageType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage
  final def isEmpty = this.isInstanceOf[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.Empty.type]
  final def isDefined = !isEmpty
  final def asMessage: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.ControlRequestTypeMapper.toBase(this)
  final def asNonEmpty: Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty] = if (isEmpty) None else Some(this.asInstanceOf[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty])
}

object ControlRequest {
  case object Empty extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest
  
  sealed trait NonEmpty extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest
  def defaultInstance: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest = Empty
  
  implicit val ControlRequestTypeMapper: _root_.scalapb.TypeMapper[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest] = new _root_.scalapb.TypeMapper[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest] {
    override def toCustom(__base: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest = __base.sealedValue match {
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.PropagateChannelMarkerRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.TakeGlobalCheckpointRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.DebugCommandRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.EvaluatePythonExpressionRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ModifyLogicRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.RetryWorkflowRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.RetrieveWorkflowStateRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ConsoleMessageTriggeredRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.PortCompletedRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.StartWorkflowRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ResumeWorkflowRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.PauseWorkflowRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.WorkerStateUpdatedRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.WorkerExecutionCompletedRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.LinkWorkersRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Ping => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Pong => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Nested => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Pass => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ErrorCommand => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Recursion => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Collect => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.GenerateNumber => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.MultiCall => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Chain => __v.value
      case edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Empty => Empty
    }
    override def toBase(__custom: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage(__custom match {
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.PropagateChannelMarkerRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.TakeGlobalCheckpointRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.DebugCommandRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.EvaluatePythonExpressionRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ModifyLogicRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.RetryWorkflowRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.RetrieveWorkflowStateRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ConsoleMessageTriggeredRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.PortCompletedRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.StartWorkflowRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ResumeWorkflowRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.PauseWorkflowRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.WorkerStateUpdatedRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.WorkerExecutionCompletedRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.LinkWorkersRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Ping(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Pong(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Nested(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Pass(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ErrorCommand(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Recursion(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Collect(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.GenerateNumber(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.MultiCall(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Chain(__v)
      case Empty => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Empty
    })
  }
}
@SerialVersionUID(0L)
final case class ControlRequestMessage(
    sealedValue: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ControlRequestMessage] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (sealedValue.propagateChannelMarkerRequest.isDefined) {
        val __value = sealedValue.propagateChannelMarkerRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.takeGlobalCheckpointRequest.isDefined) {
        val __value = sealedValue.takeGlobalCheckpointRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.debugCommandRequest.isDefined) {
        val __value = sealedValue.debugCommandRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.evaluatePythonExpressionRequest.isDefined) {
        val __value = sealedValue.evaluatePythonExpressionRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.modifyLogicRequest.isDefined) {
        val __value = sealedValue.modifyLogicRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.retryWorkflowRequest.isDefined) {
        val __value = sealedValue.retryWorkflowRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.retrieveWorkflowStateRequest.isDefined) {
        val __value = sealedValue.retrieveWorkflowStateRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.consoleMessageTriggeredRequest.isDefined) {
        val __value = sealedValue.consoleMessageTriggeredRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.portCompletedRequest.isDefined) {
        val __value = sealedValue.portCompletedRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.startWorkflowRequest.isDefined) {
        val __value = sealedValue.startWorkflowRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.resumeWorkflowRequest.isDefined) {
        val __value = sealedValue.resumeWorkflowRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.pauseWorkflowRequest.isDefined) {
        val __value = sealedValue.pauseWorkflowRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.workerStateUpdatedRequest.isDefined) {
        val __value = sealedValue.workerStateUpdatedRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.workerExecutionCompletedRequest.isDefined) {
        val __value = sealedValue.workerExecutionCompletedRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.linkWorkersRequest.isDefined) {
        val __value = sealedValue.linkWorkersRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.ping.isDefined) {
        val __value = sealedValue.ping.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.pong.isDefined) {
        val __value = sealedValue.pong.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.nested.isDefined) {
        val __value = sealedValue.nested.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.pass.isDefined) {
        val __value = sealedValue.pass.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.errorCommand.isDefined) {
        val __value = sealedValue.errorCommand.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.recursion.isDefined) {
        val __value = sealedValue.recursion.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.collect.isDefined) {
        val __value = sealedValue.collect.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.generateNumber.isDefined) {
        val __value = sealedValue.generateNumber.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.multiCall.isDefined) {
        val __value = sealedValue.multiCall.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.chain.isDefined) {
        val __value = sealedValue.chain.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      sealedValue.propagateChannelMarkerRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.takeGlobalCheckpointRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.debugCommandRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.evaluatePythonExpressionRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.modifyLogicRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.retryWorkflowRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.retrieveWorkflowStateRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.consoleMessageTriggeredRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.portCompletedRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(9, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.startWorkflowRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(10, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.resumeWorkflowRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(11, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.pauseWorkflowRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(12, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.workerStateUpdatedRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(13, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.workerExecutionCompletedRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(14, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.linkWorkersRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(15, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.ping.foreach { __v =>
        val __m = __v
        _output__.writeTag(16, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.pong.foreach { __v =>
        val __m = __v
        _output__.writeTag(17, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.nested.foreach { __v =>
        val __m = __v
        _output__.writeTag(18, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.pass.foreach { __v =>
        val __m = __v
        _output__.writeTag(19, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.errorCommand.foreach { __v =>
        val __m = __v
        _output__.writeTag(20, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.recursion.foreach { __v =>
        val __m = __v
        _output__.writeTag(21, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.collect.foreach { __v =>
        val __m = __v
        _output__.writeTag(22, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.generateNumber.foreach { __v =>
        val __m = __v
        _output__.writeTag(23, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.multiCall.foreach { __v =>
        val __m = __v
        _output__.writeTag(24, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.chain.foreach { __v =>
        val __m = __v
        _output__.writeTag(25, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def getPropagateChannelMarkerRequest: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest = sealedValue.propagateChannelMarkerRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest.defaultInstance)
    def withPropagateChannelMarkerRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.PropagateChannelMarkerRequest(__v))
    def getTakeGlobalCheckpointRequest: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest = sealedValue.takeGlobalCheckpointRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest.defaultInstance)
    def withTakeGlobalCheckpointRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.TakeGlobalCheckpointRequest(__v))
    def getDebugCommandRequest: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest = sealedValue.debugCommandRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest.defaultInstance)
    def withDebugCommandRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.DebugCommandRequest(__v))
    def getEvaluatePythonExpressionRequest: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest = sealedValue.evaluatePythonExpressionRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest.defaultInstance)
    def withEvaluatePythonExpressionRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.EvaluatePythonExpressionRequest(__v))
    def getModifyLogicRequest: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest = sealedValue.modifyLogicRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest.defaultInstance)
    def withModifyLogicRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ModifyLogicRequest(__v))
    def getRetryWorkflowRequest: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest = sealedValue.retryWorkflowRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest.defaultInstance)
    def withRetryWorkflowRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.RetryWorkflowRequest(__v))
    def getRetrieveWorkflowStateRequest: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest = sealedValue.retrieveWorkflowStateRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest.defaultInstance)
    def withRetrieveWorkflowStateRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.RetrieveWorkflowStateRequest(__v))
    def getConsoleMessageTriggeredRequest: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest = sealedValue.consoleMessageTriggeredRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest.defaultInstance)
    def withConsoleMessageTriggeredRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ConsoleMessageTriggeredRequest(__v))
    def getPortCompletedRequest: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest = sealedValue.portCompletedRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest.defaultInstance)
    def withPortCompletedRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.PortCompletedRequest(__v))
    def getStartWorkflowRequest: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest = sealedValue.startWorkflowRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest.defaultInstance)
    def withStartWorkflowRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.StartWorkflowRequest(__v))
    def getResumeWorkflowRequest: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest = sealedValue.resumeWorkflowRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest.defaultInstance)
    def withResumeWorkflowRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ResumeWorkflowRequest(__v))
    def getPauseWorkflowRequest: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest = sealedValue.pauseWorkflowRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest.defaultInstance)
    def withPauseWorkflowRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.PauseWorkflowRequest(__v))
    def getWorkerStateUpdatedRequest: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest = sealedValue.workerStateUpdatedRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest.defaultInstance)
    def withWorkerStateUpdatedRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.WorkerStateUpdatedRequest(__v))
    def getWorkerExecutionCompletedRequest: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest = sealedValue.workerExecutionCompletedRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest.defaultInstance)
    def withWorkerExecutionCompletedRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.WorkerExecutionCompletedRequest(__v))
    def getLinkWorkersRequest: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest = sealedValue.linkWorkersRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest.defaultInstance)
    def withLinkWorkersRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.LinkWorkersRequest(__v))
    def getPing: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping = sealedValue.ping.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping.defaultInstance)
    def withPing(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Ping(__v))
    def getPong: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong = sealedValue.pong.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong.defaultInstance)
    def withPong(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Pong(__v))
    def getNested: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested = sealedValue.nested.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested.defaultInstance)
    def withNested(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Nested(__v))
    def getPass: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass = sealedValue.pass.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass.defaultInstance)
    def withPass(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Pass(__v))
    def getErrorCommand: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand = sealedValue.errorCommand.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand.defaultInstance)
    def withErrorCommand(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ErrorCommand(__v))
    def getRecursion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion = sealedValue.recursion.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion.defaultInstance)
    def withRecursion(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Recursion(__v))
    def getCollect: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect = sealedValue.collect.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect.defaultInstance)
    def withCollect(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Collect(__v))
    def getGenerateNumber: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber = sealedValue.generateNumber.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber.defaultInstance)
    def withGenerateNumber(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.GenerateNumber(__v))
    def getMultiCall: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall = sealedValue.multiCall.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall.defaultInstance)
    def withMultiCall(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.MultiCall(__v))
    def getChain: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain = sealedValue.chain.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain.defaultInstance)
    def withChain(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Chain(__v))
    def clearSealedValue: ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Empty)
    def withSealedValue(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue): ControlRequestMessage = copy(sealedValue = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => sealedValue.propagateChannelMarkerRequest.orNull
        case 2 => sealedValue.takeGlobalCheckpointRequest.orNull
        case 3 => sealedValue.debugCommandRequest.orNull
        case 4 => sealedValue.evaluatePythonExpressionRequest.orNull
        case 5 => sealedValue.modifyLogicRequest.orNull
        case 6 => sealedValue.retryWorkflowRequest.orNull
        case 7 => sealedValue.retrieveWorkflowStateRequest.orNull
        case 8 => sealedValue.consoleMessageTriggeredRequest.orNull
        case 9 => sealedValue.portCompletedRequest.orNull
        case 10 => sealedValue.startWorkflowRequest.orNull
        case 11 => sealedValue.resumeWorkflowRequest.orNull
        case 12 => sealedValue.pauseWorkflowRequest.orNull
        case 13 => sealedValue.workerStateUpdatedRequest.orNull
        case 14 => sealedValue.workerExecutionCompletedRequest.orNull
        case 15 => sealedValue.linkWorkersRequest.orNull
        case 16 => sealedValue.ping.orNull
        case 17 => sealedValue.pong.orNull
        case 18 => sealedValue.nested.orNull
        case 19 => sealedValue.pass.orNull
        case 20 => sealedValue.errorCommand.orNull
        case 21 => sealedValue.recursion.orNull
        case 22 => sealedValue.collect.orNull
        case 23 => sealedValue.generateNumber.orNull
        case 24 => sealedValue.multiCall.orNull
        case 25 => sealedValue.chain.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => sealedValue.propagateChannelMarkerRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => sealedValue.takeGlobalCheckpointRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => sealedValue.debugCommandRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => sealedValue.evaluatePythonExpressionRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => sealedValue.modifyLogicRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => sealedValue.retryWorkflowRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => sealedValue.retrieveWorkflowStateRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => sealedValue.consoleMessageTriggeredRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => sealedValue.portCompletedRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => sealedValue.startWorkflowRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => sealedValue.resumeWorkflowRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 12 => sealedValue.pauseWorkflowRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 13 => sealedValue.workerStateUpdatedRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 14 => sealedValue.workerExecutionCompletedRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 15 => sealedValue.linkWorkersRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 16 => sealedValue.ping.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 17 => sealedValue.pong.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 18 => sealedValue.nested.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 19 => sealedValue.pass.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 20 => sealedValue.errorCommand.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 21 => sealedValue.recursion.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 22 => sealedValue.collect.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 23 => sealedValue.generateNumber.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 24 => sealedValue.multiCall.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 25 => sealedValue.chain.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage
    def toControlRequest: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.ControlRequestTypeMapper.toCustom(this)
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.ControlRequest])
}

object ControlRequestMessage extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage = {
    var __sealedValue: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Empty
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.PropagateChannelMarkerRequest(__sealedValue.propagateChannelMarkerRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.TakeGlobalCheckpointRequest(__sealedValue.takeGlobalCheckpointRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.DebugCommandRequest(__sealedValue.debugCommandRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 34 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.EvaluatePythonExpressionRequest(__sealedValue.evaluatePythonExpressionRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 42 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ModifyLogicRequest(__sealedValue.modifyLogicRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 50 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.RetryWorkflowRequest(__sealedValue.retryWorkflowRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 58 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.RetrieveWorkflowStateRequest(__sealedValue.retrieveWorkflowStateRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 66 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ConsoleMessageTriggeredRequest(__sealedValue.consoleMessageTriggeredRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 74 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.PortCompletedRequest(__sealedValue.portCompletedRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 82 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.StartWorkflowRequest(__sealedValue.startWorkflowRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 90 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ResumeWorkflowRequest(__sealedValue.resumeWorkflowRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 98 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.PauseWorkflowRequest(__sealedValue.pauseWorkflowRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 106 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.WorkerStateUpdatedRequest(__sealedValue.workerStateUpdatedRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 114 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.WorkerExecutionCompletedRequest(__sealedValue.workerExecutionCompletedRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 122 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.LinkWorkersRequest(__sealedValue.linkWorkersRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 130 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Ping(__sealedValue.ping.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 138 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Pong(__sealedValue.pong.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 146 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Nested(__sealedValue.nested.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 154 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Pass(__sealedValue.pass.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 162 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ErrorCommand(__sealedValue.errorCommand.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 170 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Recursion(__sealedValue.recursion.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 178 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Collect(__sealedValue.collect.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 186 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.GenerateNumber(__sealedValue.generateNumber.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 194 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.MultiCall(__sealedValue.multiCall.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 202 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Chain(__sealedValue.chain.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage(
        sealedValue = __sealedValue
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage(
        sealedValue = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.PropagateChannelMarkerRequest(_))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.TakeGlobalCheckpointRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.DebugCommandRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.EvaluatePythonExpressionRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ModifyLogicRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.RetryWorkflowRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.RetrieveWorkflowStateRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ConsoleMessageTriggeredRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.PortCompletedRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.StartWorkflowRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ResumeWorkflowRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.PauseWorkflowRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.WorkerStateUpdatedRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.WorkerExecutionCompletedRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(15).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.LinkWorkersRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(16).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Ping(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(17).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Pong(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(18).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Nested(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(19).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Pass(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(20).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ErrorCommand(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(21).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Recursion(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(22).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Collect(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(23).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.GenerateNumber(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(24).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.MultiCall(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(25).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain]]).map(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Chain(_)))
            .getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest
      case 2 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest
      case 3 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest
      case 4 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest
      case 5 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest
      case 6 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest
      case 7 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest
      case 8 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest
      case 9 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest
      case 10 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest
      case 11 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest
      case 12 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest
      case 13 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest
      case 14 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest
      case 15 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest
      case 16 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping
      case 17 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong
      case 18 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested
      case 19 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass
      case 20 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand
      case 21 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion
      case 22 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect
      case 23 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber
      case 24 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall
      case 25 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage(
    sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Empty
  )
  sealed trait SealedValue extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isPropagateChannelMarkerRequest: _root_.scala.Boolean = false
    def isTakeGlobalCheckpointRequest: _root_.scala.Boolean = false
    def isDebugCommandRequest: _root_.scala.Boolean = false
    def isEvaluatePythonExpressionRequest: _root_.scala.Boolean = false
    def isModifyLogicRequest: _root_.scala.Boolean = false
    def isRetryWorkflowRequest: _root_.scala.Boolean = false
    def isRetrieveWorkflowStateRequest: _root_.scala.Boolean = false
    def isConsoleMessageTriggeredRequest: _root_.scala.Boolean = false
    def isPortCompletedRequest: _root_.scala.Boolean = false
    def isStartWorkflowRequest: _root_.scala.Boolean = false
    def isResumeWorkflowRequest: _root_.scala.Boolean = false
    def isPauseWorkflowRequest: _root_.scala.Boolean = false
    def isWorkerStateUpdatedRequest: _root_.scala.Boolean = false
    def isWorkerExecutionCompletedRequest: _root_.scala.Boolean = false
    def isLinkWorkersRequest: _root_.scala.Boolean = false
    def isPing: _root_.scala.Boolean = false
    def isPong: _root_.scala.Boolean = false
    def isNested: _root_.scala.Boolean = false
    def isPass: _root_.scala.Boolean = false
    def isErrorCommand: _root_.scala.Boolean = false
    def isRecursion: _root_.scala.Boolean = false
    def isCollect: _root_.scala.Boolean = false
    def isGenerateNumber: _root_.scala.Boolean = false
    def isMultiCall: _root_.scala.Boolean = false
    def isChain: _root_.scala.Boolean = false
    def propagateChannelMarkerRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest] = _root_.scala.None
    def takeGlobalCheckpointRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest] = _root_.scala.None
    def debugCommandRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest] = _root_.scala.None
    def evaluatePythonExpressionRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest] = _root_.scala.None
    def modifyLogicRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest] = _root_.scala.None
    def retryWorkflowRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest] = _root_.scala.None
    def retrieveWorkflowStateRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest] = _root_.scala.None
    def consoleMessageTriggeredRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest] = _root_.scala.None
    def portCompletedRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest] = _root_.scala.None
    def startWorkflowRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest] = _root_.scala.None
    def resumeWorkflowRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest] = _root_.scala.None
    def pauseWorkflowRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest] = _root_.scala.None
    def workerStateUpdatedRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest] = _root_.scala.None
    def workerExecutionCompletedRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest] = _root_.scala.None
    def linkWorkersRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest] = _root_.scala.None
    def ping: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping] = _root_.scala.None
    def pong: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong] = _root_.scala.None
    def nested: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested] = _root_.scala.None
    def pass: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass] = _root_.scala.None
    def errorCommand: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand] = _root_.scala.None
    def recursion: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion] = _root_.scala.None
    def collect: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect] = _root_.scala.None
    def generateNumber: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber] = _root_.scala.None
    def multiCall: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall] = _root_.scala.None
    def chain: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain] = _root_.scala.None
  }
  object SealedValue {
    @SerialVersionUID(0L)
    case object Empty extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class PropagateChannelMarkerRequest(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest
      override def isPropagateChannelMarkerRequest: _root_.scala.Boolean = true
      override def propagateChannelMarkerRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class TakeGlobalCheckpointRequest(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest
      override def isTakeGlobalCheckpointRequest: _root_.scala.Boolean = true
      override def takeGlobalCheckpointRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest] = Some(value)
      override def number: _root_.scala.Int = 2
    }
    @SerialVersionUID(0L)
    final case class DebugCommandRequest(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest
      override def isDebugCommandRequest: _root_.scala.Boolean = true
      override def debugCommandRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest] = Some(value)
      override def number: _root_.scala.Int = 3
    }
    @SerialVersionUID(0L)
    final case class EvaluatePythonExpressionRequest(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest
      override def isEvaluatePythonExpressionRequest: _root_.scala.Boolean = true
      override def evaluatePythonExpressionRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest] = Some(value)
      override def number: _root_.scala.Int = 4
    }
    @SerialVersionUID(0L)
    final case class ModifyLogicRequest(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest
      override def isModifyLogicRequest: _root_.scala.Boolean = true
      override def modifyLogicRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest] = Some(value)
      override def number: _root_.scala.Int = 5
    }
    @SerialVersionUID(0L)
    final case class RetryWorkflowRequest(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest
      override def isRetryWorkflowRequest: _root_.scala.Boolean = true
      override def retryWorkflowRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest] = Some(value)
      override def number: _root_.scala.Int = 6
    }
    @SerialVersionUID(0L)
    final case class RetrieveWorkflowStateRequest(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest
      override def isRetrieveWorkflowStateRequest: _root_.scala.Boolean = true
      override def retrieveWorkflowStateRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest] = Some(value)
      override def number: _root_.scala.Int = 7
    }
    @SerialVersionUID(0L)
    final case class ConsoleMessageTriggeredRequest(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest
      override def isConsoleMessageTriggeredRequest: _root_.scala.Boolean = true
      override def consoleMessageTriggeredRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest] = Some(value)
      override def number: _root_.scala.Int = 8
    }
    @SerialVersionUID(0L)
    final case class PortCompletedRequest(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest
      override def isPortCompletedRequest: _root_.scala.Boolean = true
      override def portCompletedRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest] = Some(value)
      override def number: _root_.scala.Int = 9
    }
    @SerialVersionUID(0L)
    final case class StartWorkflowRequest(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest
      override def isStartWorkflowRequest: _root_.scala.Boolean = true
      override def startWorkflowRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest] = Some(value)
      override def number: _root_.scala.Int = 10
    }
    @SerialVersionUID(0L)
    final case class ResumeWorkflowRequest(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest
      override def isResumeWorkflowRequest: _root_.scala.Boolean = true
      override def resumeWorkflowRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest] = Some(value)
      override def number: _root_.scala.Int = 11
    }
    @SerialVersionUID(0L)
    final case class PauseWorkflowRequest(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest
      override def isPauseWorkflowRequest: _root_.scala.Boolean = true
      override def pauseWorkflowRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest] = Some(value)
      override def number: _root_.scala.Int = 12
    }
    @SerialVersionUID(0L)
    final case class WorkerStateUpdatedRequest(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest
      override def isWorkerStateUpdatedRequest: _root_.scala.Boolean = true
      override def workerStateUpdatedRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest] = Some(value)
      override def number: _root_.scala.Int = 13
    }
    @SerialVersionUID(0L)
    final case class WorkerExecutionCompletedRequest(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest
      override def isWorkerExecutionCompletedRequest: _root_.scala.Boolean = true
      override def workerExecutionCompletedRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest] = Some(value)
      override def number: _root_.scala.Int = 14
    }
    @SerialVersionUID(0L)
    final case class LinkWorkersRequest(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest
      override def isLinkWorkersRequest: _root_.scala.Boolean = true
      override def linkWorkersRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest] = Some(value)
      override def number: _root_.scala.Int = 15
    }
    @SerialVersionUID(0L)
    final case class Ping(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping
      override def isPing: _root_.scala.Boolean = true
      override def ping: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping] = Some(value)
      override def number: _root_.scala.Int = 16
    }
    @SerialVersionUID(0L)
    final case class Pong(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong
      override def isPong: _root_.scala.Boolean = true
      override def pong: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong] = Some(value)
      override def number: _root_.scala.Int = 17
    }
    @SerialVersionUID(0L)
    final case class Nested(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested
      override def isNested: _root_.scala.Boolean = true
      override def nested: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested] = Some(value)
      override def number: _root_.scala.Int = 18
    }
    @SerialVersionUID(0L)
    final case class Pass(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass
      override def isPass: _root_.scala.Boolean = true
      override def pass: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass] = Some(value)
      override def number: _root_.scala.Int = 19
    }
    @SerialVersionUID(0L)
    final case class ErrorCommand(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand
      override def isErrorCommand: _root_.scala.Boolean = true
      override def errorCommand: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand] = Some(value)
      override def number: _root_.scala.Int = 20
    }
    @SerialVersionUID(0L)
    final case class Recursion(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion
      override def isRecursion: _root_.scala.Boolean = true
      override def recursion: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion] = Some(value)
      override def number: _root_.scala.Int = 21
    }
    @SerialVersionUID(0L)
    final case class Collect(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect
      override def isCollect: _root_.scala.Boolean = true
      override def collect: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect] = Some(value)
      override def number: _root_.scala.Int = 22
    }
    @SerialVersionUID(0L)
    final case class GenerateNumber(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber
      override def isGenerateNumber: _root_.scala.Boolean = true
      override def generateNumber: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber] = Some(value)
      override def number: _root_.scala.Int = 23
    }
    @SerialVersionUID(0L)
    final case class MultiCall(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall
      override def isMultiCall: _root_.scala.Boolean = true
      override def multiCall: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall] = Some(value)
      override def number: _root_.scala.Int = 24
    }
    @SerialVersionUID(0L)
    final case class Chain(value: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain) extends edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain
      override def isChain: _root_.scala.Boolean = true
      override def chain: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain] = Some(value)
      override def number: _root_.scala.Int = 25
    }
  }
  implicit class ControlRequestMessageLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage](_l) {
    def propagateChannelMarkerRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest] = field(_.getPropagateChannelMarkerRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.PropagateChannelMarkerRequest(f_)))
    def takeGlobalCheckpointRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest] = field(_.getTakeGlobalCheckpointRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.TakeGlobalCheckpointRequest(f_)))
    def debugCommandRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest] = field(_.getDebugCommandRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.DebugCommandRequest(f_)))
    def evaluatePythonExpressionRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest] = field(_.getEvaluatePythonExpressionRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.EvaluatePythonExpressionRequest(f_)))
    def modifyLogicRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest] = field(_.getModifyLogicRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ModifyLogicRequest(f_)))
    def retryWorkflowRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest] = field(_.getRetryWorkflowRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.RetryWorkflowRequest(f_)))
    def retrieveWorkflowStateRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest] = field(_.getRetrieveWorkflowStateRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.RetrieveWorkflowStateRequest(f_)))
    def consoleMessageTriggeredRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest] = field(_.getConsoleMessageTriggeredRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ConsoleMessageTriggeredRequest(f_)))
    def portCompletedRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest] = field(_.getPortCompletedRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.PortCompletedRequest(f_)))
    def startWorkflowRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest] = field(_.getStartWorkflowRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.StartWorkflowRequest(f_)))
    def resumeWorkflowRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest] = field(_.getResumeWorkflowRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ResumeWorkflowRequest(f_)))
    def pauseWorkflowRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest] = field(_.getPauseWorkflowRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.PauseWorkflowRequest(f_)))
    def workerStateUpdatedRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest] = field(_.getWorkerStateUpdatedRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.WorkerStateUpdatedRequest(f_)))
    def workerExecutionCompletedRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest] = field(_.getWorkerExecutionCompletedRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.WorkerExecutionCompletedRequest(f_)))
    def linkWorkersRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest] = field(_.getLinkWorkersRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.LinkWorkersRequest(f_)))
    def ping: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping] = field(_.getPing)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Ping(f_)))
    def pong: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong] = field(_.getPong)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Pong(f_)))
    def nested: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested] = field(_.getNested)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Nested(f_)))
    def pass: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass] = field(_.getPass)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Pass(f_)))
    def errorCommand: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand] = field(_.getErrorCommand)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.ErrorCommand(f_)))
    def recursion: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion] = field(_.getRecursion)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Recursion(f_)))
    def collect: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect] = field(_.getCollect)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Collect(f_)))
    def generateNumber: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber] = field(_.getGenerateNumber)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.GenerateNumber(f_)))
    def multiCall: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall] = field(_.getMultiCall)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.MultiCall(f_)))
    def chain: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain] = field(_.getChain)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue.Chain(f_)))
    def sealedValue: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue] = field(_.sealedValue)((c_, f_) => c_.copy(sealedValue = f_))
  }
  final val PROPAGATECHANNELMARKERREQUEST_FIELD_NUMBER = 1
  final val TAKEGLOBALCHECKPOINTREQUEST_FIELD_NUMBER = 2
  final val DEBUGCOMMANDREQUEST_FIELD_NUMBER = 3
  final val EVALUATEPYTHONEXPRESSIONREQUEST_FIELD_NUMBER = 4
  final val MODIFYLOGICREQUEST_FIELD_NUMBER = 5
  final val RETRYWORKFLOWREQUEST_FIELD_NUMBER = 6
  final val RETRIEVEWORKFLOWSTATEREQUEST_FIELD_NUMBER = 7
  final val CONSOLEMESSAGETRIGGEREDREQUEST_FIELD_NUMBER = 8
  final val PORTCOMPLETEDREQUEST_FIELD_NUMBER = 9
  final val STARTWORKFLOWREQUEST_FIELD_NUMBER = 10
  final val RESUMEWORKFLOWREQUEST_FIELD_NUMBER = 11
  final val PAUSEWORKFLOWREQUEST_FIELD_NUMBER = 12
  final val WORKERSTATEUPDATEDREQUEST_FIELD_NUMBER = 13
  final val WORKEREXECUTIONCOMPLETEDREQUEST_FIELD_NUMBER = 14
  final val LINKWORKERSREQUEST_FIELD_NUMBER = 15
  final val PING_FIELD_NUMBER = 16
  final val PONG_FIELD_NUMBER = 17
  final val NESTED_FIELD_NUMBER = 18
  final val PASS_FIELD_NUMBER = 19
  final val ERRORCOMMAND_FIELD_NUMBER = 20
  final val RECURSION_FIELD_NUMBER = 21
  final val COLLECT_FIELD_NUMBER = 22
  final val GENERATENUMBER_FIELD_NUMBER = 23
  final val MULTICALL_FIELD_NUMBER = 24
  final val CHAIN_FIELD_NUMBER = 25
  def of(
    sealedValue: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage.SealedValue
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage(
    sealedValue
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.ControlRequest])
}

@SerialVersionUID(0L)
final case class PropagateChannelMarkerRequest(
    sourceOpToStartProp: _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity],
    id: _root_.scala.Option[edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity],
    markerType: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ChannelMarkerType,
    scope: _root_.scala.Option[com.google.protobuf.any.Any],
    targetOps: _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity],
    markerCommand: _root_.scala.Option[com.google.protobuf.any.Any]
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[PropagateChannelMarkerRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      sourceOpToStartProp.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      if (id.isDefined) {
        val __value = id.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = markerType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(3, __value)
        }
      };
      if (scope.isDefined) {
        val __value = scope.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      targetOps.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      if (markerCommand.isDefined) {
        val __value = markerCommand.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      sourceOpToStartProp.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      id.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = markerType.value
        if (__v != 0) {
          _output__.writeEnum(3, __v)
        }
      };
      scope.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      targetOps.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      markerCommand.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def clearSourceOpToStartProp = copy(sourceOpToStartProp = _root_.scala.Seq.empty)
    def addSourceOpToStartProp(__vs: edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity *): PropagateChannelMarkerRequest = addAllSourceOpToStartProp(__vs)
    def addAllSourceOpToStartProp(__vs: Iterable[edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity]): PropagateChannelMarkerRequest = copy(sourceOpToStartProp = sourceOpToStartProp ++ __vs)
    def withSourceOpToStartProp(__v: _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity]): PropagateChannelMarkerRequest = copy(sourceOpToStartProp = __v)
    def getId: edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity = id.getOrElse(edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity.defaultInstance)
    def clearId: PropagateChannelMarkerRequest = copy(id = _root_.scala.None)
    def withId(__v: edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity): PropagateChannelMarkerRequest = copy(id = Option(__v))
    def withMarkerType(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ChannelMarkerType): PropagateChannelMarkerRequest = copy(markerType = __v)
    def getScope: com.google.protobuf.any.Any = scope.getOrElse(com.google.protobuf.any.Any.defaultInstance)
    def clearScope: PropagateChannelMarkerRequest = copy(scope = _root_.scala.None)
    def withScope(__v: com.google.protobuf.any.Any): PropagateChannelMarkerRequest = copy(scope = Option(__v))
    def clearTargetOps = copy(targetOps = _root_.scala.Seq.empty)
    def addTargetOps(__vs: edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity *): PropagateChannelMarkerRequest = addAllTargetOps(__vs)
    def addAllTargetOps(__vs: Iterable[edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity]): PropagateChannelMarkerRequest = copy(targetOps = targetOps ++ __vs)
    def withTargetOps(__v: _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity]): PropagateChannelMarkerRequest = copy(targetOps = __v)
    def getMarkerCommand: com.google.protobuf.any.Any = markerCommand.getOrElse(com.google.protobuf.any.Any.defaultInstance)
    def clearMarkerCommand: PropagateChannelMarkerRequest = copy(markerCommand = _root_.scala.None)
    def withMarkerCommand(__v: com.google.protobuf.any.Any): PropagateChannelMarkerRequest = copy(markerCommand = Option(__v))
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => sourceOpToStartProp
        case 2 => id.orNull
        case 3 => {
          val __t = markerType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 4 => scope.orNull
        case 5 => targetOps
        case 6 => markerCommand.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(sourceOpToStartProp.iterator.map(_.toPMessage).toVector)
        case 2 => id.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => _root_.scalapb.descriptors.PEnum(markerType.scalaValueDescriptor)
        case 4 => scope.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => _root_.scalapb.descriptors.PRepeated(targetOps.iterator.map(_.toPMessage).toVector)
        case 6 => markerCommand.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest])
}

object PropagateChannelMarkerRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest = {
    val __sourceOpToStartProp: _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity] = new _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity]
    var __id: _root_.scala.Option[edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity] = _root_.scala.None
    var __markerType: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ChannelMarkerType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ChannelMarkerType.REQUIRE_ALIGNMENT
    var __scope: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None
    val __targetOps: _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity] = new _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity]
    var __markerCommand: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __sourceOpToStartProp += _root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity](_input__)
        case 18 =>
          __id = _root_.scala.Option(__id.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 24 =>
          __markerType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ChannelMarkerType.fromValue(_input__.readEnum())
        case 34 =>
          __scope = _root_.scala.Option(__scope.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.any.Any](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 42 =>
          __targetOps += _root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity](_input__)
        case 50 =>
          __markerCommand = _root_.scala.Option(__markerCommand.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.any.Any](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest(
        sourceOpToStartProp = __sourceOpToStartProp.result(),
        id = __id,
        markerType = __markerType,
        scope = __scope,
        targetOps = __targetOps.result(),
        markerCommand = __markerCommand
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest(
        sourceOpToStartProp = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity]]).getOrElse(_root_.scala.Seq.empty),
        id = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity]]),
        markerType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ChannelMarkerType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ChannelMarkerType.REQUIRE_ALIGNMENT.scalaValueDescriptor).number),
        scope = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.any.Any]]),
        targetOps = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity]]).getOrElse(_root_.scala.Seq.empty),
        markerCommand = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.any.Any]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(4)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(4)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity
      case 2 => __out = edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity
      case 4 => __out = com.google.protobuf.any.Any
      case 5 => __out = edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity
      case 6 => __out = com.google.protobuf.any.Any
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 3 => edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ChannelMarkerType
    }
  }
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest(
    sourceOpToStartProp = _root_.scala.Seq.empty,
    id = _root_.scala.None,
    markerType = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ChannelMarkerType.REQUIRE_ALIGNMENT,
    scope = _root_.scala.None,
    targetOps = _root_.scala.Seq.empty,
    markerCommand = _root_.scala.None
  )
  implicit class PropagateChannelMarkerRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest](_l) {
    def sourceOpToStartProp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity]] = field(_.sourceOpToStartProp)((c_, f_) => c_.copy(sourceOpToStartProp = f_))
    def id: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity] = field(_.getId)((c_, f_) => c_.copy(id = _root_.scala.Option(f_)))
    def optionalId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity]] = field(_.id)((c_, f_) => c_.copy(id = f_))
    def markerType: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ChannelMarkerType] = field(_.markerType)((c_, f_) => c_.copy(markerType = f_))
    def scope: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.any.Any] = field(_.getScope)((c_, f_) => c_.copy(scope = _root_.scala.Option(f_)))
    def optionalScope: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.any.Any]] = field(_.scope)((c_, f_) => c_.copy(scope = f_))
    def targetOps: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity]] = field(_.targetOps)((c_, f_) => c_.copy(targetOps = f_))
    def markerCommand: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.any.Any] = field(_.getMarkerCommand)((c_, f_) => c_.copy(markerCommand = _root_.scala.Option(f_)))
    def optionalMarkerCommand: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.any.Any]] = field(_.markerCommand)((c_, f_) => c_.copy(markerCommand = f_))
  }
  final val SOURCEOPTOSTARTPROP_FIELD_NUMBER = 1
  final val ID_FIELD_NUMBER = 2
  final val MARKERTYPE_FIELD_NUMBER = 3
  final val SCOPE_FIELD_NUMBER = 4
  final val TARGETOPS_FIELD_NUMBER = 5
  final val MARKERCOMMAND_FIELD_NUMBER = 6
  def of(
    sourceOpToStartProp: _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity],
    id: _root_.scala.Option[edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity],
    markerType: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ChannelMarkerType,
    scope: _root_.scala.Option[com.google.protobuf.any.Any],
    targetOps: _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.PhysicalOpIdentity],
    markerCommand: _root_.scala.Option[com.google.protobuf.any.Any]
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest(
    sourceOpToStartProp,
    id,
    markerType,
    scope,
    targetOps,
    markerCommand
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest])
}

@SerialVersionUID(0L)
final case class TakeGlobalCheckpointRequest(
    estimationOnly: _root_.scala.Boolean,
    checkpointId: _root_.scala.Option[edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity],
    destination: _root_.scala.Predef.String
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[TakeGlobalCheckpointRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = estimationOnly
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(1, __value)
        }
      };
      if (checkpointId.isDefined) {
        val __value = checkpointId.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = destination
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = estimationOnly
        if (__v != false) {
          _output__.writeBool(1, __v)
        }
      };
      checkpointId.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = destination
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
    }
    def withEstimationOnly(__v: _root_.scala.Boolean): TakeGlobalCheckpointRequest = copy(estimationOnly = __v)
    def getCheckpointId: edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity = checkpointId.getOrElse(edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity.defaultInstance)
    def clearCheckpointId: TakeGlobalCheckpointRequest = copy(checkpointId = _root_.scala.None)
    def withCheckpointId(__v: edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity): TakeGlobalCheckpointRequest = copy(checkpointId = Option(__v))
    def withDestination(__v: _root_.scala.Predef.String): TakeGlobalCheckpointRequest = copy(destination = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = estimationOnly
          if (__t != false) __t else null
        }
        case 2 => checkpointId.orNull
        case 3 => {
          val __t = destination
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PBoolean(estimationOnly)
        case 2 => checkpointId.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => _root_.scalapb.descriptors.PString(destination)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest])
}

object TakeGlobalCheckpointRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest = {
    var __estimationOnly: _root_.scala.Boolean = false
    var __checkpointId: _root_.scala.Option[edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity] = _root_.scala.None
    var __destination: _root_.scala.Predef.String = ""
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __estimationOnly = _input__.readBool()
        case 18 =>
          __checkpointId = _root_.scala.Option(__checkpointId.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __destination = _input__.readStringRequireUtf8()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest(
        estimationOnly = __estimationOnly,
        checkpointId = __checkpointId,
        destination = __destination
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest(
        estimationOnly = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        checkpointId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity]]),
        destination = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(5)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(5)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest(
    estimationOnly = false,
    checkpointId = _root_.scala.None,
    destination = ""
  )
  implicit class TakeGlobalCheckpointRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest](_l) {
    def estimationOnly: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.estimationOnly)((c_, f_) => c_.copy(estimationOnly = f_))
    def checkpointId: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity] = field(_.getCheckpointId)((c_, f_) => c_.copy(checkpointId = _root_.scala.Option(f_)))
    def optionalCheckpointId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity]] = field(_.checkpointId)((c_, f_) => c_.copy(checkpointId = f_))
    def destination: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.destination)((c_, f_) => c_.copy(destination = f_))
  }
  final val ESTIMATIONONLY_FIELD_NUMBER = 1
  final val CHECKPOINTID_FIELD_NUMBER = 2
  final val DESTINATION_FIELD_NUMBER = 3
  def of(
    estimationOnly: _root_.scala.Boolean,
    checkpointId: _root_.scala.Option[edu.uci.ics.amber.engine.common.virtualidentity.ChannelMarkerIdentity],
    destination: _root_.scala.Predef.String
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest(
    estimationOnly,
    checkpointId,
    destination
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest])
}

@SerialVersionUID(0L)
final case class DebugCommandRequest(
    workerId: _root_.scala.Predef.String,
    cmd: _root_.scala.Predef.String
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[DebugCommandRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = workerId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = cmd
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = workerId
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = cmd
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
    }
    def withWorkerId(__v: _root_.scala.Predef.String): DebugCommandRequest = copy(workerId = __v)
    def withCmd(__v: _root_.scala.Predef.String): DebugCommandRequest = copy(cmd = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = workerId
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = cmd
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(workerId)
        case 2 => _root_.scalapb.descriptors.PString(cmd)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest])
}

object DebugCommandRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest = {
    var __workerId: _root_.scala.Predef.String = ""
    var __cmd: _root_.scala.Predef.String = ""
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __workerId = _input__.readStringRequireUtf8()
        case 18 =>
          __cmd = _input__.readStringRequireUtf8()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest(
        workerId = __workerId,
        cmd = __cmd
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest(
        workerId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        cmd = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(6)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(6)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest(
    workerId = "",
    cmd = ""
  )
  implicit class DebugCommandRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest](_l) {
    def workerId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.workerId)((c_, f_) => c_.copy(workerId = f_))
    def cmd: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.cmd)((c_, f_) => c_.copy(cmd = f_))
  }
  final val WORKERID_FIELD_NUMBER = 1
  final val CMD_FIELD_NUMBER = 2
  def of(
    workerId: _root_.scala.Predef.String,
    cmd: _root_.scala.Predef.String
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest(
    workerId,
    cmd
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest])
}

@SerialVersionUID(0L)
final case class EvaluatePythonExpressionRequest(
    expression: _root_.scala.Predef.String,
    operatorId: _root_.scala.Predef.String
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[EvaluatePythonExpressionRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = expression
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = operatorId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = expression
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = operatorId
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
    }
    def withExpression(__v: _root_.scala.Predef.String): EvaluatePythonExpressionRequest = copy(expression = __v)
    def withOperatorId(__v: _root_.scala.Predef.String): EvaluatePythonExpressionRequest = copy(operatorId = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = expression
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = operatorId
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(expression)
        case 2 => _root_.scalapb.descriptors.PString(operatorId)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest])
}

object EvaluatePythonExpressionRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest = {
    var __expression: _root_.scala.Predef.String = ""
    var __operatorId: _root_.scala.Predef.String = ""
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __expression = _input__.readStringRequireUtf8()
        case 18 =>
          __operatorId = _input__.readStringRequireUtf8()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest(
        expression = __expression,
        operatorId = __operatorId
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest(
        expression = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        operatorId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(7)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(7)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest(
    expression = "",
    operatorId = ""
  )
  implicit class EvaluatePythonExpressionRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest](_l) {
    def expression: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.expression)((c_, f_) => c_.copy(expression = f_))
    def operatorId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.operatorId)((c_, f_) => c_.copy(operatorId = f_))
  }
  final val EXPRESSION_FIELD_NUMBER = 1
  final val OPERATORID_FIELD_NUMBER = 2
  def of(
    expression: _root_.scala.Predef.String,
    operatorId: _root_.scala.Predef.String
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest(
    expression,
    operatorId
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest])
}

/** @param stateTransferFunc
  *   Simplified for the request
  */
@SerialVersionUID(0L)
final case class ModifyLogicRequest(
    newOp: _root_.scala.Predef.String,
    stateTransferFunc: _root_.scala.Predef.String
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[ModifyLogicRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = newOp
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = stateTransferFunc
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = newOp
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = stateTransferFunc
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
    }
    def withNewOp(__v: _root_.scala.Predef.String): ModifyLogicRequest = copy(newOp = __v)
    def withStateTransferFunc(__v: _root_.scala.Predef.String): ModifyLogicRequest = copy(stateTransferFunc = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = newOp
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = stateTransferFunc
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(newOp)
        case 2 => _root_.scalapb.descriptors.PString(stateTransferFunc)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest])
}

object ModifyLogicRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest = {
    var __newOp: _root_.scala.Predef.String = ""
    var __stateTransferFunc: _root_.scala.Predef.String = ""
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __newOp = _input__.readStringRequireUtf8()
        case 18 =>
          __stateTransferFunc = _input__.readStringRequireUtf8()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest(
        newOp = __newOp,
        stateTransferFunc = __stateTransferFunc
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest(
        newOp = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        stateTransferFunc = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(8)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(8)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest(
    newOp = "",
    stateTransferFunc = ""
  )
  implicit class ModifyLogicRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest](_l) {
    def newOp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.newOp)((c_, f_) => c_.copy(newOp = f_))
    def stateTransferFunc: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.stateTransferFunc)((c_, f_) => c_.copy(stateTransferFunc = f_))
  }
  final val NEWOP_FIELD_NUMBER = 1
  final val STATETRANSFERFUNC_FIELD_NUMBER = 2
  def of(
    newOp: _root_.scala.Predef.String,
    stateTransferFunc: _root_.scala.Predef.String
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest(
    newOp,
    stateTransferFunc
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest])
}

@SerialVersionUID(0L)
final case class RetryWorkflowRequest(
    workers: _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[RetryWorkflowRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      workers.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      workers.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def clearWorkers = copy(workers = _root_.scala.Seq.empty)
    def addWorkers(__vs: edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity *): RetryWorkflowRequest = addAllWorkers(__vs)
    def addAllWorkers(__vs: Iterable[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]): RetryWorkflowRequest = copy(workers = workers ++ __vs)
    def withWorkers(__v: _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]): RetryWorkflowRequest = copy(workers = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => workers
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(workers.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest])
}

object RetryWorkflowRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest = {
    val __workers: _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity] = new _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __workers += _root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity](_input__)
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest(
        workers = __workers.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest(
        workers = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(9)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(9)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest(
    workers = _root_.scala.Seq.empty
  )
  implicit class RetryWorkflowRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest](_l) {
    def workers: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]] = field(_.workers)((c_, f_) => c_.copy(workers = f_))
  }
  final val WORKERS_FIELD_NUMBER = 1
  def of(
    workers: _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest(
    workers
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest])
}

@SerialVersionUID(0L)
final case class RetrieveWorkflowStateRequest(
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[RetrieveWorkflowStateRequest] {
    final override def serializedSize: _root_.scala.Int = 0
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
    }
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = throw new MatchError(__fieldNumber)
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = throw new MatchError(__field)
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.RetrieveWorkflowStateRequest])
}

object RetrieveWorkflowStateRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest = {
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest(
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest(
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(11)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(11)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest(
  )
  implicit class RetrieveWorkflowStateRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest](_l) {
  }
  def of(
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetrieveWorkflowStateRequest(
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.RetrieveWorkflowStateRequest])
}

@SerialVersionUID(0L)
final case class ConsoleMessageTriggeredRequest(
    consoleMessage: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessage]
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[ConsoleMessageTriggeredRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (consoleMessage.isDefined) {
        val __value = consoleMessage.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      consoleMessage.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def getConsoleMessage: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessage = consoleMessage.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessage.defaultInstance)
    def clearConsoleMessage: ConsoleMessageTriggeredRequest = copy(consoleMessage = _root_.scala.None)
    def withConsoleMessage(__v: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessage): ConsoleMessageTriggeredRequest = copy(consoleMessage = Option(__v))
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => consoleMessage.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => consoleMessage.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest])
}

object ConsoleMessageTriggeredRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest = {
    var __consoleMessage: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessage] = _root_.scala.None
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __consoleMessage = _root_.scala.Option(__consoleMessage.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessage](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest(
        consoleMessage = __consoleMessage
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest(
        consoleMessage = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessage]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(12)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(12)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessage
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest(
    consoleMessage = _root_.scala.None
  )
  implicit class ConsoleMessageTriggeredRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest](_l) {
    def consoleMessage: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessage] = field(_.getConsoleMessage)((c_, f_) => c_.copy(consoleMessage = _root_.scala.Option(f_)))
    def optionalConsoleMessage: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessage]] = field(_.consoleMessage)((c_, f_) => c_.copy(consoleMessage = f_))
  }
  final val CONSOLEMESSAGE_FIELD_NUMBER = 1
  def of(
    consoleMessage: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessage]
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest(
    consoleMessage
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest])
}

@SerialVersionUID(0L)
final case class PortCompletedRequest(
    portId: _root_.scala.Option[edu.uci.ics.amber.engine.common.workflow.PortIdentity],
    input: _root_.scala.Boolean
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[PortCompletedRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (portId.isDefined) {
        val __value = portId.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = input
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(2, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      portId.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = input
        if (__v != false) {
          _output__.writeBool(2, __v)
        }
      };
    }
    def getPortId: edu.uci.ics.amber.engine.common.workflow.PortIdentity = portId.getOrElse(edu.uci.ics.amber.engine.common.workflow.PortIdentity.defaultInstance)
    def clearPortId: PortCompletedRequest = copy(portId = _root_.scala.None)
    def withPortId(__v: edu.uci.ics.amber.engine.common.workflow.PortIdentity): PortCompletedRequest = copy(portId = Option(__v))
    def withInput(__v: _root_.scala.Boolean): PortCompletedRequest = copy(input = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => portId.orNull
        case 2 => {
          val __t = input
          if (__t != false) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => portId.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PBoolean(input)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest])
}

object PortCompletedRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest = {
    var __portId: _root_.scala.Option[edu.uci.ics.amber.engine.common.workflow.PortIdentity] = _root_.scala.None
    var __input: _root_.scala.Boolean = false
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __portId = _root_.scala.Option(__portId.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.workflow.PortIdentity](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 16 =>
          __input = _input__.readBool()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest(
        portId = __portId,
        input = __input
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest(
        portId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.common.workflow.PortIdentity]]),
        input = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(13)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(13)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.common.workflow.PortIdentity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest(
    portId = _root_.scala.None,
    input = false
  )
  implicit class PortCompletedRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest](_l) {
    def portId: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.common.workflow.PortIdentity] = field(_.getPortId)((c_, f_) => c_.copy(portId = _root_.scala.Option(f_)))
    def optionalPortId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[edu.uci.ics.amber.engine.common.workflow.PortIdentity]] = field(_.portId)((c_, f_) => c_.copy(portId = f_))
    def input: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.input)((c_, f_) => c_.copy(input = f_))
  }
  final val PORTID_FIELD_NUMBER = 1
  final val INPUT_FIELD_NUMBER = 2
  def of(
    portId: _root_.scala.Option[edu.uci.ics.amber.engine.common.workflow.PortIdentity],
    input: _root_.scala.Boolean
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest(
    portId,
    input
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest])
}

@SerialVersionUID(0L)
final case class StartWorkflowRequest(
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[StartWorkflowRequest] {
    final override def serializedSize: _root_.scala.Int = 0
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
    }
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = throw new MatchError(__fieldNumber)
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = throw new MatchError(__field)
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.StartWorkflowRequest])
}

object StartWorkflowRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest = {
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest(
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest(
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(14)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(14)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest(
  )
  implicit class StartWorkflowRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest](_l) {
  }
  def of(
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.StartWorkflowRequest(
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.StartWorkflowRequest])
}

@SerialVersionUID(0L)
final case class ResumeWorkflowRequest(
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[ResumeWorkflowRequest] {
    final override def serializedSize: _root_.scala.Int = 0
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
    }
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = throw new MatchError(__fieldNumber)
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = throw new MatchError(__field)
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.ResumeWorkflowRequest])
}

object ResumeWorkflowRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest = {
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest(
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest(
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(15)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(15)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest(
  )
  implicit class ResumeWorkflowRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest](_l) {
  }
  def of(
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ResumeWorkflowRequest(
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.ResumeWorkflowRequest])
}

@SerialVersionUID(0L)
final case class PauseWorkflowRequest(
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[PauseWorkflowRequest] {
    final override def serializedSize: _root_.scala.Int = 0
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
    }
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = throw new MatchError(__fieldNumber)
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = throw new MatchError(__field)
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.PauseWorkflowRequest])
}

object PauseWorkflowRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest = {
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest(
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest(
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(16)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(16)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest(
  )
  implicit class PauseWorkflowRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest](_l) {
  }
  def of(
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PauseWorkflowRequest(
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.PauseWorkflowRequest])
}

/** @param state
  *   Simplified worker state as string for the request
  */
@SerialVersionUID(0L)
final case class WorkerStateUpdatedRequest(
    state: _root_.scala.Predef.String
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[WorkerStateUpdatedRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = state
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = state
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
    }
    def withState(__v: _root_.scala.Predef.String): WorkerStateUpdatedRequest = copy(state = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = state
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(state)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest])
}

object WorkerStateUpdatedRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest = {
    var __state: _root_.scala.Predef.String = ""
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __state = _input__.readStringRequireUtf8()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest(
        state = __state
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest(
        state = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(17)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(17)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest(
    state = ""
  )
  implicit class WorkerStateUpdatedRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest](_l) {
    def state: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.state)((c_, f_) => c_.copy(state = f_))
  }
  final val STATE_FIELD_NUMBER = 1
  def of(
    state: _root_.scala.Predef.String
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest(
    state
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest])
}

@SerialVersionUID(0L)
final case class WorkerExecutionCompletedRequest(
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[WorkerExecutionCompletedRequest] {
    final override def serializedSize: _root_.scala.Int = 0
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
    }
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = throw new MatchError(__fieldNumber)
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = throw new MatchError(__field)
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.WorkerExecutionCompletedRequest])
}

object WorkerExecutionCompletedRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest = {
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest(
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest(
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(18)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(18)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest(
  )
  implicit class WorkerExecutionCompletedRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest](_l) {
  }
  def of(
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerExecutionCompletedRequest(
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.WorkerExecutionCompletedRequest])
}

/** @param link
  *   Simplified PhysicalLink as a string for the request
  */
@SerialVersionUID(0L)
final case class LinkWorkersRequest(
    link: _root_.scala.Predef.String
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[LinkWorkersRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = link
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = link
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
    }
    def withLink(__v: _root_.scala.Predef.String): LinkWorkersRequest = copy(link = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = link
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(link)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest])
}

object LinkWorkersRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest = {
    var __link: _root_.scala.Predef.String = ""
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __link = _input__.readStringRequireUtf8()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest(
        link = __link
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest(
        link = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(19)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(19)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest(
    link = ""
  )
  implicit class LinkWorkersRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest](_l) {
    def link: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.link)((c_, f_) => c_.copy(link = f_))
  }
  final val LINK_FIELD_NUMBER = 1
  def of(
    link: _root_.scala.Predef.String
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest(
    link
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest])
}

/** Ping message
  */
@SerialVersionUID(0L)
final case class Ping(
    i: _root_.scala.Int,
    end: _root_.scala.Int,
    to: edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[Ping] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = i
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, __value)
        }
      };
      
      {
        val __value = end
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, __value)
        }
      };
      
      {
        val __value = to
        if (__value.serializedSize != 0) {
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = i
        if (__v != 0) {
          _output__.writeInt32(1, __v)
        }
      };
      {
        val __v = end
        if (__v != 0) {
          _output__.writeInt32(2, __v)
        }
      };
      {
        val __v = to
        if (__v.serializedSize != 0) {
          _output__.writeTag(3, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        }
      };
    }
    def withI(__v: _root_.scala.Int): Ping = copy(i = __v)
    def withEnd(__v: _root_.scala.Int): Ping = copy(end = __v)
    def withTo(__v: edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity): Ping = copy(to = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = i
          if (__t != 0) __t else null
        }
        case 2 => {
          val __t = end
          if (__t != 0) __t else null
        }
        case 3 => {
          val __t = to
          if (__t != edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity.defaultInstance) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(i)
        case 2 => _root_.scalapb.descriptors.PInt(end)
        case 3 => to.toPMessage
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.Ping])
}

object Ping extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping = {
    var __i: _root_.scala.Int = 0
    var __end: _root_.scala.Int = 0
    var __to: _root_.scala.Option[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity] = _root_.scala.None
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __i = _input__.readInt32()
        case 16 =>
          __end = _input__.readInt32()
        case 26 =>
          __to = _root_.scala.Some(__to.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping(
        i = __i,
        end = __end,
        to = __to.getOrElse(edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity.defaultInstance)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping(
        i = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        end = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        to = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]).getOrElse(edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity.defaultInstance)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(20)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(20)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 3 => __out = edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping(
    i = 0,
    end = 0,
    to = edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity.defaultInstance
  )
  implicit class PingLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping](_l) {
    def i: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.i)((c_, f_) => c_.copy(i = f_))
    def end: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.end)((c_, f_) => c_.copy(end = f_))
    def to: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity] = field(_.to)((c_, f_) => c_.copy(to = f_))
  }
  final val I_FIELD_NUMBER = 1
  final val END_FIELD_NUMBER = 2
  final val TO_FIELD_NUMBER = 3
  def of(
    i: _root_.scala.Int,
    end: _root_.scala.Int,
    to: edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping(
    i,
    end,
    to
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Ping])
}

/** Pong message
  */
@SerialVersionUID(0L)
final case class Pong(
    i: _root_.scala.Int,
    end: _root_.scala.Int,
    to: edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[Pong] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = i
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, __value)
        }
      };
      
      {
        val __value = end
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, __value)
        }
      };
      
      {
        val __value = to
        if (__value.serializedSize != 0) {
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = i
        if (__v != 0) {
          _output__.writeInt32(1, __v)
        }
      };
      {
        val __v = end
        if (__v != 0) {
          _output__.writeInt32(2, __v)
        }
      };
      {
        val __v = to
        if (__v.serializedSize != 0) {
          _output__.writeTag(3, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        }
      };
    }
    def withI(__v: _root_.scala.Int): Pong = copy(i = __v)
    def withEnd(__v: _root_.scala.Int): Pong = copy(end = __v)
    def withTo(__v: edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity): Pong = copy(to = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = i
          if (__t != 0) __t else null
        }
        case 2 => {
          val __t = end
          if (__t != 0) __t else null
        }
        case 3 => {
          val __t = to
          if (__t != edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity.defaultInstance) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(i)
        case 2 => _root_.scalapb.descriptors.PInt(end)
        case 3 => to.toPMessage
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.Pong])
}

object Pong extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong = {
    var __i: _root_.scala.Int = 0
    var __end: _root_.scala.Int = 0
    var __to: _root_.scala.Option[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity] = _root_.scala.None
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __i = _input__.readInt32()
        case 16 =>
          __end = _input__.readInt32()
        case 26 =>
          __to = _root_.scala.Some(__to.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong(
        i = __i,
        end = __end,
        to = __to.getOrElse(edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity.defaultInstance)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong(
        i = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        end = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        to = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]).getOrElse(edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity.defaultInstance)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(21)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(21)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 3 => __out = edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong(
    i = 0,
    end = 0,
    to = edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity.defaultInstance
  )
  implicit class PongLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong](_l) {
    def i: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.i)((c_, f_) => c_.copy(i = f_))
    def end: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.end)((c_, f_) => c_.copy(end = f_))
    def to: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity] = field(_.to)((c_, f_) => c_.copy(to = f_))
  }
  final val I_FIELD_NUMBER = 1
  final val END_FIELD_NUMBER = 2
  final val TO_FIELD_NUMBER = 3
  def of(
    i: _root_.scala.Int,
    end: _root_.scala.Int,
    to: edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong(
    i,
    end,
    to
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Pong])
}

/** Nested message
  */
@SerialVersionUID(0L)
final case class Nested(
    k: _root_.scala.Int
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[Nested] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = k
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = k
        if (__v != 0) {
          _output__.writeInt32(1, __v)
        }
      };
    }
    def withK(__v: _root_.scala.Int): Nested = copy(k = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = k
          if (__t != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(k)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.Nested])
}

object Nested extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested = {
    var __k: _root_.scala.Int = 0
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __k = _input__.readInt32()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested(
        k = __k
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested(
        k = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Int]).getOrElse(0)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(23)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(23)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested(
    k = 0
  )
  implicit class NestedLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested](_l) {
    def k: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.k)((c_, f_) => c_.copy(k = f_))
  }
  final val K_FIELD_NUMBER = 1
  def of(
    k: _root_.scala.Int
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested(
    k
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Nested])
}

/** Pass message
  */
@SerialVersionUID(0L)
final case class Pass(
    value: _root_.scala.Predef.String
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[Pass] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = value
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = value
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
    }
    def withValue(__v: _root_.scala.Predef.String): Pass = copy(value = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = value
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(value)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.Pass])
}

object Pass extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass = {
    var __value: _root_.scala.Predef.String = ""
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __value = _input__.readStringRequireUtf8()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass(
        value = __value
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass(
        value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(22)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(22)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass(
    value = ""
  )
  implicit class PassLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass](_l) {
    def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.value)((c_, f_) => c_.copy(value = f_))
  }
  final val VALUE_FIELD_NUMBER = 1
  def of(
    value: _root_.scala.Predef.String
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass(
    value
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Pass])
}

/** ErrorCommand message
  */
@SerialVersionUID(0L)
final case class ErrorCommand(
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[ErrorCommand] {
    final override def serializedSize: _root_.scala.Int = 0
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
    }
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = throw new MatchError(__fieldNumber)
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = throw new MatchError(__field)
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand])
}

object ErrorCommand extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand = {
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand(
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand(
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(25)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(25)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand(
  )
  implicit class ErrorCommandLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand](_l) {
  }
  def of(
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand(
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand])
}

/** Recursion message
  */
@SerialVersionUID(0L)
final case class Recursion(
    i: _root_.scala.Int
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[Recursion] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = i
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = i
        if (__v != 0) {
          _output__.writeInt32(1, __v)
        }
      };
    }
    def withI(__v: _root_.scala.Int): Recursion = copy(i = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = i
          if (__t != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(i)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.Recursion])
}

object Recursion extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion = {
    var __i: _root_.scala.Int = 0
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __i = _input__.readInt32()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion(
        i = __i
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion(
        i = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Int]).getOrElse(0)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(29)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(29)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion(
    i = 0
  )
  implicit class RecursionLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion](_l) {
    def i: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.i)((c_, f_) => c_.copy(i = f_))
  }
  final val I_FIELD_NUMBER = 1
  def of(
    i: _root_.scala.Int
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion(
    i
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Recursion])
}

/** Collect message
  */
@SerialVersionUID(0L)
final case class Collect(
    workers: _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[Collect] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      workers.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      workers.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def clearWorkers = copy(workers = _root_.scala.Seq.empty)
    def addWorkers(__vs: edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity *): Collect = addAllWorkers(__vs)
    def addAllWorkers(__vs: Iterable[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]): Collect = copy(workers = workers ++ __vs)
    def withWorkers(__v: _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]): Collect = copy(workers = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => workers
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(workers.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.Collect])
}

object Collect extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect = {
    val __workers: _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity] = new _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __workers += _root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity](_input__)
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect(
        workers = __workers.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect(
        workers = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(26)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(26)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect(
    workers = _root_.scala.Seq.empty
  )
  implicit class CollectLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect](_l) {
    def workers: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]] = field(_.workers)((c_, f_) => c_.copy(workers = f_))
  }
  final val WORKERS_FIELD_NUMBER = 1
  def of(
    workers: _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect(
    workers
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Collect])
}

/** GenerateNumber message
  */
@SerialVersionUID(0L)
final case class GenerateNumber(
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[GenerateNumber] {
    final override def serializedSize: _root_.scala.Int = 0
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
    }
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = throw new MatchError(__fieldNumber)
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = throw new MatchError(__field)
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber])
}

object GenerateNumber extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber = {
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber(
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber(
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(27)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(27)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber(
  )
  implicit class GenerateNumberLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber](_l) {
  }
  def of(
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber(
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber])
}

/** MultiCall message
  */
@SerialVersionUID(0L)
final case class MultiCall(
    seq: _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[MultiCall] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      seq.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      seq.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def clearSeq = copy(seq = _root_.scala.Seq.empty)
    def addSeq(__vs: edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity *): MultiCall = addAllSeq(__vs)
    def addAllSeq(__vs: Iterable[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]): MultiCall = copy(seq = seq ++ __vs)
    def withSeq(__v: _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]): MultiCall = copy(seq = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => seq
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(seq.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.MultiCall])
}

object MultiCall extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall = {
    val __seq: _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity] = new _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __seq += _root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity](_input__)
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall(
        seq = __seq.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall(
        seq = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(24)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(24)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall(
    seq = _root_.scala.Seq.empty
  )
  implicit class MultiCallLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall](_l) {
    def seq: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]] = field(_.seq)((c_, f_) => c_.copy(seq = f_))
  }
  final val SEQ_FIELD_NUMBER = 1
  def of(
    seq: _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall(
    seq
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.MultiCall])
}

/** Chain message
  */
@SerialVersionUID(0L)
final case class Chain(
    nexts: _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequest.NonEmpty with scalapb.lenses.Updatable[Chain] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      nexts.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      nexts.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def clearNexts = copy(nexts = _root_.scala.Seq.empty)
    def addNexts(__vs: edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity *): Chain = addAllNexts(__vs)
    def addAllNexts(__vs: Iterable[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]): Chain = copy(nexts = nexts ++ __vs)
    def withNexts(__v: _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]): Chain = copy(nexts = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => nexts
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(nexts.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain.type = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.Chain])
}

object Chain extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain = {
    val __nexts: _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity] = new _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __nexts += _root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity](_input__)
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain(
        nexts = __nexts.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain(
        nexts = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlcommandsProto.javaDescriptor.getMessageTypes().get(28)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlcommandsProto.scalaDescriptor.messages(28)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain(
    nexts = _root_.scala.Seq.empty
  )
  implicit class ChainLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain](_l) {
    def nexts: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]] = field(_.nexts)((c_, f_) => c_.copy(nexts = f_))
  }
  final val NEXTS_FIELD_NUMBER = 1
  def of(
    nexts: _root_.scala.Seq[edu.uci.ics.amber.engine.common.virtualidentity.ActorVirtualIdentity]
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain = _root_.edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain(
    nexts
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Chain])
}
