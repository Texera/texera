// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package edu.uci.ics.amber.engine.architecture.worker.controlcommands

object ControlcommandsProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    edu.uci.ics.amber.engine.architecture.sendsemantics.partitionings.PartitioningsProto,
    edu.uci.ics.amber.engine.common.virtualidentity.VirtualidentityProto,
    edu.uci.ics.amber.engine.common.workflow.WorkflowProto,
    com.google.protobuf.timestamp.TimestampProto,
    scalapb.options.ScalapbProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.NoOpV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.StartWorkerV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.PauseWorkerV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ResumeWorkerV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.SchedulerTimeSlotEventV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.OpenOperatorV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.AssignPortV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.AddInputChannelV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.AddPartitioningV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.WorkerExecutionCompletedV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.QueryStatisticsV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.QueryCurrentInputTupleV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.LinkOrdinal,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.InitializeOperatorLogicV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ModifyOperatorLogicV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ReplayCurrentTupleV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ConsoleMessage,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.PythonConsoleMessageV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.EvaluateExpressionV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.WorkerDebugCommandV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.PortCompletedV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ControlCommandV2Message
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """CkJlZHUvdWNpL2ljcy9hbWJlci9lbmdpbmUvYXJjaGl0ZWN0dXJlL3dvcmtlci9jb250cm9sY29tbWFuZHMucHJvdG8SLGVkd
  S51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyGkdlZHUvdWNpL2ljcy9hbWJlci9lbmdpbmUvYXJjaGl0Z
  WN0dXJlL3NlbmRzZW1hbnRpY3MvcGFydGl0aW9uaW5ncy5wcm90bxo1ZWR1L3VjaS9pY3MvYW1iZXIvZW5naW5lL2NvbW1vbi92a
  XJ0dWFsaWRlbnRpdHkucHJvdG8aLmVkdS91Y2kvaWNzL2FtYmVyL2VuZ2luZS9jb21tb24vd29ya2Zsb3cucHJvdG8aH2dvb2dsZ
  S9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8aFXNjYWxhcGIvc2NhbGFwYi5wcm90byIICgZOb09wVjIiDwoNU3RhcnRXb3JrZXJWM
  iIPCg1QYXVzZVdvcmtlclYyIhAKDlJlc3VtZVdvcmtlclYyIlwKGFNjaGVkdWxlclRpbWVTbG90RXZlbnRWMhJAChF0aW1lX3Nsb
  3RfZXhwaXJlZBgBIAEoCEIU4j8REg90aW1lU2xvdEV4cGlyZWRSD3RpbWVTbG90RXhwaXJlZCIQCg5PcGVuT3BlcmF0b3JWMiLFA
  goMQXNzaWduUG9ydFYyElUKBnBvcnRJZBgBIAEoCzItLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5jb21tb24uUG9ydElkZW50a
  XR5Qg7iPwsSBnBvcnRJZPABAVIGcG9ydElkEiAKBWlucHV0GAIgASgIQgriPwcSBWlucHV0UgVpbnB1dBJrCgZzY2hlbWEYAyADK
  AsyRi5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5Bc3NpZ25Qb3J0VjIuU2NoZW1hRW50cnlCC
  +I/CBIGc2NoZW1hUgZzY2hlbWEaTwoLU2NoZW1hRW50cnkSGgoDa2V5GAEgASgJQgjiPwUSA2tleVIDa2V5EiAKBXZhbHVlGAIgA
  SgJQgriPwcSBXZhbHVlUgV2YWx1ZToCOAEizQEKEUFkZElucHV0Q2hhbm5lbFYyEmEKCWNoYW5uZWxJZBgBIAEoCzIwLmVkdS51Y
  2kuaWNzLmFtYmVyLmVuZ2luZS5jb21tb24uQ2hhbm5lbElkZW50aXR5QhHiPw4SCWNoYW5uZWxJZPABAVIJY2hhbm5lbElkElUKB
  nBvcnRJZBgCIAEoCzItLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5jb21tb24uUG9ydElkZW50aXR5Qg7iPwsSBnBvcnRJZPABA
  VIGcG9ydElkIt4BChFBZGRQYXJ0aXRpb25pbmdWMhJMCgN0YWcYASABKAsyLS5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuY29tb
  W9uLlBoeXNpY2FsTGlua0IL4j8IEgN0YWfwAQFSA3RhZxJ7CgxwYXJ0aXRpb25pbmcYAiABKAsyQS5lZHUudWNpLmljcy5hbWJlc
  i5lbmdpbmUuYXJjaGl0ZWN0dXJlLnNlbmRzZW1hbnRpY3MuUGFydGl0aW9uaW5nQhTiPxESDHBhcnRpdGlvbmluZ/ABAVIMcGFyd
  Gl0aW9uaW5nIhwKGldvcmtlckV4ZWN1dGlvbkNvbXBsZXRlZFYyIhMKEVF1ZXJ5U3RhdGlzdGljc1YyIhoKGFF1ZXJ5Q3VycmVud
  ElucHV0VHVwbGVWMiKTAQoLTGlua09yZGluYWwSTwoEbGluaxgBIAEoCzItLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5jb21tb
  24uUGh5c2ljYWxMaW5rQgziPwkSBGxpbmvwAQFSBGxpbmsSMwoMcG9ydF9vcmRpbmFsGAIgASgDQhDiPw0SC3BvcnRPcmRpbmFsU
  gtwb3J0T3JkaW5hbCLRAgoZSW5pdGlhbGl6ZU9wZXJhdG9yTG9naWNWMhIdCgRjb2RlGAEgASgJQgniPwYSBGNvZGVSBGNvZGUSK
  goJaXNfc291cmNlGAIgASgIQg3iPwoSCGlzU291cmNlUghpc1NvdXJjZRKRAQoNb3V0cHV0X3NjaGVtYRgDIAMoCzJZLmVkdS51Y
  2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLkluaXRpYWxpemVPcGVyYXRvckxvZ2ljVjIuT3V0cHV0U2NoZ
  W1hRW50cnlCEeI/DhIMb3V0cHV0U2NoZW1hUgxvdXRwdXRTY2hlbWEaVQoRT3V0cHV0U2NoZW1hRW50cnkSGgoDa2V5GAEgASgJQ
  gjiPwUSA2tleVIDa2V5EiAKBXZhbHVlGAIgASgJQgriPwcSBXZhbHVlUgV2YWx1ZToCOAEiYgoVTW9kaWZ5T3BlcmF0b3JMb2dpY
  1YyEh0KBGNvZGUYASABKAlCCeI/BhIEY29kZVIEY29kZRIqCglpc19zb3VyY2UYAiABKAhCDeI/ChIIaXNTb3VyY2VSCGlzU291c
  mNlIhYKFFJlcGxheUN1cnJlbnRUdXBsZVYyIuMCCg5Db25zb2xlTWVzc2FnZRIqCgl3b3JrZXJfaWQYASABKAlCDeI/ChIId29ya
  2VySWRSCHdvcmtlcklkEksKCXRpbWVzdGFtcBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCEeI/DhIJdGltZXN0Y
  W1w8AEBUgl0aW1lc3RhbXASaQoIbXNnX3R5cGUYAyABKA4yQC5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlL
  ndvcmtlci5Db25zb2xlTWVzc2FnZVR5cGVCDOI/CRIHbXNnVHlwZVIHbXNnVHlwZRIjCgZzb3VyY2UYBCABKAlCC+I/CBIGc291c
  mNlUgZzb3VyY2USIAoFdGl0bGUYBSABKAlCCuI/BxIFdGl0bGVSBXRpdGxlEiYKB21lc3NhZ2UYBiABKAlCDOI/CRIHbWVzc2FnZ
  VIHbWVzc2FnZSKBAQoWUHl0aG9uQ29uc29sZU1lc3NhZ2VWMhJnCgdtZXNzYWdlGAEgASgLMjwuZWR1LnVjaS5pY3MuYW1iZXIuZ
  W5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuQ29uc29sZU1lc3NhZ2VCD+I/DBIHbWVzc2FnZfABAVIHbWVzc2FnZSJHChRFdmFsd
  WF0ZUV4cHJlc3Npb25WMhIvCgpleHByZXNzaW9uGAEgASgJQg/iPwwSCmV4cHJlc3Npb25SCmV4cHJlc3Npb24iMgoUV29ya2VyR
  GVidWdDb21tYW5kVjISGgoDY21kGAEgASgJQgjiPwUSA2NtZFIDY21kIosBCg9Qb3J0Q29tcGxldGVkVjISVgoHcG9ydF9pZBgBI
  AEoCzItLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5jb21tb24uUG9ydElkZW50aXR5Qg7iPwsSBnBvcnRJZPABAVIGcG9ydElkE
  iAKBWlucHV0GAIgASgIQgriPwcSBWlucHV0UgVpbnB1dCLKFAoQQ29udHJvbENvbW1hbmRWMhJyCgxzdGFydF93b3JrZXIYASABK
  AsyOy5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5TdGFydFdvcmtlclYyQhDiPw0SC3N0YXJ0V
  29ya2VySABSC3N0YXJ0V29ya2VyEnIKDHBhdXNlX3dvcmtlchgCIAEoCzI7LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoa
  XRlY3R1cmUud29ya2VyLlBhdXNlV29ya2VyVjJCEOI/DRILcGF1c2VXb3JrZXJIAFILcGF1c2VXb3JrZXISdgoNcmVzdW1lX3dvc
  mtlchgDIAEoCzI8LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLlJlc3VtZVdvcmtlclYyQhHiP
  w4SDHJlc3VtZVdvcmtlckgAUgxyZXN1bWVXb3JrZXISbgoLYXNzaWduX3BvcnQYBCABKAsyOi5lZHUudWNpLmljcy5hbWJlci5lb
  mdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5Bc3NpZ25Qb3J0VjJCD+I/DBIKYXNzaWduUG9ydEgAUgphc3NpZ25Qb3J0EoIBChBhZ
  GRfcGFydGl0aW9uaW5nGAUgASgLMj8uZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuQWRkUGFyd
  Gl0aW9uaW5nVjJCFOI/ERIPYWRkUGFydGl0aW9uaW5nSABSD2FkZFBhcnRpdGlvbmluZxKDAQoRYWRkX2lucHV0X2NoYW5uZWwYB
  iABKAsyPy5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5BZGRJbnB1dENoYW5uZWxWMkIU4j8RE
  g9hZGRJbnB1dENoYW5uZWxIAFIPYWRkSW5wdXRDaGFubmVsEoIBChBxdWVyeV9zdGF0aXN0aWNzGAcgASgLMj8uZWR1LnVjaS5pY
  3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuUXVlcnlTdGF0aXN0aWNzVjJCFOI/ERIPcXVlcnlTdGF0aXN0aWNzS
  ABSD3F1ZXJ5U3RhdGlzdGljcxKgAQoZcXVlcnlfY3VycmVudF9pbnB1dF90dXBsZRgIIAEoCzJGLmVkdS51Y2kuaWNzLmFtYmVyL
  mVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLlF1ZXJ5Q3VycmVudElucHV0VHVwbGVWMkIb4j8YEhZxdWVyeUN1cnJlbnRJbnB1d
  FR1cGxlSABSFnF1ZXJ5Q3VycmVudElucHV0VHVwbGUSdgoNb3Blbl9vcGVyYXRvchgJIAEoCzI8LmVkdS51Y2kuaWNzLmFtYmVyL
  mVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLk9wZW5PcGVyYXRvclYyQhHiPw4SDG9wZW5PcGVyYXRvckgAUgxvcGVuT3BlcmF0b
  3ISegoOcG9ydF9jb21wbGV0ZWQYCiABKAsyPS5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5Qb
  3J0Q29tcGxldGVkVjJCEuI/DxINcG9ydENvbXBsZXRlZEgAUg1wb3J0Q29tcGxldGVkEqABChlzY2hlZHVsZXJfdGltZV9zbG90X
  2V2ZW50GAsgASgLMkYuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuU2NoZWR1bGVyVGltZVNsb
  3RFdmVudFYyQhviPxgSFnNjaGVkdWxlclRpbWVTbG90RXZlbnRIAFIWc2NoZWR1bGVyVGltZVNsb3RFdmVudBKjAQoZaW5pdGlhb
  Gl6ZV9vcGVyYXRvcl9sb2dpYxgVIAEoCzJHLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLklua
  XRpYWxpemVPcGVyYXRvckxvZ2ljVjJCHOI/GRIXaW5pdGlhbGl6ZU9wZXJhdG9yTG9naWNIAFIXaW5pdGlhbGl6ZU9wZXJhdG9yT
  G9naWMSkwEKFW1vZGlmeV9vcGVyYXRvcl9sb2dpYxgWIAEoCzJDLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1c
  mUud29ya2VyLk1vZGlmeU9wZXJhdG9yTG9naWNWMkIY4j8VEhNtb2RpZnlPcGVyYXRvckxvZ2ljSABSE21vZGlmeU9wZXJhdG9yT
  G9naWMSlwEKFnB5dGhvbl9jb25zb2xlX21lc3NhZ2UYFyABKAsyRC5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0d
  XJlLndvcmtlci5QeXRob25Db25zb2xlTWVzc2FnZVYyQhniPxYSFHB5dGhvbkNvbnNvbGVNZXNzYWdlSABSFHB5dGhvbkNvbnNvb
  GVNZXNzYWdlEo8BChRyZXBsYXlfY3VycmVudF90dXBsZRgYIAEoCzJCLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY
  3R1cmUud29ya2VyLlJlcGxheUN1cnJlbnRUdXBsZVYyQhfiPxQSEnJlcGxheUN1cnJlbnRUdXBsZUgAUhJyZXBsYXlDdXJyZW50V
  HVwbGUSjgEKE2V2YWx1YXRlX2V4cHJlc3Npb24YGSABKAsyQi5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlL
  ndvcmtlci5FdmFsdWF0ZUV4cHJlc3Npb25WMkIX4j8UEhJldmFsdWF0ZUV4cHJlc3Npb25IAFISZXZhbHVhdGVFeHByZXNzaW9uE
  o8BChR3b3JrZXJfZGVidWdfY29tbWFuZBhRIAEoCzJCLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya
  2VyLldvcmtlckRlYnVnQ29tbWFuZFYyQhfiPxQSEndvcmtlckRlYnVnQ29tbWFuZEgAUhJ3b3JrZXJEZWJ1Z0NvbW1hbmQSpwEKG
  ndvcmtlcl9leGVjdXRpb25fY29tcGxldGVkGGUgASgLMkguZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b
  3JrZXIuV29ya2VyRXhlY3V0aW9uQ29tcGxldGVkVjJCHeI/GhIYd29ya2VyRXhlY3V0aW9uQ29tcGxldGVkSABSGHdvcmtlckV4Z
  WN1dGlvbkNvbXBsZXRlZBJXCgVub19vcBiPTiABKAsyNC5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvc
  mtlci5Ob09wVjJCCeI/BhIEbm9PcEgAUgRub09wQg4KDHNlYWxlZF92YWx1ZSpFChJDb25zb2xlTWVzc2FnZVR5cGUSCQoFUFJJT
  lQQABIJCgVFUlJPUhABEgsKB0NPTU1BTkQQAhIMCghERUJVR0dFUhADQgniPwZIAFgAeAFiBnByb3RvMw=="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      edu.uci.ics.amber.engine.architecture.sendsemantics.partitionings.PartitioningsProto.javaDescriptor,
      edu.uci.ics.amber.engine.common.virtualidentity.VirtualidentityProto.javaDescriptor,
      edu.uci.ics.amber.engine.common.workflow.WorkflowProto.javaDescriptor,
      com.google.protobuf.timestamp.TimestampProto.javaDescriptor,
      scalapb.options.ScalapbProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}