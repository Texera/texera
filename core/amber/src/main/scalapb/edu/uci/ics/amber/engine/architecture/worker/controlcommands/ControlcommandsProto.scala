// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package edu.uci.ics.amber.engine.architecture.worker.controlcommands

object ControlcommandsProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    edu.uci.ics.amber.engine.architecture.sendsemantics.partitionings.PartitioningsProto,
    edu.uci.ics.amber.engine.common.virtualidentity.VirtualidentityProto,
    edu.uci.ics.amber.engine.common.workflow.WorkflowProto,
    com.google.protobuf.timestamp.TimestampProto,
    scalapb.options.ScalapbProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.NoOpV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.StartWorkerV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.PauseWorkerV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ResumeWorkerV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.SchedulerTimeSlotEventV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.OpenOperatorV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.AssignPortV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.AddInputChannelV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.AddPartitioningV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.WorkerExecutionCompletedV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.QueryStatisticsV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.QueryCurrentInputTupleV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.LinkOrdinal,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.InitializeOperatorLogicV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ModifyOperatorLogicV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ReplayCurrentTupleV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ConsoleMessage,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.PythonConsoleMessageV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.EvaluateExpressionV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.WorkerDebugCommandV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.QuerySelfWorkloadMetricsV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.PortCompletedV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ControlCommandV2Message
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """CkJlZHUvdWNpL2ljcy9hbWJlci9lbmdpbmUvYXJjaGl0ZWN0dXJlL3dvcmtlci9jb250cm9sY29tbWFuZHMucHJvdG8SLGVkd
  S51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyGkdlZHUvdWNpL2ljcy9hbWJlci9lbmdpbmUvYXJjaGl0Z
  WN0dXJlL3NlbmRzZW1hbnRpY3MvcGFydGl0aW9uaW5ncy5wcm90bxo1ZWR1L3VjaS9pY3MvYW1iZXIvZW5naW5lL2NvbW1vbi92a
  XJ0dWFsaWRlbnRpdHkucHJvdG8aLmVkdS91Y2kvaWNzL2FtYmVyL2VuZ2luZS9jb21tb24vd29ya2Zsb3cucHJvdG8aH2dvb2dsZ
  S9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8aFXNjYWxhcGIvc2NhbGFwYi5wcm90byIICgZOb09wVjIiDwoNU3RhcnRXb3JrZXJWM
  iIPCg1QYXVzZVdvcmtlclYyIhAKDlJlc3VtZVdvcmtlclYyIlwKGFNjaGVkdWxlclRpbWVTbG90RXZlbnRWMhJAChF0aW1lX3Nsb
  3RfZXhwaXJlZBgBIAEoCEIU4j8REg90aW1lU2xvdEV4cGlyZWRSD3RpbWVTbG90RXhwaXJlZCIQCg5PcGVuT3BlcmF0b3JWMiKHA
  QoMQXNzaWduUG9ydFYyElUKBnBvcnRJZBgBIAEoCzItLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5jb21tb24uUG9ydElkZW50a
  XR5Qg7iPwsSBnBvcnRJZPABAVIGcG9ydElkEiAKBWlucHV0GAIgASgIQgriPwcSBWlucHV0UgVpbnB1dCLNAQoRQWRkSW5wdXRDa
  GFubmVsVjISYQoJY2hhbm5lbElkGAEgASgLMjAuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmNvbW1vbi5DaGFubmVsSWRlbnRpd
  HlCEeI/DhIJY2hhbm5lbElk8AEBUgljaGFubmVsSWQSVQoGcG9ydElkGAIgASgLMi0uZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lL
  mNvbW1vbi5Qb3J0SWRlbnRpdHlCDuI/CxIGcG9ydElk8AEBUgZwb3J0SWQi3gEKEUFkZFBhcnRpdGlvbmluZ1YyEkwKA3RhZxgBI
  AEoCzItLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5jb21tb24uUGh5c2ljYWxMaW5rQgviPwgSA3RhZ/ABAVIDdGFnEnsKDHBhc
  nRpdGlvbmluZxgCIAEoCzJBLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUuc2VuZHNlbWFudGljcy5QYXJ0a
  XRpb25pbmdCFOI/ERIMcGFydGl0aW9uaW5n8AEBUgxwYXJ0aXRpb25pbmciHAoaV29ya2VyRXhlY3V0aW9uQ29tcGxldGVkVjIiE
  woRUXVlcnlTdGF0aXN0aWNzVjIiGgoYUXVlcnlDdXJyZW50SW5wdXRUdXBsZVYyIpMBCgtMaW5rT3JkaW5hbBJPCgRsaW5rGAEgA
  SgLMi0uZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmNvbW1vbi5QaHlzaWNhbExpbmtCDOI/CRIEbGlua/ABAVIEbGluaxIzCgxwb
  3J0X29yZGluYWwYAiABKANCEOI/DRILcG9ydE9yZGluYWxSC3BvcnRPcmRpbmFsIugEChlJbml0aWFsaXplT3BlcmF0b3JMb2dpY
  1YyEh0KBGNvZGUYASABKAlCCeI/BhIEY29kZVIEY29kZRIqCglpc19zb3VyY2UYAiABKAhCDeI/ChIIaXNTb3VyY2VSCGlzU291c
  mNlEocBChVpbnB1dF9vcmRpbmFsX21hcHBpbmcYAyADKAsyOS5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlL
  ndvcmtlci5MaW5rT3JkaW5hbEIY4j8VEhNpbnB1dE9yZGluYWxNYXBwaW5nUhNpbnB1dE9yZGluYWxNYXBwaW5nEooBChZvdXRwd
  XRfb3JkaW5hbF9tYXBwaW5nGAQgAygLMjkuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuTGlua
  09yZGluYWxCGeI/FhIUb3V0cHV0T3JkaW5hbE1hcHBpbmdSFG91dHB1dE9yZGluYWxNYXBwaW5nEpEBCg1vdXRwdXRfc2NoZW1hG
  AUgAygLMlkuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuSW5pdGlhbGl6ZU9wZXJhdG9yTG9na
  WNWMi5PdXRwdXRTY2hlbWFFbnRyeUIR4j8OEgxvdXRwdXRTY2hlbWFSDG91dHB1dFNjaGVtYRpVChFPdXRwdXRTY2hlbWFFbnRye
  RIaCgNrZXkYASABKAlCCOI/BRIDa2V5UgNrZXkSIAoFdmFsdWUYAiABKAlCCuI/BxIFdmFsdWVSBXZhbHVlOgI4ASJiChVNb2RpZ
  nlPcGVyYXRvckxvZ2ljVjISHQoEY29kZRgBIAEoCUIJ4j8GEgRjb2RlUgRjb2RlEioKCWlzX3NvdXJjZRgCIAEoCEIN4j8KEghpc
  1NvdXJjZVIIaXNTb3VyY2UiFgoUUmVwbGF5Q3VycmVudFR1cGxlVjIi4wIKDkNvbnNvbGVNZXNzYWdlEioKCXdvcmtlcl9pZBgBI
  AEoCUIN4j8KEgh3b3JrZXJJZFIId29ya2VySWQSSwoJdGltZXN0YW1wGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtc
  EIR4j8OEgl0aW1lc3RhbXDwAQFSCXRpbWVzdGFtcBJpCghtc2dfdHlwZRgDIAEoDjJALmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZ
  S5hcmNoaXRlY3R1cmUud29ya2VyLkNvbnNvbGVNZXNzYWdlVHlwZUIM4j8JEgdtc2dUeXBlUgdtc2dUeXBlEiMKBnNvdXJjZRgEI
  AEoCUIL4j8IEgZzb3VyY2VSBnNvdXJjZRIgCgV0aXRsZRgFIAEoCUIK4j8HEgV0aXRsZVIFdGl0bGUSJgoHbWVzc2FnZRgGIAEoC
  UIM4j8JEgdtZXNzYWdlUgdtZXNzYWdlIoEBChZQeXRob25Db25zb2xlTWVzc2FnZVYyEmcKB21lc3NhZ2UYASABKAsyPC5lZHUud
  WNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5Db25zb2xlTWVzc2FnZUIP4j8MEgdtZXNzYWdl8AEBUgdtZ
  XNzYWdlIkcKFEV2YWx1YXRlRXhwcmVzc2lvblYyEi8KCmV4cHJlc3Npb24YASABKAlCD+I/DBIKZXhwcmVzc2lvblIKZXhwcmVzc
  2lvbiIyChRXb3JrZXJEZWJ1Z0NvbW1hbmRWMhIaCgNjbWQYASABKAlCCOI/BRIDY21kUgNjbWQiHAoaUXVlcnlTZWxmV29ya2xvY
  WRNZXRyaWNzVjIiiwEKD1BvcnRDb21wbGV0ZWRWMhJWCgdwb3J0X2lkGAEgASgLMi0uZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lL
  mNvbW1vbi5Qb3J0SWRlbnRpdHlCDuI/CxIGcG9ydElk8AEBUgZwb3J0SWQSIAoFaW5wdXQYAiABKAhCCuI/BxIFaW5wdXRSBWluc
  HV0IvUVChBDb250cm9sQ29tbWFuZFYyEnIKDHN0YXJ0X3dvcmtlchgBIAEoCzI7LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hc
  mNoaXRlY3R1cmUud29ya2VyLlN0YXJ0V29ya2VyVjJCEOI/DRILc3RhcnRXb3JrZXJIAFILc3RhcnRXb3JrZXIScgoMcGF1c2Vfd
  29ya2VyGAIgASgLMjsuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuUGF1c2VXb3JrZXJWMkIQ4
  j8NEgtwYXVzZVdvcmtlckgAUgtwYXVzZVdvcmtlchJ2Cg1yZXN1bWVfd29ya2VyGAMgASgLMjwuZWR1LnVjaS5pY3MuYW1iZXIuZ
  W5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuUmVzdW1lV29ya2VyVjJCEeI/DhIMcmVzdW1lV29ya2VySABSDHJlc3VtZVdvcmtlc
  hJuCgthc3NpZ25fcG9ydBgEIAEoCzI6LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLkFzc2lnb
  lBvcnRWMkIP4j8MEgphc3NpZ25Qb3J0SABSCmFzc2lnblBvcnQSggEKEGFkZF9wYXJ0aXRpb25pbmcYBSABKAsyPy5lZHUudWNpL
  mljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5BZGRQYXJ0aXRpb25pbmdWMkIU4j8REg9hZGRQYXJ0aXRpb25pb
  mdIAFIPYWRkUGFydGl0aW9uaW5nEoMBChFhZGRfaW5wdXRfY2hhbm5lbBgGIAEoCzI/LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZ
  S5hcmNoaXRlY3R1cmUud29ya2VyLkFkZElucHV0Q2hhbm5lbFYyQhTiPxESD2FkZElucHV0Q2hhbm5lbEgAUg9hZGRJbnB1dENoY
  W5uZWwSggEKEHF1ZXJ5X3N0YXRpc3RpY3MYByABKAsyPy5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvc
  mtlci5RdWVyeVN0YXRpc3RpY3NWMkIU4j8REg9xdWVyeVN0YXRpc3RpY3NIAFIPcXVlcnlTdGF0aXN0aWNzEqABChlxdWVyeV9jd
  XJyZW50X2lucHV0X3R1cGxlGAggASgLMkYuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuUXVlc
  nlDdXJyZW50SW5wdXRUdXBsZVYyQhviPxgSFnF1ZXJ5Q3VycmVudElucHV0VHVwbGVIAFIWcXVlcnlDdXJyZW50SW5wdXRUdXBsZ
  RJ2Cg1vcGVuX29wZXJhdG9yGAkgASgLMjwuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuT3Blb
  k9wZXJhdG9yVjJCEeI/DhIMb3Blbk9wZXJhdG9ySABSDG9wZW5PcGVyYXRvchJ6Cg5wb3J0X2NvbXBsZXRlZBgKIAEoCzI9LmVkd
  S51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLlBvcnRDb21wbGV0ZWRWMkIS4j8PEg1wb3J0Q29tcGxld
  GVkSABSDXBvcnRDb21wbGV0ZWQSoAEKGXNjaGVkdWxlcl90aW1lX3Nsb3RfZXZlbnQYCyABKAsyRi5lZHUudWNpLmljcy5hbWJlc
  i5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5TY2hlZHVsZXJUaW1lU2xvdEV2ZW50VjJCG+I/GBIWc2NoZWR1bGVyVGltZVNsb
  3RFdmVudEgAUhZzY2hlZHVsZXJUaW1lU2xvdEV2ZW50EqMBChlpbml0aWFsaXplX29wZXJhdG9yX2xvZ2ljGBUgASgLMkcuZWR1L
  nVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuSW5pdGlhbGl6ZU9wZXJhdG9yTG9naWNWMkIc4j8ZEhdpb
  ml0aWFsaXplT3BlcmF0b3JMb2dpY0gAUhdpbml0aWFsaXplT3BlcmF0b3JMb2dpYxKTAQoVbW9kaWZ5X29wZXJhdG9yX2xvZ2ljG
  BYgASgLMkMuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuTW9kaWZ5T3BlcmF0b3JMb2dpY1YyQ
  hjiPxUSE21vZGlmeU9wZXJhdG9yTG9naWNIAFITbW9kaWZ5T3BlcmF0b3JMb2dpYxKXAQoWcHl0aG9uX2NvbnNvbGVfbWVzc2FnZ
  RgXIAEoCzJELmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLlB5dGhvbkNvbnNvbGVNZXNzYWdlV
  jJCGeI/FhIUcHl0aG9uQ29uc29sZU1lc3NhZ2VIAFIUcHl0aG9uQ29uc29sZU1lc3NhZ2USjwEKFHJlcGxheV9jdXJyZW50X3R1c
  GxlGBggASgLMkIuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuUmVwbGF5Q3VycmVudFR1cGxlV
  jJCF+I/FBIScmVwbGF5Q3VycmVudFR1cGxlSABSEnJlcGxheUN1cnJlbnRUdXBsZRKOAQoTZXZhbHVhdGVfZXhwcmVzc2lvbhgZI
  AEoCzJCLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLkV2YWx1YXRlRXhwcmVzc2lvblYyQhfiP
  xQSEmV2YWx1YXRlRXhwcmVzc2lvbkgAUhJldmFsdWF0ZUV4cHJlc3Npb24SqAEKG3F1ZXJ5X3NlbGZfd29ya2xvYWRfbWV0cmljc
  xgpIAEoCzJILmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLlF1ZXJ5U2VsZldvcmtsb2FkTWV0c
  mljc1YyQh3iPxoSGHF1ZXJ5U2VsZldvcmtsb2FkTWV0cmljc0gAUhhxdWVyeVNlbGZXb3JrbG9hZE1ldHJpY3MSjwEKFHdvcmtlc
  l9kZWJ1Z19jb21tYW5kGFEgASgLMkIuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuV29ya2VyR
  GVidWdDb21tYW5kVjJCF+I/FBISd29ya2VyRGVidWdDb21tYW5kSABSEndvcmtlckRlYnVnQ29tbWFuZBKnAQoad29ya2VyX2V4Z
  WN1dGlvbl9jb21wbGV0ZWQYZSABKAsySC5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5Xb3JrZ
  XJFeGVjdXRpb25Db21wbGV0ZWRWMkId4j8aEhh3b3JrZXJFeGVjdXRpb25Db21wbGV0ZWRIAFIYd29ya2VyRXhlY3V0aW9uQ29tc
  GxldGVkElcKBW5vX29wGI9OIAEoCzI0LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLk5vT3BWM
  kIJ4j8GEgRub09wSABSBG5vT3BCDgoMc2VhbGVkX3ZhbHVlKkUKEkNvbnNvbGVNZXNzYWdlVHlwZRIJCgVQUklOVBAAEgkKBUVSU
  k9SEAESCwoHQ09NTUFORBACEgwKCERFQlVHR0VSEANCCeI/BkgAWAB4AWIGcHJvdG8z"""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      edu.uci.ics.amber.engine.architecture.sendsemantics.partitionings.PartitioningsProto.javaDescriptor,
      edu.uci.ics.amber.engine.common.virtualidentity.VirtualidentityProto.javaDescriptor,
      edu.uci.ics.amber.engine.common.workflow.WorkflowProto.javaDescriptor,
      com.google.protobuf.timestamp.TimestampProto.javaDescriptor,
      scalapb.options.ScalapbProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}