// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package edu.uci.ics.amber.engine.architecture.worker.controlcommands

object ControlcommandsProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    edu.uci.ics.amber.engine.architecture.sendsemantics.partitionings.PartitioningsProto,
    edu.uci.ics.amber.engine.common.virtualidentity.VirtualidentityProto,
    edu.uci.ics.amber.engine.common.workflow.WorkflowProto,
    com.google.protobuf.timestamp.TimestampProto,
    scalapb.options.ScalapbProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.NoOpV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.StartWorkerV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.PauseWorkerV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ResumeWorkerV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.SchedulerTimeSlotEventV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.OpenOperatorV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.UpdateInputLinkingV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.AddPartitioningV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.WorkerExecutionCompletedV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.QueryStatisticsV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.QueryCurrentInputTupleV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.LinkOrdinal,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.InitializeOperatorLogicV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ModifyOperatorLogicV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ReplayCurrentTupleV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ConsoleMessage,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.PythonConsoleMessageV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.EvaluateExpressionV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.WorkerDebugCommandV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.QuerySelfWorkloadMetricsV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.LinkCompletedV2,
      edu.uci.ics.amber.engine.architecture.worker.controlcommands.ControlCommandV2Message
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """CkJlZHUvdWNpL2ljcy9hbWJlci9lbmdpbmUvYXJjaGl0ZWN0dXJlL3dvcmtlci9jb250cm9sY29tbWFuZHMucHJvdG8SLGVkd
  S51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyGkdlZHUvdWNpL2ljcy9hbWJlci9lbmdpbmUvYXJjaGl0Z
  WN0dXJlL3NlbmRzZW1hbnRpY3MvcGFydGl0aW9uaW5ncy5wcm90bxo1ZWR1L3VjaS9pY3MvYW1iZXIvZW5naW5lL2NvbW1vbi92a
  XJ0dWFsaWRlbnRpdHkucHJvdG8aLmVkdS91Y2kvaWNzL2FtYmVyL2VuZ2luZS9jb21tb24vd29ya2Zsb3cucHJvdG8aH2dvb2dsZ
  S9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8aFXNjYWxhcGIvc2NhbGFwYi5wcm90byIICgZOb09wVjIiDwoNU3RhcnRXb3JrZXJWM
  iIPCg1QYXVzZVdvcmtlclYyIhAKDlJlc3VtZVdvcmtlclYyIlwKGFNjaGVkdWxlclRpbWVTbG90RXZlbnRWMhJAChF0aW1lX3Nsb
  3RfZXhwaXJlZBgBIAEoCEIU4j8REg90aW1lU2xvdEV4cGlyZWRSD3RpbWVTbG90RXhwaXJlZCIQCg5PcGVuT3BlcmF0b3JWMiLiA
  QoUVXBkYXRlSW5wdXRMaW5raW5nVjISaQoKaWRlbnRpZmllchgBIAEoCzI1LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5jb21tb
  24uQWN0b3JWaXJ0dWFsSWRlbnRpdHlCEuI/DxIKaWRlbnRpZmllcvABAVIKaWRlbnRpZmllchJfCgppbnB1dF9saW5rGAIgASgLM
  i0uZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmNvbW1vbi5QaHlzaWNhbExpbmtCEeI/DhIJaW5wdXRMaW5r8AEBUglpbnB1dExpb
  msi3gEKEUFkZFBhcnRpdGlvbmluZ1YyEkwKA3RhZxgBIAEoCzItLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5jb21tb24uUGh5c
  2ljYWxMaW5rQgviPwgSA3RhZ/ABAVIDdGFnEnsKDHBhcnRpdGlvbmluZxgCIAEoCzJBLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZ
  S5hcmNoaXRlY3R1cmUuc2VuZHNlbWFudGljcy5QYXJ0aXRpb25pbmdCFOI/ERIMcGFydGl0aW9uaW5n8AEBUgxwYXJ0aXRpb25pb
  mciHAoaV29ya2VyRXhlY3V0aW9uQ29tcGxldGVkVjIiEwoRUXVlcnlTdGF0aXN0aWNzVjIiGgoYUXVlcnlDdXJyZW50SW5wdXRUd
  XBsZVYyIpoBCgtMaW5rT3JkaW5hbBJWCgdsaW5rX2lkGAEgASgLMi0uZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmNvbW1vbi5Qa
  HlzaWNhbExpbmtCDuI/CxIGbGlua0lk8AEBUgZsaW5rSWQSMwoMcG9ydF9vcmRpbmFsGAIgASgDQhDiPw0SC3BvcnRPcmRpbmFsU
  gtwb3J0T3JkaW5hbCLoBAoZSW5pdGlhbGl6ZU9wZXJhdG9yTG9naWNWMhIdCgRjb2RlGAEgASgJQgniPwYSBGNvZGVSBGNvZGUSK
  goJaXNfc291cmNlGAIgASgIQg3iPwoSCGlzU291cmNlUghpc1NvdXJjZRKHAQoVaW5wdXRfb3JkaW5hbF9tYXBwaW5nGAMgAygLM
  jkuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuTGlua09yZGluYWxCGOI/FRITaW5wdXRPcmRpb
  mFsTWFwcGluZ1ITaW5wdXRPcmRpbmFsTWFwcGluZxKKAQoWb3V0cHV0X29yZGluYWxfbWFwcGluZxgEIAMoCzI5LmVkdS51Y2kua
  WNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLkxpbmtPcmRpbmFsQhniPxYSFG91dHB1dE9yZGluYWxNYXBwaW5nU
  hRvdXRwdXRPcmRpbmFsTWFwcGluZxKRAQoNb3V0cHV0X3NjaGVtYRgFIAMoCzJZLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hc
  mNoaXRlY3R1cmUud29ya2VyLkluaXRpYWxpemVPcGVyYXRvckxvZ2ljVjIuT3V0cHV0U2NoZW1hRW50cnlCEeI/DhIMb3V0cHV0U
  2NoZW1hUgxvdXRwdXRTY2hlbWEaVQoRT3V0cHV0U2NoZW1hRW50cnkSGgoDa2V5GAEgASgJQgjiPwUSA2tleVIDa2V5EiAKBXZhb
  HVlGAIgASgJQgriPwcSBXZhbHVlUgV2YWx1ZToCOAEiYgoVTW9kaWZ5T3BlcmF0b3JMb2dpY1YyEh0KBGNvZGUYASABKAlCCeI/B
  hIEY29kZVIEY29kZRIqCglpc19zb3VyY2UYAiABKAhCDeI/ChIIaXNTb3VyY2VSCGlzU291cmNlIhYKFFJlcGxheUN1cnJlbnRUd
  XBsZVYyIuMCCg5Db25zb2xlTWVzc2FnZRIqCgl3b3JrZXJfaWQYASABKAlCDeI/ChIId29ya2VySWRSCHdvcmtlcklkEksKCXRpb
  WVzdGFtcBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCEeI/DhIJdGltZXN0YW1w8AEBUgl0aW1lc3RhbXASaQoIb
  XNnX3R5cGUYAyABKA4yQC5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5Db25zb2xlTWVzc2FnZ
  VR5cGVCDOI/CRIHbXNnVHlwZVIHbXNnVHlwZRIjCgZzb3VyY2UYBCABKAlCC+I/CBIGc291cmNlUgZzb3VyY2USIAoFdGl0bGUYB
  SABKAlCCuI/BxIFdGl0bGVSBXRpdGxlEiYKB21lc3NhZ2UYBiABKAlCDOI/CRIHbWVzc2FnZVIHbWVzc2FnZSKBAQoWUHl0aG9uQ
  29uc29sZU1lc3NhZ2VWMhJnCgdtZXNzYWdlGAEgASgLMjwuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b
  3JrZXIuQ29uc29sZU1lc3NhZ2VCD+I/DBIHbWVzc2FnZfABAVIHbWVzc2FnZSJHChRFdmFsdWF0ZUV4cHJlc3Npb25WMhIvCgple
  HByZXNzaW9uGAEgASgJQg/iPwwSCmV4cHJlc3Npb25SCmV4cHJlc3Npb24iMgoUV29ya2VyRGVidWdDb21tYW5kVjISGgoDY21kG
  AEgASgJQgjiPwUSA2NtZFIDY21kIhwKGlF1ZXJ5U2VsZldvcmtsb2FkTWV0cmljc1YyImkKD0xpbmtDb21wbGV0ZWRWMhJWCgdsa
  W5rX2lkGAEgASgLMi0uZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmNvbW1vbi5QaHlzaWNhbExpbmtCDuI/CxIGbGlua0lk8AEBU
  gZsaW5rSWQikRUKEENvbnRyb2xDb21tYW5kVjIScgoMc3RhcnRfd29ya2VyGAEgASgLMjsuZWR1LnVjaS5pY3MuYW1iZXIuZW5na
  W5lLmFyY2hpdGVjdHVyZS53b3JrZXIuU3RhcnRXb3JrZXJWMkIQ4j8NEgtzdGFydFdvcmtlckgAUgtzdGFydFdvcmtlchJyCgxwY
  XVzZV93b3JrZXIYAiABKAsyOy5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5QYXVzZVdvcmtlc
  lYyQhDiPw0SC3BhdXNlV29ya2VySABSC3BhdXNlV29ya2VyEnYKDXJlc3VtZV93b3JrZXIYAyABKAsyPC5lZHUudWNpLmljcy5hb
  WJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5SZXN1bWVXb3JrZXJWMkIR4j8OEgxyZXN1bWVXb3JrZXJIAFIMcmVzdW1lV
  29ya2VyEoIBChBhZGRfcGFydGl0aW9uaW5nGAQgASgLMj8uZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b
  3JrZXIuQWRkUGFydGl0aW9uaW5nVjJCFOI/ERIPYWRkUGFydGl0aW9uaW5nSABSD2FkZFBhcnRpdGlvbmluZxKPAQoUdXBkYXRlX
  2lucHV0X2xpbmtpbmcYBSABKAsyQi5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5VcGRhdGVJb
  nB1dExpbmtpbmdWMkIX4j8UEhJ1cGRhdGVJbnB1dExpbmtpbmdIAFISdXBkYXRlSW5wdXRMaW5raW5nEoIBChBxdWVyeV9zdGF0a
  XN0aWNzGAYgASgLMj8uZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuUXVlcnlTdGF0aXN0aWNzV
  jJCFOI/ERIPcXVlcnlTdGF0aXN0aWNzSABSD3F1ZXJ5U3RhdGlzdGljcxKgAQoZcXVlcnlfY3VycmVudF9pbnB1dF90dXBsZRgHI
  AEoCzJGLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLlF1ZXJ5Q3VycmVudElucHV0VHVwbGVWM
  kIb4j8YEhZxdWVyeUN1cnJlbnRJbnB1dFR1cGxlSABSFnF1ZXJ5Q3VycmVudElucHV0VHVwbGUSdgoNb3Blbl9vcGVyYXRvchgJI
  AEoCzI8LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLk9wZW5PcGVyYXRvclYyQhHiPw4SDG9wZ
  W5PcGVyYXRvckgAUgxvcGVuT3BlcmF0b3ISegoObGlua19jb21wbGV0ZWQYCiABKAsyPS5lZHUudWNpLmljcy5hbWJlci5lbmdpb
  mUuYXJjaGl0ZWN0dXJlLndvcmtlci5MaW5rQ29tcGxldGVkVjJCEuI/DxINbGlua0NvbXBsZXRlZEgAUg1saW5rQ29tcGxldGVkE
  qABChlzY2hlZHVsZXJfdGltZV9zbG90X2V2ZW50GAsgASgLMkYuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZ
  S53b3JrZXIuU2NoZWR1bGVyVGltZVNsb3RFdmVudFYyQhviPxgSFnNjaGVkdWxlclRpbWVTbG90RXZlbnRIAFIWc2NoZWR1bGVyV
  GltZVNsb3RFdmVudBKjAQoZaW5pdGlhbGl6ZV9vcGVyYXRvcl9sb2dpYxgVIAEoCzJHLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZ
  S5hcmNoaXRlY3R1cmUud29ya2VyLkluaXRpYWxpemVPcGVyYXRvckxvZ2ljVjJCHOI/GRIXaW5pdGlhbGl6ZU9wZXJhdG9yTG9na
  WNIAFIXaW5pdGlhbGl6ZU9wZXJhdG9yTG9naWMSkwEKFW1vZGlmeV9vcGVyYXRvcl9sb2dpYxgWIAEoCzJDLmVkdS51Y2kuaWNzL
  mFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLk1vZGlmeU9wZXJhdG9yTG9naWNWMkIY4j8VEhNtb2RpZnlPcGVyYXRvc
  kxvZ2ljSABSE21vZGlmeU9wZXJhdG9yTG9naWMSlwEKFnB5dGhvbl9jb25zb2xlX21lc3NhZ2UYFyABKAsyRC5lZHUudWNpLmljc
  y5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5QeXRob25Db25zb2xlTWVzc2FnZVYyQhniPxYSFHB5dGhvbkNvbnNvb
  GVNZXNzYWdlSABSFHB5dGhvbkNvbnNvbGVNZXNzYWdlEo8BChRyZXBsYXlfY3VycmVudF90dXBsZRgYIAEoCzJCLmVkdS51Y2kua
  WNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLlJlcGxheUN1cnJlbnRUdXBsZVYyQhfiPxQSEnJlcGxheUN1cnJlb
  nRUdXBsZUgAUhJyZXBsYXlDdXJyZW50VHVwbGUSjgEKE2V2YWx1YXRlX2V4cHJlc3Npb24YGSABKAsyQi5lZHUudWNpLmljcy5hb
  WJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5FdmFsdWF0ZUV4cHJlc3Npb25WMkIX4j8UEhJldmFsdWF0ZUV4cHJlc3Npb
  25IAFISZXZhbHVhdGVFeHByZXNzaW9uEqgBChtxdWVyeV9zZWxmX3dvcmtsb2FkX21ldHJpY3MYKSABKAsySC5lZHUudWNpLmljc
  y5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5RdWVyeVNlbGZXb3JrbG9hZE1ldHJpY3NWMkId4j8aEhhxdWVyeVNlb
  GZXb3JrbG9hZE1ldHJpY3NIAFIYcXVlcnlTZWxmV29ya2xvYWRNZXRyaWNzEo8BChR3b3JrZXJfZGVidWdfY29tbWFuZBhRIAEoC
  zJCLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLldvcmtlckRlYnVnQ29tbWFuZFYyQhfiPxQSE
  ndvcmtlckRlYnVnQ29tbWFuZEgAUhJ3b3JrZXJEZWJ1Z0NvbW1hbmQSpwEKGndvcmtlcl9leGVjdXRpb25fY29tcGxldGVkGGUgA
  SgLMkguZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuV29ya2VyRXhlY3V0aW9uQ29tcGxldGVkV
  jJCHeI/GhIYd29ya2VyRXhlY3V0aW9uQ29tcGxldGVkSABSGHdvcmtlckV4ZWN1dGlvbkNvbXBsZXRlZBJXCgVub19vcBiPTiABK
  AsyNC5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5Ob09wVjJCCeI/BhIEbm9PcEgAUgRub09wQ
  g4KDHNlYWxlZF92YWx1ZSpFChJDb25zb2xlTWVzc2FnZVR5cGUSCQoFUFJJTlQQABIJCgVFUlJPUhABEgsKB0NPTU1BTkQQAhIMC
  ghERUJVR0dFUhADQgniPwZIAFgAeAFiBnByb3RvMw=="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      edu.uci.ics.amber.engine.architecture.sendsemantics.partitionings.PartitioningsProto.javaDescriptor,
      edu.uci.ics.amber.engine.common.virtualidentity.VirtualidentityProto.javaDescriptor,
      edu.uci.ics.amber.engine.common.workflow.WorkflowProto.javaDescriptor,
      com.google.protobuf.timestamp.TimestampProto.javaDescriptor,
      scalapb.options.ScalapbProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}