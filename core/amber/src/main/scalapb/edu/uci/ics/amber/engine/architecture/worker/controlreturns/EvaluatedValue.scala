// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package edu.uci.ics.amber.engine.architecture.worker.controlreturns

@SerialVersionUID(0L)
final case class EvaluatedValue(
    value: _root_.scala.Predef.String,
    expressionType: _root_.scala.Predef.String,
    attributes: _root_.scala.Seq[_root_.scala.Predef.String]
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[EvaluatedValue] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = value
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = expressionType
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      attributes.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
      }
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = value
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = expressionType
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      attributes.foreach { __v =>
        val __m = __v
        _output__.writeString(3, __m)
      };
    }
    def withValue(__v: _root_.scala.Predef.String): EvaluatedValue = copy(value = __v)
    def withExpressionType(__v: _root_.scala.Predef.String): EvaluatedValue = copy(expressionType = __v)
    def clearAttributes = copy(attributes = _root_.scala.Seq.empty)
    def addAttributes(__vs: _root_.scala.Predef.String*): EvaluatedValue = addAllAttributes(__vs)
    def addAllAttributes(__vs: Iterable[_root_.scala.Predef.String]): EvaluatedValue = copy(attributes = attributes ++ __vs)
    def withAttributes(__v: _root_.scala.Seq[_root_.scala.Predef.String]): EvaluatedValue = copy(attributes = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = value
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = expressionType
          if (__t != "") __t else null
        }
        case 3 => attributes
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(value)
        case 2 => _root_.scalapb.descriptors.PString(expressionType)
        case 3 => _root_.scalapb.descriptors.PRepeated(attributes.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion = edu.uci.ics.amber.engine.architecture.worker.controlreturns.EvaluatedValue
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.worker.EvaluatedValue])
}

object EvaluatedValue extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.worker.controlreturns.EvaluatedValue] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.worker.controlreturns.EvaluatedValue] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.worker.controlreturns.EvaluatedValue = {
    var __value: _root_.scala.Predef.String = ""
    var __expressionType: _root_.scala.Predef.String = ""
    val __attributes: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __value = _input__.readStringRequireUtf8()
        case 18 =>
          __expressionType = _input__.readStringRequireUtf8()
        case 26 =>
          __attributes += _input__.readStringRequireUtf8()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.worker.controlreturns.EvaluatedValue(
        value = __value,
        expressionType = __expressionType,
        attributes = __attributes.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.worker.controlreturns.EvaluatedValue] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.worker.controlreturns.EvaluatedValue(
        value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        expressionType = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        attributes = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlreturnsProto.javaDescriptor.getMessageTypes().get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlreturnsProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.worker.controlreturns.EvaluatedValue(
    value = "",
    expressionType = "",
    attributes = _root_.scala.Seq.empty
  )
  implicit class EvaluatedValueLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.worker.controlreturns.EvaluatedValue]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.worker.controlreturns.EvaluatedValue](_l) {
    def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.value)((c_, f_) => c_.copy(value = f_))
    def expressionType: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.expressionType)((c_, f_) => c_.copy(expressionType = f_))
    def attributes: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.attributes)((c_, f_) => c_.copy(attributes = f_))
  }
  final val VALUE_FIELD_NUMBER = 1
  final val EXPRESSION_TYPE_FIELD_NUMBER = 2
  final val ATTRIBUTES_FIELD_NUMBER = 3
  def of(
    value: _root_.scala.Predef.String,
    expressionType: _root_.scala.Predef.String,
    attributes: _root_.scala.Seq[_root_.scala.Predef.String]
  ): _root_.edu.uci.ics.amber.engine.architecture.worker.controlreturns.EvaluatedValue = _root_.edu.uci.ics.amber.engine.architecture.worker.controlreturns.EvaluatedValue(
    value,
    expressionType,
    attributes
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.worker.EvaluatedValue])
}
