/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.web.model.jooq.generated.tables;


import edu.uci.ics.texera.web.model.jooq.generated.Indexes;
import edu.uci.ics.texera.web.model.jooq.generated.Keys;
import edu.uci.ics.texera.web.model.jooq.generated.TexeraDb;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.CommentboxRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Commentbox extends TableImpl<CommentboxRecord> {

    private static final long serialVersionUID = 1015020582;

    /**
     * The reference instance of <code>texera_db.commentbox</code>
     */
    public static final Commentbox COMMENTBOX = new Commentbox();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CommentboxRecord> getRecordType() {
        return CommentboxRecord.class;
    }

    /**
     * The column <code>texera_db.commentbox.cid</code>.
     */
    public final TableField<CommentboxRecord, UInteger> CID = createField(DSL.name("cid"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>texera_db.commentbox.wid</code>.
     */
    public final TableField<CommentboxRecord, UInteger> WID = createField(DSL.name("wid"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>texera_db.commentbox.content</code>.
     */
    public final TableField<CommentboxRecord, String> CONTENT = createField(DSL.name("content"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>texera_db.commentbox</code> table reference
     */
    public Commentbox() {
        this(DSL.name("commentbox"), null);
    }

    /**
     * Create an aliased <code>texera_db.commentbox</code> table reference
     */
    public Commentbox(String alias) {
        this(DSL.name(alias), COMMENTBOX);
    }

    /**
     * Create an aliased <code>texera_db.commentbox</code> table reference
     */
    public Commentbox(Name alias) {
        this(alias, COMMENTBOX);
    }

    private Commentbox(Name alias, Table<CommentboxRecord> aliased) {
        this(alias, aliased, null);
    }

    private Commentbox(Name alias, Table<CommentboxRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Commentbox(Table<O> child, ForeignKey<O, CommentboxRecord> key) {
        super(child, key, COMMENTBOX);
    }

    @Override
    public Schema getSchema() {
        return TexeraDb.TEXERA_DB;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COMMENTBOX_PRIMARY, Indexes.COMMENTBOX_WID);
    }

    @Override
    public Identity<CommentboxRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_COMMENTBOX;
    }

    @Override
    public UniqueKey<CommentboxRecord> getPrimaryKey() {
        return Keys.KEY_COMMENTBOX_PRIMARY;
    }

    @Override
    public List<UniqueKey<CommentboxRecord>> getKeys() {
        return Arrays.<UniqueKey<CommentboxRecord>>asList(Keys.KEY_COMMENTBOX_PRIMARY);
    }

    @Override
    public List<ForeignKey<CommentboxRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CommentboxRecord, ?>>asList(Keys.COMMENTBOX_IBFK_1);
    }

    public Workflow workflow() {
        return new Workflow(this, Keys.COMMENTBOX_IBFK_1);
    }

    @Override
    public Commentbox as(String alias) {
        return new Commentbox(DSL.name(alias), this);
    }

    @Override
    public Commentbox as(Name alias) {
        return new Commentbox(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Commentbox rename(String name) {
        return new Commentbox(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Commentbox rename(Name name) {
        return new Commentbox(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<UInteger, UInteger, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
