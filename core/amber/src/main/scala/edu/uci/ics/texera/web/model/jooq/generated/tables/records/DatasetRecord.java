/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.web.model.jooq.generated.tables.records;


import edu.uci.ics.texera.web.model.jooq.generated.tables.Dataset;
import edu.uci.ics.texera.web.model.jooq.generated.tables.interfaces.IDataset;

import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DatasetRecord extends UpdatableRecordImpl<DatasetRecord> implements Record7<UInteger, UInteger, String, Byte, String, String, Timestamp>, IDataset {

    private static final long serialVersionUID = -1105041155;

    /**
     * Setter for <code>texera_db.dataset.did</code>.
     */
    @Override
    public void setDid(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>texera_db.dataset.did</code>.
     */
    @Override
    public UInteger getDid() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>texera_db.dataset.owner_uid</code>.
     */
    @Override
    public void setOwnerUid(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>texera_db.dataset.owner_uid</code>.
     */
    @Override
    public UInteger getOwnerUid() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>texera_db.dataset.name</code>.
     */
    @Override
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>texera_db.dataset.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>texera_db.dataset.is_public</code>.
     */
    @Override
    public void setIsPublic(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>texera_db.dataset.is_public</code>.
     */
    @Override
    public Byte getIsPublic() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>texera_db.dataset.storage_path</code>.
     */
    @Override
    public void setStoragePath(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>texera_db.dataset.storage_path</code>.
     */
    @Override
    public String getStoragePath() {
        return (String) get(4);
    }

    /**
     * Setter for <code>texera_db.dataset.description</code>.
     */
    @Override
    public void setDescription(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>texera_db.dataset.description</code>.
     */
    @Override
    public String getDescription() {
        return (String) get(5);
    }

    /**
     * Setter for <code>texera_db.dataset.creation_time</code>.
     */
    @Override
    public void setCreationTime(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>texera_db.dataset.creation_time</code>.
     */
    @Override
    public Timestamp getCreationTime() {
        return (Timestamp) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UInteger, UInteger, String, Byte, String, String, Timestamp> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UInteger, UInteger, String, Byte, String, String, Timestamp> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return Dataset.DATASET.DID;
    }

    @Override
    public Field<UInteger> field2() {
        return Dataset.DATASET.OWNER_UID;
    }

    @Override
    public Field<String> field3() {
        return Dataset.DATASET.NAME;
    }

    @Override
    public Field<Byte> field4() {
        return Dataset.DATASET.IS_PUBLIC;
    }

    @Override
    public Field<String> field5() {
        return Dataset.DATASET.STORAGE_PATH;
    }

    @Override
    public Field<String> field6() {
        return Dataset.DATASET.DESCRIPTION;
    }

    @Override
    public Field<Timestamp> field7() {
        return Dataset.DATASET.CREATION_TIME;
    }

    @Override
    public UInteger component1() {
        return getDid();
    }

    @Override
    public UInteger component2() {
        return getOwnerUid();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Byte component4() {
        return getIsPublic();
    }

    @Override
    public String component5() {
        return getStoragePath();
    }

    @Override
    public String component6() {
        return getDescription();
    }

    @Override
    public Timestamp component7() {
        return getCreationTime();
    }

    @Override
    public UInteger value1() {
        return getDid();
    }

    @Override
    public UInteger value2() {
        return getOwnerUid();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public Byte value4() {
        return getIsPublic();
    }

    @Override
    public String value5() {
        return getStoragePath();
    }

    @Override
    public String value6() {
        return getDescription();
    }

    @Override
    public Timestamp value7() {
        return getCreationTime();
    }

    @Override
    public DatasetRecord value1(UInteger value) {
        setDid(value);
        return this;
    }

    @Override
    public DatasetRecord value2(UInteger value) {
        setOwnerUid(value);
        return this;
    }

    @Override
    public DatasetRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public DatasetRecord value4(Byte value) {
        setIsPublic(value);
        return this;
    }

    @Override
    public DatasetRecord value5(String value) {
        setStoragePath(value);
        return this;
    }

    @Override
    public DatasetRecord value6(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public DatasetRecord value7(Timestamp value) {
        setCreationTime(value);
        return this;
    }

    @Override
    public DatasetRecord values(UInteger value1, UInteger value2, String value3, Byte value4, String value5, String value6, Timestamp value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDataset from) {
        setDid(from.getDid());
        setOwnerUid(from.getOwnerUid());
        setName(from.getName());
        setIsPublic(from.getIsPublic());
        setStoragePath(from.getStoragePath());
        setDescription(from.getDescription());
        setCreationTime(from.getCreationTime());
    }

    @Override
    public <E extends IDataset> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DatasetRecord
     */
    public DatasetRecord() {
        super(Dataset.DATASET);
    }

    /**
     * Create a detached, initialised DatasetRecord
     */
    public DatasetRecord(UInteger did, UInteger ownerUid, String name, Byte isPublic, String storagePath, String description, Timestamp creationTime) {
        super(Dataset.DATASET);

        set(0, did);
        set(1, ownerUid);
        set(2, name);
        set(3, isPublic);
        set(4, storagePath);
        set(5, description);
        set(6, creationTime);
    }
}
