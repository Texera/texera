/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.web.model.jooq.generated;


import edu.uci.ics.texera.web.model.jooq.generated.tables.File;
import edu.uci.ics.texera.web.model.jooq.generated.tables.FileOfProject;
import edu.uci.ics.texera.web.model.jooq.generated.tables.FileOfWorkflow;
import edu.uci.ics.texera.web.model.jooq.generated.tables.Project;
import edu.uci.ics.texera.web.model.jooq.generated.tables.ProjectUserAccess;
import edu.uci.ics.texera.web.model.jooq.generated.tables.PublicProject;
import edu.uci.ics.texera.web.model.jooq.generated.tables.User;
import edu.uci.ics.texera.web.model.jooq.generated.tables.UserConfig;
import edu.uci.ics.texera.web.model.jooq.generated.tables.UserFileAccess;
import edu.uci.ics.texera.web.model.jooq.generated.tables.Workflow;
import edu.uci.ics.texera.web.model.jooq.generated.tables.WorkflowExecutions;
import edu.uci.ics.texera.web.model.jooq.generated.tables.WorkflowOfProject;
import edu.uci.ics.texera.web.model.jooq.generated.tables.WorkflowOfUser;
import edu.uci.ics.texera.web.model.jooq.generated.tables.WorkflowRuntimeStatistics;
import edu.uci.ics.texera.web.model.jooq.generated.tables.WorkflowUserAccess;
import edu.uci.ics.texera.web.model.jooq.generated.tables.WorkflowVersion;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.FileOfProjectRecord;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.FileOfWorkflowRecord;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.FileRecord;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.ProjectRecord;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.ProjectUserAccessRecord;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.PublicProjectRecord;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.UserConfigRecord;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.UserFileAccessRecord;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.UserRecord;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.WorkflowExecutionsRecord;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.WorkflowOfProjectRecord;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.WorkflowOfUserRecord;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.WorkflowRecord;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.WorkflowRuntimeStatisticsRecord;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.WorkflowUserAccessRecord;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.WorkflowVersionRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * texera_db.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FileRecord> KEY_FILE_OWNER_UID = Internal.createUniqueKey(File.FILE, DSL.name("KEY_file_owner_uid"), new TableField[] { File.FILE.OWNER_UID, File.FILE.NAME }, true);
    public static final UniqueKey<FileRecord> KEY_FILE_PRIMARY = Internal.createUniqueKey(File.FILE, DSL.name("KEY_file_PRIMARY"), new TableField[] { File.FILE.FID }, true);
    public static final UniqueKey<FileOfProjectRecord> KEY_FILE_OF_PROJECT_PRIMARY = Internal.createUniqueKey(FileOfProject.FILE_OF_PROJECT, DSL.name("KEY_file_of_project_PRIMARY"), new TableField[] { FileOfProject.FILE_OF_PROJECT.FID, FileOfProject.FILE_OF_PROJECT.PID }, true);
    public static final UniqueKey<FileOfWorkflowRecord> KEY_FILE_OF_WORKFLOW_PRIMARY = Internal.createUniqueKey(FileOfWorkflow.FILE_OF_WORKFLOW, DSL.name("KEY_file_of_workflow_PRIMARY"), new TableField[] { FileOfWorkflow.FILE_OF_WORKFLOW.FID, FileOfWorkflow.FILE_OF_WORKFLOW.WID }, true);
    public static final UniqueKey<ProjectRecord> KEY_PROJECT_OWNER_ID = Internal.createUniqueKey(Project.PROJECT, DSL.name("KEY_project_owner_id"), new TableField[] { Project.PROJECT.OWNER_ID, Project.PROJECT.NAME }, true);
    public static final UniqueKey<ProjectRecord> KEY_PROJECT_PRIMARY = Internal.createUniqueKey(Project.PROJECT, DSL.name("KEY_project_PRIMARY"), new TableField[] { Project.PROJECT.PID }, true);
    public static final UniqueKey<ProjectUserAccessRecord> KEY_PROJECT_USER_ACCESS_PRIMARY = Internal.createUniqueKey(ProjectUserAccess.PROJECT_USER_ACCESS, DSL.name("KEY_project_user_access_PRIMARY"), new TableField[] { ProjectUserAccess.PROJECT_USER_ACCESS.UID, ProjectUserAccess.PROJECT_USER_ACCESS.PID }, true);
    public static final UniqueKey<PublicProjectRecord> KEY_PUBLIC_PROJECT_PRIMARY = Internal.createUniqueKey(PublicProject.PUBLIC_PROJECT, DSL.name("KEY_public_project_PRIMARY"), new TableField[] { PublicProject.PUBLIC_PROJECT.PID }, true);
    public static final UniqueKey<UserRecord> KEY_USER_EMAIL = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_email"), new TableField[] { User.USER.EMAIL }, true);
    public static final UniqueKey<UserRecord> KEY_USER_GOOGLE_ID = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_google_id"), new TableField[] { User.USER.GOOGLE_ID }, true);
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_PRIMARY"), new TableField[] { User.USER.UID }, true);
    public static final UniqueKey<UserConfigRecord> KEY_USER_CONFIG_PRIMARY = Internal.createUniqueKey(UserConfig.USER_CONFIG, DSL.name("KEY_user_config_PRIMARY"), new TableField[] { UserConfig.USER_CONFIG.UID, UserConfig.USER_CONFIG.KEY }, true);
    public static final UniqueKey<UserFileAccessRecord> KEY_USER_FILE_ACCESS_PRIMARY = Internal.createUniqueKey(UserFileAccess.USER_FILE_ACCESS, DSL.name("KEY_user_file_access_PRIMARY"), new TableField[] { UserFileAccess.USER_FILE_ACCESS.UID, UserFileAccess.USER_FILE_ACCESS.FID }, true);
    public static final UniqueKey<WorkflowRecord> KEY_WORKFLOW_PRIMARY = Internal.createUniqueKey(Workflow.WORKFLOW, DSL.name("KEY_workflow_PRIMARY"), new TableField[] { Workflow.WORKFLOW.WID }, true);
    public static final UniqueKey<WorkflowExecutionsRecord> KEY_WORKFLOW_EXECUTIONS_PRIMARY = Internal.createUniqueKey(WorkflowExecutions.WORKFLOW_EXECUTIONS, DSL.name("KEY_workflow_executions_PRIMARY"), new TableField[] { WorkflowExecutions.WORKFLOW_EXECUTIONS.EID }, true);
    public static final UniqueKey<WorkflowOfProjectRecord> KEY_WORKFLOW_OF_PROJECT_PRIMARY = Internal.createUniqueKey(WorkflowOfProject.WORKFLOW_OF_PROJECT, DSL.name("KEY_workflow_of_project_PRIMARY"), new TableField[] { WorkflowOfProject.WORKFLOW_OF_PROJECT.WID, WorkflowOfProject.WORKFLOW_OF_PROJECT.PID }, true);
    public static final UniqueKey<WorkflowOfUserRecord> KEY_WORKFLOW_OF_USER_PRIMARY = Internal.createUniqueKey(WorkflowOfUser.WORKFLOW_OF_USER, DSL.name("KEY_workflow_of_user_PRIMARY"), new TableField[] { WorkflowOfUser.WORKFLOW_OF_USER.UID, WorkflowOfUser.WORKFLOW_OF_USER.WID }, true);
    public static final UniqueKey<WorkflowRuntimeStatisticsRecord> KEY_WORKFLOW_RUNTIME_STATISTICS_PRIMARY = Internal.createUniqueKey(WorkflowRuntimeStatistics.WORKFLOW_RUNTIME_STATISTICS, DSL.name("KEY_workflow_runtime_statistics_PRIMARY"), new TableField[] { WorkflowRuntimeStatistics.WORKFLOW_RUNTIME_STATISTICS.WORKFLOW_ID, WorkflowRuntimeStatistics.WORKFLOW_RUNTIME_STATISTICS.EXECUTION_ID, WorkflowRuntimeStatistics.WORKFLOW_RUNTIME_STATISTICS.OPERATOR_ID, WorkflowRuntimeStatistics.WORKFLOW_RUNTIME_STATISTICS.TIME }, true);
    public static final UniqueKey<WorkflowUserAccessRecord> KEY_WORKFLOW_USER_ACCESS_PRIMARY = Internal.createUniqueKey(WorkflowUserAccess.WORKFLOW_USER_ACCESS, DSL.name("KEY_workflow_user_access_PRIMARY"), new TableField[] { WorkflowUserAccess.WORKFLOW_USER_ACCESS.UID, WorkflowUserAccess.WORKFLOW_USER_ACCESS.WID }, true);
    public static final UniqueKey<WorkflowVersionRecord> KEY_WORKFLOW_VERSION_PRIMARY = Internal.createUniqueKey(WorkflowVersion.WORKFLOW_VERSION, DSL.name("KEY_workflow_version_PRIMARY"), new TableField[] { WorkflowVersion.WORKFLOW_VERSION.VID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<FileRecord, UserRecord> FILE_IBFK_1 = Internal.createForeignKey(File.FILE, DSL.name("file_ibfk_1"), new TableField[] { File.FILE.OWNER_UID }, Keys.KEY_USER_PRIMARY, new TableField[] { User.USER.UID }, true);
    public static final ForeignKey<FileOfProjectRecord, FileRecord> FILE_OF_PROJECT_IBFK_1 = Internal.createForeignKey(FileOfProject.FILE_OF_PROJECT, DSL.name("file_of_project_ibfk_1"), new TableField[] { FileOfProject.FILE_OF_PROJECT.FID }, Keys.KEY_FILE_PRIMARY, new TableField[] { File.FILE.FID }, true);
    public static final ForeignKey<FileOfProjectRecord, ProjectRecord> FILE_OF_PROJECT_IBFK_2 = Internal.createForeignKey(FileOfProject.FILE_OF_PROJECT, DSL.name("file_of_project_ibfk_2"), new TableField[] { FileOfProject.FILE_OF_PROJECT.PID }, Keys.KEY_PROJECT_PRIMARY, new TableField[] { Project.PROJECT.PID }, true);
    public static final ForeignKey<FileOfWorkflowRecord, FileRecord> FILE_OF_WORKFLOW_IBFK_1 = Internal.createForeignKey(FileOfWorkflow.FILE_OF_WORKFLOW, DSL.name("file_of_workflow_ibfk_1"), new TableField[] { FileOfWorkflow.FILE_OF_WORKFLOW.FID }, Keys.KEY_FILE_PRIMARY, new TableField[] { File.FILE.FID }, true);
    public static final ForeignKey<FileOfWorkflowRecord, WorkflowRecord> FILE_OF_WORKFLOW_IBFK_2 = Internal.createForeignKey(FileOfWorkflow.FILE_OF_WORKFLOW, DSL.name("file_of_workflow_ibfk_2"), new TableField[] { FileOfWorkflow.FILE_OF_WORKFLOW.WID }, Keys.KEY_WORKFLOW_PRIMARY, new TableField[] { Workflow.WORKFLOW.WID }, true);
    public static final ForeignKey<ProjectRecord, UserRecord> PROJECT_IBFK_1 = Internal.createForeignKey(Project.PROJECT, DSL.name("project_ibfk_1"), new TableField[] { Project.PROJECT.OWNER_ID }, Keys.KEY_USER_PRIMARY, new TableField[] { User.USER.UID }, true);
    public static final ForeignKey<ProjectUserAccessRecord, UserRecord> PROJECT_USER_ACCESS_IBFK_1 = Internal.createForeignKey(ProjectUserAccess.PROJECT_USER_ACCESS, DSL.name("project_user_access_ibfk_1"), new TableField[] { ProjectUserAccess.PROJECT_USER_ACCESS.UID }, Keys.KEY_USER_PRIMARY, new TableField[] { User.USER.UID }, true);
    public static final ForeignKey<ProjectUserAccessRecord, ProjectRecord> PROJECT_USER_ACCESS_IBFK_2 = Internal.createForeignKey(ProjectUserAccess.PROJECT_USER_ACCESS, DSL.name("project_user_access_ibfk_2"), new TableField[] { ProjectUserAccess.PROJECT_USER_ACCESS.PID }, Keys.KEY_PROJECT_PRIMARY, new TableField[] { Project.PROJECT.PID }, true);
    public static final ForeignKey<PublicProjectRecord, ProjectRecord> PUBLIC_PROJECT_IBFK_1 = Internal.createForeignKey(PublicProject.PUBLIC_PROJECT, DSL.name("public_project_ibfk_1"), new TableField[] { PublicProject.PUBLIC_PROJECT.PID }, Keys.KEY_PROJECT_PRIMARY, new TableField[] { Project.PROJECT.PID }, true);
    public static final ForeignKey<UserConfigRecord, UserRecord> USER_CONFIG_IBFK_1 = Internal.createForeignKey(UserConfig.USER_CONFIG, DSL.name("user_config_ibfk_1"), new TableField[] { UserConfig.USER_CONFIG.UID }, Keys.KEY_USER_PRIMARY, new TableField[] { User.USER.UID }, true);
    public static final ForeignKey<UserFileAccessRecord, UserRecord> USER_FILE_ACCESS_IBFK_1 = Internal.createForeignKey(UserFileAccess.USER_FILE_ACCESS, DSL.name("user_file_access_ibfk_1"), new TableField[] { UserFileAccess.USER_FILE_ACCESS.UID }, Keys.KEY_USER_PRIMARY, new TableField[] { User.USER.UID }, true);
    public static final ForeignKey<UserFileAccessRecord, FileRecord> USER_FILE_ACCESS_IBFK_2 = Internal.createForeignKey(UserFileAccess.USER_FILE_ACCESS, DSL.name("user_file_access_ibfk_2"), new TableField[] { UserFileAccess.USER_FILE_ACCESS.FID }, Keys.KEY_FILE_PRIMARY, new TableField[] { File.FILE.FID }, true);
    public static final ForeignKey<WorkflowExecutionsRecord, WorkflowVersionRecord> WORKFLOW_EXECUTIONS_IBFK_1 = Internal.createForeignKey(WorkflowExecutions.WORKFLOW_EXECUTIONS, DSL.name("workflow_executions_ibfk_1"), new TableField[] { WorkflowExecutions.WORKFLOW_EXECUTIONS.VID }, Keys.KEY_WORKFLOW_VERSION_PRIMARY, new TableField[] { WorkflowVersion.WORKFLOW_VERSION.VID }, true);
    public static final ForeignKey<WorkflowExecutionsRecord, UserRecord> WORKFLOW_EXECUTIONS_IBFK_2 = Internal.createForeignKey(WorkflowExecutions.WORKFLOW_EXECUTIONS, DSL.name("workflow_executions_ibfk_2"), new TableField[] { WorkflowExecutions.WORKFLOW_EXECUTIONS.UID }, Keys.KEY_USER_PRIMARY, new TableField[] { User.USER.UID }, true);
    public static final ForeignKey<WorkflowOfProjectRecord, WorkflowRecord> WORKFLOW_OF_PROJECT_IBFK_1 = Internal.createForeignKey(WorkflowOfProject.WORKFLOW_OF_PROJECT, DSL.name("workflow_of_project_ibfk_1"), new TableField[] { WorkflowOfProject.WORKFLOW_OF_PROJECT.WID }, Keys.KEY_WORKFLOW_PRIMARY, new TableField[] { Workflow.WORKFLOW.WID }, true);
    public static final ForeignKey<WorkflowOfProjectRecord, ProjectRecord> WORKFLOW_OF_PROJECT_IBFK_2 = Internal.createForeignKey(WorkflowOfProject.WORKFLOW_OF_PROJECT, DSL.name("workflow_of_project_ibfk_2"), new TableField[] { WorkflowOfProject.WORKFLOW_OF_PROJECT.PID }, Keys.KEY_PROJECT_PRIMARY, new TableField[] { Project.PROJECT.PID }, true);
    public static final ForeignKey<WorkflowOfUserRecord, UserRecord> WORKFLOW_OF_USER_IBFK_1 = Internal.createForeignKey(WorkflowOfUser.WORKFLOW_OF_USER, DSL.name("workflow_of_user_ibfk_1"), new TableField[] { WorkflowOfUser.WORKFLOW_OF_USER.UID }, Keys.KEY_USER_PRIMARY, new TableField[] { User.USER.UID }, true);
    public static final ForeignKey<WorkflowOfUserRecord, WorkflowRecord> WORKFLOW_OF_USER_IBFK_2 = Internal.createForeignKey(WorkflowOfUser.WORKFLOW_OF_USER, DSL.name("workflow_of_user_ibfk_2"), new TableField[] { WorkflowOfUser.WORKFLOW_OF_USER.WID }, Keys.KEY_WORKFLOW_PRIMARY, new TableField[] { Workflow.WORKFLOW.WID }, true);
    public static final ForeignKey<WorkflowRuntimeStatisticsRecord, WorkflowRecord> WORKFLOW_RUNTIME_STATISTICS_IBFK_1 = Internal.createForeignKey(WorkflowRuntimeStatistics.WORKFLOW_RUNTIME_STATISTICS, DSL.name("workflow_runtime_statistics_ibfk_1"), new TableField[] { WorkflowRuntimeStatistics.WORKFLOW_RUNTIME_STATISTICS.WORKFLOW_ID }, Keys.KEY_WORKFLOW_PRIMARY, new TableField[] { Workflow.WORKFLOW.WID }, true);
    public static final ForeignKey<WorkflowRuntimeStatisticsRecord, WorkflowExecutionsRecord> WORKFLOW_RUNTIME_STATISTICS_IBFK_2 = Internal.createForeignKey(WorkflowRuntimeStatistics.WORKFLOW_RUNTIME_STATISTICS, DSL.name("workflow_runtime_statistics_ibfk_2"), new TableField[] { WorkflowRuntimeStatistics.WORKFLOW_RUNTIME_STATISTICS.EXECUTION_ID }, Keys.KEY_WORKFLOW_EXECUTIONS_PRIMARY, new TableField[] { WorkflowExecutions.WORKFLOW_EXECUTIONS.EID }, true);
    public static final ForeignKey<WorkflowUserAccessRecord, UserRecord> WORKFLOW_USER_ACCESS_IBFK_1 = Internal.createForeignKey(WorkflowUserAccess.WORKFLOW_USER_ACCESS, DSL.name("workflow_user_access_ibfk_1"), new TableField[] { WorkflowUserAccess.WORKFLOW_USER_ACCESS.UID }, Keys.KEY_USER_PRIMARY, new TableField[] { User.USER.UID }, true);
    public static final ForeignKey<WorkflowUserAccessRecord, WorkflowRecord> WORKFLOW_USER_ACCESS_IBFK_2 = Internal.createForeignKey(WorkflowUserAccess.WORKFLOW_USER_ACCESS, DSL.name("workflow_user_access_ibfk_2"), new TableField[] { WorkflowUserAccess.WORKFLOW_USER_ACCESS.WID }, Keys.KEY_WORKFLOW_PRIMARY, new TableField[] { Workflow.WORKFLOW.WID }, true);
    public static final ForeignKey<WorkflowVersionRecord, WorkflowRecord> WORKFLOW_VERSION_IBFK_1 = Internal.createForeignKey(WorkflowVersion.WORKFLOW_VERSION, DSL.name("workflow_version_ibfk_1"), new TableField[] { WorkflowVersion.WORKFLOW_VERSION.WID }, Keys.KEY_WORKFLOW_PRIMARY, new TableField[] { Workflow.WORKFLOW.WID }, true);
}
