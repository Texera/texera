/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.web.model.jooq.generated.tables.records;


import edu.uci.ics.texera.web.model.jooq.generated.tables.DatasetOfEnvironment;
import edu.uci.ics.texera.web.model.jooq.generated.tables.interfaces.IDatasetOfEnvironment;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DatasetOfEnvironmentRecord extends UpdatableRecordImpl<DatasetOfEnvironmentRecord> implements Record3<UInteger, UInteger, UInteger>, IDatasetOfEnvironment {

    private static final long serialVersionUID = -1006305947;

    /**
     * Setter for <code>texera_db.dataset_of_environment.did</code>.
     */
    @Override
    public void setDid(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>texera_db.dataset_of_environment.did</code>.
     */
    @Override
    public UInteger getDid() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>texera_db.dataset_of_environment.eid</code>.
     */
    @Override
    public void setEid(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>texera_db.dataset_of_environment.eid</code>.
     */
    @Override
    public UInteger getEid() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>texera_db.dataset_of_environment.dvid</code>.
     */
    @Override
    public void setDvid(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>texera_db.dataset_of_environment.dvid</code>.
     */
    @Override
    public UInteger getDvid() {
        return (UInteger) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UInteger, UInteger> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<UInteger, UInteger, UInteger> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<UInteger, UInteger, UInteger> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return DatasetOfEnvironment.DATASET_OF_ENVIRONMENT.DID;
    }

    @Override
    public Field<UInteger> field2() {
        return DatasetOfEnvironment.DATASET_OF_ENVIRONMENT.EID;
    }

    @Override
    public Field<UInteger> field3() {
        return DatasetOfEnvironment.DATASET_OF_ENVIRONMENT.DVID;
    }

    @Override
    public UInteger component1() {
        return getDid();
    }

    @Override
    public UInteger component2() {
        return getEid();
    }

    @Override
    public UInteger component3() {
        return getDvid();
    }

    @Override
    public UInteger value1() {
        return getDid();
    }

    @Override
    public UInteger value2() {
        return getEid();
    }

    @Override
    public UInteger value3() {
        return getDvid();
    }

    @Override
    public DatasetOfEnvironmentRecord value1(UInteger value) {
        setDid(value);
        return this;
    }

    @Override
    public DatasetOfEnvironmentRecord value2(UInteger value) {
        setEid(value);
        return this;
    }

    @Override
    public DatasetOfEnvironmentRecord value3(UInteger value) {
        setDvid(value);
        return this;
    }

    @Override
    public DatasetOfEnvironmentRecord values(UInteger value1, UInteger value2, UInteger value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDatasetOfEnvironment from) {
        setDid(from.getDid());
        setEid(from.getEid());
        setDvid(from.getDvid());
    }

    @Override
    public <E extends IDatasetOfEnvironment> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DatasetOfEnvironmentRecord
     */
    public DatasetOfEnvironmentRecord() {
        super(DatasetOfEnvironment.DATASET_OF_ENVIRONMENT);
    }

    /**
     * Create a detached, initialised DatasetOfEnvironmentRecord
     */
    public DatasetOfEnvironmentRecord(UInteger did, UInteger eid, UInteger dvid) {
        super(DatasetOfEnvironment.DATASET_OF_ENVIRONMENT);

        set(0, did);
        set(1, eid);
        set(2, dvid);
    }
}
