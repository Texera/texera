/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.web.model.jooq.generated.tables;


import edu.uci.ics.texera.web.model.jooq.generated.Indexes;
import edu.uci.ics.texera.web.model.jooq.generated.Keys;
import edu.uci.ics.texera.web.model.jooq.generated.TexeraDb;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.WorkflowSnapshotRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkflowSnapshot extends TableImpl<WorkflowSnapshotRecord> {

    private static final long serialVersionUID = 28541910;

    /**
     * The reference instance of <code>texera_db.workflow_snapshot</code>
     */
    public static final WorkflowSnapshot WORKFLOW_SNAPSHOT = new WorkflowSnapshot();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WorkflowSnapshotRecord> getRecordType() {
        return WorkflowSnapshotRecord.class;
    }

    /**
     * The column <code>texera_db.workflow_snapshot.sid</code>.
     */
    public final TableField<WorkflowSnapshotRecord, UInteger> SID = createField(DSL.name("sid"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>texera_db.workflow_snapshot.wid</code>.
     */
    public final TableField<WorkflowSnapshotRecord, UInteger> WID = createField(DSL.name("wid"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>texera_db.workflow_snapshot.snapshot</code>.
     */
    public final TableField<WorkflowSnapshotRecord, byte[]> SNAPSHOT = createField(DSL.name("snapshot"), org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * Create a <code>texera_db.workflow_snapshot</code> table reference
     */
    public WorkflowSnapshot() {
        this(DSL.name("workflow_snapshot"), null);
    }

    /**
     * Create an aliased <code>texera_db.workflow_snapshot</code> table reference
     */
    public WorkflowSnapshot(String alias) {
        this(DSL.name(alias), WORKFLOW_SNAPSHOT);
    }

    /**
     * Create an aliased <code>texera_db.workflow_snapshot</code> table reference
     */
    public WorkflowSnapshot(Name alias) {
        this(alias, WORKFLOW_SNAPSHOT);
    }

    private WorkflowSnapshot(Name alias, Table<WorkflowSnapshotRecord> aliased) {
        this(alias, aliased, null);
    }

    private WorkflowSnapshot(Name alias, Table<WorkflowSnapshotRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> WorkflowSnapshot(Table<O> child, ForeignKey<O, WorkflowSnapshotRecord> key) {
        super(child, key, WORKFLOW_SNAPSHOT);
    }

    @Override
    public Schema getSchema() {
        return TexeraDb.TEXERA_DB;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WORKFLOW_SNAPSHOT_PRIMARY);
    }

    @Override
    public Identity<WorkflowSnapshotRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_WORKFLOW_SNAPSHOT;
    }

    @Override
    public UniqueKey<WorkflowSnapshotRecord> getPrimaryKey() {
        return Keys.KEY_WORKFLOW_SNAPSHOT_PRIMARY;
    }

    @Override
    public List<UniqueKey<WorkflowSnapshotRecord>> getKeys() {
        return Arrays.<UniqueKey<WorkflowSnapshotRecord>>asList(Keys.KEY_WORKFLOW_SNAPSHOT_PRIMARY);
    }

    @Override
    public WorkflowSnapshot as(String alias) {
        return new WorkflowSnapshot(DSL.name(alias), this);
    }

    @Override
    public WorkflowSnapshot as(Name alias) {
        return new WorkflowSnapshot(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WorkflowSnapshot rename(String name) {
        return new WorkflowSnapshot(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WorkflowSnapshot rename(Name name) {
        return new WorkflowSnapshot(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<UInteger, UInteger, byte[]> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
