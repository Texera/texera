/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.web.model.jooq.generated.tables.records;


import edu.uci.ics.texera.web.model.jooq.generated.tables.Role;
import edu.uci.ics.texera.web.model.jooq.generated.tables.interfaces.IRole;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleRecord extends UpdatableRecordImpl<RoleRecord> implements Record2<String, String>, IRole {

    private static final long serialVersionUID = -2067527622;

    /**
     * Setter for <code>texera_db.role.role_name</code>.
     */
    @Override
    public void setRoleName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>texera_db.role.role_name</code>.
     */
    @Override
    public String getRoleName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>texera_db.role.role_description</code>.
     */
    @Override
    public void setRoleDescription(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>texera_db.role.role_description</code>.
     */
    @Override
    public String getRoleDescription() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Role.ROLE.ROLE_NAME;
    }

    @Override
    public Field<String> field2() {
        return Role.ROLE.ROLE_DESCRIPTION;
    }

    @Override
    public String component1() {
        return getRoleName();
    }

    @Override
    public String component2() {
        return getRoleDescription();
    }

    @Override
    public String value1() {
        return getRoleName();
    }

    @Override
    public String value2() {
        return getRoleDescription();
    }

    @Override
    public RoleRecord value1(String value) {
        setRoleName(value);
        return this;
    }

    @Override
    public RoleRecord value2(String value) {
        setRoleDescription(value);
        return this;
    }

    @Override
    public RoleRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IRole from) {
        setRoleName(from.getRoleName());
        setRoleDescription(from.getRoleDescription());
    }

    @Override
    public <E extends IRole> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoleRecord
     */
    public RoleRecord() {
        super(Role.ROLE);
    }

    /**
     * Create a detached, initialised RoleRecord
     */
    public RoleRecord(String roleName, String roleDescription) {
        super(Role.ROLE);

        set(0, roleName);
        set(1, roleDescription);
    }
}
