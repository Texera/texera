/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.web.model.jooq.generated.tables.records;


import edu.uci.ics.texera.web.model.jooq.generated.tables.Commentbox;
import edu.uci.ics.texera.web.model.jooq.generated.tables.interfaces.ICommentbox;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentboxRecord extends UpdatableRecordImpl<CommentboxRecord> implements Record3<UInteger, UInteger, String>, ICommentbox {

    private static final long serialVersionUID = -1077072199;

    /**
     * Setter for <code>texera_db.commentbox.cid</code>.
     */
    @Override
    public void setCid(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>texera_db.commentbox.cid</code>.
     */
    @Override
    public UInteger getCid() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>texera_db.commentbox.wid</code>.
     */
    @Override
    public void setWid(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>texera_db.commentbox.wid</code>.
     */
    @Override
    public UInteger getWid() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>texera_db.commentbox.content</code>.
     */
    @Override
    public void setContent(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>texera_db.commentbox.content</code>.
     */
    @Override
    public String getContent() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<UInteger, UInteger, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<UInteger, UInteger, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return Commentbox.COMMENTBOX.CID;
    }

    @Override
    public Field<UInteger> field2() {
        return Commentbox.COMMENTBOX.WID;
    }

    @Override
    public Field<String> field3() {
        return Commentbox.COMMENTBOX.CONTENT;
    }

    @Override
    public UInteger component1() {
        return getCid();
    }

    @Override
    public UInteger component2() {
        return getWid();
    }

    @Override
    public String component3() {
        return getContent();
    }

    @Override
    public UInteger value1() {
        return getCid();
    }

    @Override
    public UInteger value2() {
        return getWid();
    }

    @Override
    public String value3() {
        return getContent();
    }

    @Override
    public CommentboxRecord value1(UInteger value) {
        setCid(value);
        return this;
    }

    @Override
    public CommentboxRecord value2(UInteger value) {
        setWid(value);
        return this;
    }

    @Override
    public CommentboxRecord value3(String value) {
        setContent(value);
        return this;
    }

    @Override
    public CommentboxRecord values(UInteger value1, UInteger value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ICommentbox from) {
        setCid(from.getCid());
        setWid(from.getWid());
        setContent(from.getContent());
    }

    @Override
    public <E extends ICommentbox> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentboxRecord
     */
    public CommentboxRecord() {
        super(Commentbox.COMMENTBOX);
    }

    /**
     * Create a detached, initialised CommentboxRecord
     */
    public CommentboxRecord(UInteger cid, UInteger wid, String content) {
        super(Commentbox.COMMENTBOX);

        set(0, cid);
        set(1, wid);
        set(2, content);
    }
}
