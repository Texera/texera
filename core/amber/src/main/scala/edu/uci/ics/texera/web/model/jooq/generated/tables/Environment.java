/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.web.model.jooq.generated.tables;


import edu.uci.ics.texera.web.model.jooq.generated.Indexes;
import edu.uci.ics.texera.web.model.jooq.generated.Keys;
import edu.uci.ics.texera.web.model.jooq.generated.TexeraDb;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.EnvironmentRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Environment extends TableImpl<EnvironmentRecord> {

    private static final long serialVersionUID = 721486290;

    /**
     * The reference instance of <code>texera_db.environment</code>
     */
    public static final Environment ENVIRONMENT = new Environment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EnvironmentRecord> getRecordType() {
        return EnvironmentRecord.class;
    }

    /**
     * The column <code>texera_db.environment.eid</code>.
     */
    public final TableField<EnvironmentRecord, UInteger> EID = createField(DSL.name("eid"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>texera_db.environment.owner_uid</code>.
     */
    public final TableField<EnvironmentRecord, UInteger> OWNER_UID = createField(DSL.name("owner_uid"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>texera_db.environment.name</code>.
     */
    public final TableField<EnvironmentRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("Untitled Environment", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>texera_db.environment.description</code>.
     */
    public final TableField<EnvironmentRecord, String> DESCRIPTION = createField(DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>texera_db.environment.creation_time</code>.
     */
    public final TableField<EnvironmentRecord, Timestamp> CREATION_TIME = createField(DSL.name("creation_time"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>texera_db.environment</code> table reference
     */
    public Environment() {
        this(DSL.name("environment"), null);
    }

    /**
     * Create an aliased <code>texera_db.environment</code> table reference
     */
    public Environment(String alias) {
        this(DSL.name(alias), ENVIRONMENT);
    }

    /**
     * Create an aliased <code>texera_db.environment</code> table reference
     */
    public Environment(Name alias) {
        this(alias, ENVIRONMENT);
    }

    private Environment(Name alias, Table<EnvironmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private Environment(Name alias, Table<EnvironmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Environment(Table<O> child, ForeignKey<O, EnvironmentRecord> key) {
        super(child, key, ENVIRONMENT);
    }

    @Override
    public Schema getSchema() {
        return TexeraDb.TEXERA_DB;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ENVIRONMENT_OWNER_UID, Indexes.ENVIRONMENT_PRIMARY);
    }

    @Override
    public Identity<EnvironmentRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_ENVIRONMENT;
    }

    @Override
    public UniqueKey<EnvironmentRecord> getPrimaryKey() {
        return Keys.KEY_ENVIRONMENT_PRIMARY;
    }

    @Override
    public List<UniqueKey<EnvironmentRecord>> getKeys() {
        return Arrays.<UniqueKey<EnvironmentRecord>>asList(Keys.KEY_ENVIRONMENT_PRIMARY);
    }

    @Override
    public List<ForeignKey<EnvironmentRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EnvironmentRecord, ?>>asList(Keys.ENVIRONMENT_IBFK_1);
    }

    public User user() {
        return new User(this, Keys.ENVIRONMENT_IBFK_1);
    }

    @Override
    public Environment as(String alias) {
        return new Environment(DSL.name(alias), this);
    }

    @Override
    public Environment as(Name alias) {
        return new Environment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Environment rename(String name) {
        return new Environment(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Environment rename(Name name) {
        return new Environment(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<UInteger, UInteger, String, String, Timestamp> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
