/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.web.model.jooq.generated.tables.records;


import edu.uci.ics.texera.web.model.jooq.generated.tables.User;
import edu.uci.ics.texera.web.model.jooq.generated.tables.interfaces.IUser;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record4<String, UInteger, String, String>, IUser {

    private static final long serialVersionUID = 1058000800;

    /**
     * Setter for <code>texera_db.user.name</code>.
     */
    @Override
    public void setName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>texera_db.user.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>texera_db.user.uid</code>.
     */
    @Override
    public void setUid(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>texera_db.user.uid</code>.
     */
    @Override
    public UInteger getUid() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>texera_db.user.password</code>.
     */
    @Override
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>texera_db.user.password</code>.
     */
    @Override
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>texera_db.user.google_id</code>.
     */
    @Override
    public void setGoogleId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>texera_db.user.google_id</code>.
     */
    @Override
    public String getGoogleId() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, UInteger, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, UInteger, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return User.USER.NAME;
    }

    @Override
    public Field<UInteger> field2() {
        return User.USER.UID;
    }

    @Override
    public Field<String> field3() {
        return User.USER.PASSWORD;
    }

    @Override
    public Field<String> field4() {
        return User.USER.GOOGLE_ID;
    }

    @Override
    public String component1() {
        return getName();
    }

    @Override
    public UInteger component2() {
        return getUid();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public String component4() {
        return getGoogleId();
    }

    @Override
    public String value1() {
        return getName();
    }

    @Override
    public UInteger value2() {
        return getUid();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public String value4() {
        return getGoogleId();
    }

    @Override
    public UserRecord value1(String value) {
        setName(value);
        return this;
    }

    @Override
    public UserRecord value2(UInteger value) {
        setUid(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setGoogleId(value);
        return this;
    }

    @Override
    public UserRecord values(String value1, UInteger value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUser from) {
        setName(from.getName());
        setUid(from.getUid());
        setPassword(from.getPassword());
        setGoogleId(from.getGoogleId());
    }

    @Override
    public <E extends IUser> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(String name, UInteger uid, String password, String googleId) {
        super(User.USER);

        set(0, name);
        set(1, uid);
        set(2, password);
        set(3, googleId);
    }
}
